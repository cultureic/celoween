{"id":"8cacf1925e182a49f4681a631e3d1a87","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/ContestFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title ContestFactory\n * @dev Creates and manages Halloween contest competitions on Celo\n */\ncontract ContestFactory is Ownable, ReentrancyGuard {\n    \n    struct Contest {\n        uint256 id;\n        address creator;\n        string title;\n        string metadataURI;      // IPFS hash for full contest details\n        uint256 prizePool;\n        address prizeToken;      // cUSD, CELO, or custom token\n        uint256 startTime;\n        uint256 endTime;\n        uint256 votingEndTime;\n        ContestStatus status;\n        uint256 submissionCount;\n        uint256 totalVotes;\n    }\n    \n    enum ContestStatus {\n        Draft,\n        Active,\n        Voting,\n        Ended,\n        Cancelled\n    }\n    \n    // State variables\n    uint256 private _contestIdCounter;\n    mapping(uint256 => Contest) public contests;\n    mapping(address => uint256[]) public creatorContests;\n    \n    // Platform fee (in basis points, e.g., 250 = 2.5%)\n    uint256 public platformFeeBps = 250;\n    address public feeCollector;\n    \n    // Events\n    event ContestCreated(\n        uint256 indexed contestId,\n        address indexed creator,\n        string title,\n        uint256 prizePool,\n        uint256 startTime,\n        uint256 endTime\n    );\n    \n    event ContestStatusChanged(\n        uint256 indexed contestId,\n        ContestStatus oldStatus,\n        ContestStatus newStatus\n    );\n    \n    event PrizePoolIncreased(\n        uint256 indexed contestId,\n        address indexed contributor,\n        uint256 amount,\n        uint256 newTotal\n    );\n    \n    event PlatformFeeUpdated(uint256 oldFee, uint256 newFee);\n    \n    constructor(address _feeCollector) Ownable(msg.sender) {\n        feeCollector = _feeCollector;\n    }\n    \n    /**\n     * @dev Create a new contest\n     */\n    function createContest(\n        string memory _title,\n        string memory _metadataURI,\n        uint256 _prizePool,\n        address _prizeToken,\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _votingEndTime\n    ) external payable nonReentrant returns (uint256) {\n        require(_startTime > block.timestamp, \"Start time must be in future\");\n        require(_endTime > _startTime, \"End time must be after start\");\n        require(_votingEndTime > _endTime, \"Voting end must be after contest end\");\n        require(_prizePool > 0, \"Prize pool must be greater than 0\");\n        \n        // If prize token is address(0), it means native CELO\n        if (_prizeToken == address(0)) {\n            require(msg.value >= _prizePool, \"Insufficient CELO for prize pool\");\n        }\n        \n        uint256 contestId = _contestIdCounter++;\n        \n        contests[contestId] = Contest({\n            id: contestId,\n            creator: msg.sender,\n            title: _title,\n            metadataURI: _metadataURI,\n            prizePool: _prizePool,\n            prizeToken: _prizeToken,\n            startTime: _startTime,\n            endTime: _endTime,\n            votingEndTime: _votingEndTime,\n            status: ContestStatus.Draft,\n            submissionCount: 0,\n            totalVotes: 0\n        });\n        \n        creatorContests[msg.sender].push(contestId);\n        \n        emit ContestCreated(\n            contestId,\n            msg.sender,\n            _title,\n            _prizePool,\n            _startTime,\n            _endTime\n        );\n        \n        return contestId;\n    }\n    \n    /**\n     * @dev Update contest status\n     */\n    function updateContestStatus(\n        uint256 _contestId,\n        ContestStatus _newStatus\n    ) external {\n        Contest storage contest = contests[_contestId];\n        require(contest.creator == msg.sender || msg.sender == owner(), \"Not authorized\");\n        \n        ContestStatus oldStatus = contest.status;\n        contest.status = _newStatus;\n        \n        emit ContestStatusChanged(_contestId, oldStatus, _newStatus);\n    }\n    \n    /**\n     * @dev Increase prize pool\n     */\n    function increasePrizePool(uint256 _contestId) external payable nonReentrant {\n        require(msg.value > 0, \"Must send CELO\");\n        Contest storage contest = contests[_contestId];\n        require(contest.prizeToken == address(0), \"Contest uses token, not CELO\");\n        require(contest.status != ContestStatus.Ended, \"Contest ended\");\n        require(contest.status != ContestStatus.Cancelled, \"Contest cancelled\");\n        \n        contest.prizePool += msg.value;\n        \n        emit PrizePoolIncreased(_contestId, msg.sender, msg.value, contest.prizePool);\n    }\n    \n    /**\n     * @dev Update submission count (called by VotingContract)\n     */\n    function incrementSubmissionCount(uint256 _contestId) external {\n        // In production, add access control for VotingContract\n        contests[_contestId].submissionCount++;\n    }\n    \n    /**\n     * @dev Update vote count (called by VotingContract)\n     */\n    function incrementVoteCount(uint256 _contestId) external {\n        // In production, add access control for VotingContract\n        contests[_contestId].totalVotes++;\n    }\n    \n    /**\n     * @dev Get contest details\n     */\n    function getContest(uint256 _contestId) external view returns (Contest memory) {\n        return contests[_contestId];\n    }\n    \n    /**\n     * @dev Get contests created by an address\n     */\n    function getCreatorContests(address _creator) external view returns (uint256[] memory) {\n        return creatorContests[_creator];\n    }\n    \n    /**\n     * @dev Get total contest count\n     */\n    function getTotalContests() external view returns (uint256) {\n        return _contestIdCounter;\n    }\n    \n    /**\n     * @dev Check if contest is active\n     */\n    function isContestActive(uint256 _contestId) public view returns (bool) {\n        Contest memory contest = contests[_contestId];\n        return contest.status == ContestStatus.Active &&\n               block.timestamp >= contest.startTime &&\n               block.timestamp <= contest.endTime;\n    }\n    \n    /**\n     * @dev Check if voting is active\n     */\n    function isVotingActive(uint256 _contestId) public view returns (bool) {\n        Contest memory contest = contests[_contestId];\n        return contest.status == ContestStatus.Voting &&\n               block.timestamp > contest.endTime &&\n               block.timestamp <= contest.votingEndTime;\n    }\n    \n    /**\n     * @dev Update platform fee (owner only)\n     */\n    function updatePlatformFee(uint256 _newFeeBps) external onlyOwner {\n        require(_newFeeBps <= 1000, \"Fee too high (max 10%)\");\n        uint256 oldFee = platformFeeBps;\n        platformFeeBps = _newFeeBps;\n        emit PlatformFeeUpdated(oldFee, _newFeeBps);\n    }\n    \n    /**\n     * @dev Update fee collector (owner only)\n     */\n    function updateFeeCollector(address _newCollector) external onlyOwner {\n        require(_newCollector != address(0), \"Invalid address\");\n        feeCollector = _newCollector;\n    }\n    \n    /**\n     * @dev Withdraw platform fees (owner only)\n     */\n    function withdrawFees() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No fees to withdraw\");\n        payable(feeCollector).transfer(balance);\n    }\n    \n    receive() external payable {}\n}\n"},"contracts/SimpleTest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract SimpleTest {\n    uint256 public number;\n    \n    constructor() {\n        number = 42;\n    }\n    \n    function setNumber(uint256 _number) public {\n        number = _number;\n    }\n}\n"},"contracts/VotingContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ninterface IContestFactory {\n    function isVotingActive(uint256 _contestId) external view returns (bool);\n    function incrementVoteCount(uint256 _contestId) external;\n    function incrementSubmissionCount(uint256 _contestId) external;\n}\n\n/**\n * @title VotingContract\n * @dev Handles submissions and gasless voting for contests\n */\ncontract VotingContract is Ownable, ReentrancyGuard {\n    \n    struct Submission {\n        uint256 id;\n        uint256 contestId;\n        address submitter;\n        string metadataURI;      // IPFS hash for submission content\n        uint256 voteCount;\n        uint256 timestamp;\n        bool exists;\n    }\n    \n    // State variables\n    IContestFactory public contestFactory;\n    uint256 private _submissionIdCounter;\n    \n    // Mappings\n    mapping(uint256 => Submission) public submissions;\n    mapping(uint256 => uint256[]) public contestSubmissions; // contestId => submissionIds\n    mapping(uint256 => mapping(address => uint256)) public userSubmission; // contestId => user => submissionId\n    mapping(uint256 => mapping(address => bool)) public hasVoted; // submissionId => voter => bool\n    mapping(uint256 => address[]) public submissionVoters; // submissionId => voters\n    \n    // Events\n    event SubmissionCreated(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed submitter,\n        string metadataURI\n    );\n    \n    event VoteCast(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed voter\n    );\n    \n    event VoteRemoved(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed voter\n    );\n    \n    constructor(address _contestFactory) Ownable(msg.sender) {\n        contestFactory = IContestFactory(_contestFactory);\n    }\n    \n    /**\n     * @dev Submit an entry to a contest\n     */\n    function submitEntry(\n        uint256 _contestId,\n        string memory _metadataURI\n    ) external nonReentrant returns (uint256) {\n        // Check if user already submitted to this contest\n        require(userSubmission[_contestId][msg.sender] == 0, \"Already submitted to this contest\");\n        \n        uint256 submissionId = _submissionIdCounter++;\n        \n        submissions[submissionId] = Submission({\n            id: submissionId,\n            contestId: _contestId,\n            submitter: msg.sender,\n            metadataURI: _metadataURI,\n            voteCount: 0,\n            timestamp: block.timestamp,\n            exists: true\n        });\n        \n        contestSubmissions[_contestId].push(submissionId);\n        userSubmission[_contestId][msg.sender] = submissionId;\n        \n        // Notify ContestFactory\n        contestFactory.incrementSubmissionCount(_contestId);\n        \n        emit SubmissionCreated(submissionId, _contestId, msg.sender, _metadataURI);\n        \n        return submissionId;\n    }\n    \n    /**\n     * @dev Cast a vote for a submission (gasless via Biconomy)\n     */\n    function vote(uint256 _submissionId) external nonReentrant {\n        Submission storage submission = submissions[_submissionId];\n        require(submission.exists, \"Submission does not exist\");\n        \n        uint256 contestId = submission.contestId;\n        \n        // Check voting is active\n        require(contestFactory.isVotingActive(contestId), \"Voting not active\");\n        \n        // Check user hasn't voted for this submission\n        require(!hasVoted[_submissionId][msg.sender], \"Already voted\");\n        \n        // Check user isn't voting for their own submission\n        require(submission.submitter != msg.sender, \"Cannot vote for own submission\");\n        \n        // Cast vote\n        hasVoted[_submissionId][msg.sender] = true;\n        submission.voteCount++;\n        submissionVoters[_submissionId].push(msg.sender);\n        \n        // Notify ContestFactory\n        contestFactory.incrementVoteCount(contestId);\n        \n        emit VoteCast(_submissionId, contestId, msg.sender);\n    }\n    \n    /**\n     * @dev Remove a vote (allow users to change their vote)\n     */\n    function removeVote(uint256 _submissionId) external nonReentrant {\n        Submission storage submission = submissions[_submissionId];\n        require(submission.exists, \"Submission does not exist\");\n        require(hasVoted[_submissionId][msg.sender], \"Haven't voted yet\");\n        \n        uint256 contestId = submission.contestId;\n        require(contestFactory.isVotingActive(contestId), \"Voting not active\");\n        \n        // Remove vote\n        hasVoted[_submissionId][msg.sender] = false;\n        submission.voteCount--;\n        \n        // Remove from voters array (gas intensive, but keeps data clean)\n        address[] storage voters = submissionVoters[_submissionId];\n        for (uint256 i = 0; i < voters.length; i++) {\n            if (voters[i] == msg.sender) {\n                voters[i] = voters[voters.length - 1];\n                voters.pop();\n                break;\n            }\n        }\n        \n        emit VoteRemoved(_submissionId, contestId, msg.sender);\n    }\n    \n    /**\n     * @dev Get submission details\n     */\n    function getSubmission(uint256 _submissionId) external view returns (Submission memory) {\n        return submissions[_submissionId];\n    }\n    \n    /**\n     * @dev Get all submissions for a contest\n     */\n    function getContestSubmissions(uint256 _contestId) external view returns (uint256[] memory) {\n        return contestSubmissions[_contestId];\n    }\n    \n    /**\n     * @dev Get submission with vote details\n     */\n    function getSubmissionWithVotes(uint256 _submissionId) \n        external \n        view \n        returns (\n            Submission memory submission,\n            address[] memory voters\n        ) \n    {\n        return (submissions[_submissionId], submissionVoters[_submissionId]);\n    }\n    \n    /**\n     * @dev Get top submissions for a contest (sorted by votes)\n     */\n    function getTopSubmissions(uint256 _contestId, uint256 _limit) \n        external \n        view \n        returns (Submission[] memory) \n    {\n        uint256[] memory submissionIds = contestSubmissions[_contestId];\n        uint256 length = submissionIds.length;\n        \n        if (length == 0) {\n            return new Submission[](0);\n        }\n        \n        // Create array of submissions\n        Submission[] memory allSubmissions = new Submission[](length);\n        for (uint256 i = 0; i < length; i++) {\n            allSubmissions[i] = submissions[submissionIds[i]];\n        }\n        \n        // Simple bubble sort (works for small arrays)\n        for (uint256 i = 0; i < length; i++) {\n            for (uint256 j = i + 1; j < length; j++) {\n                if (allSubmissions[j].voteCount > allSubmissions[i].voteCount) {\n                    Submission memory temp = allSubmissions[i];\n                    allSubmissions[i] = allSubmissions[j];\n                    allSubmissions[j] = temp;\n                }\n            }\n        }\n        \n        // Return top N submissions\n        uint256 resultLength = _limit < length ? _limit : length;\n        Submission[] memory topSubmissions = new Submission[](resultLength);\n        for (uint256 i = 0; i < resultLength; i++) {\n            topSubmissions[i] = allSubmissions[i];\n        }\n        \n        return topSubmissions;\n    }\n    \n    /**\n     * @dev Check if user has voted for a submission\n     */\n    function hasUserVoted(uint256 _submissionId, address _user) external view returns (bool) {\n        return hasVoted[_submissionId][_user];\n    }\n    \n    /**\n     * @dev Get user's submission for a contest\n     */\n    function getUserSubmission(uint256 _contestId, address _user) external view returns (uint256) {\n        return userSubmission[_contestId][_user];\n    }\n    \n    /**\n     * @dev Get total submissions count\n     */\n    function getTotalSubmissions() external view returns (uint256) {\n        return _submissionIdCounter;\n    }\n    \n    /**\n     * @dev Update ContestFactory address (owner only)\n     */\n    function updateContestFactory(address _newFactory) external onlyOwner {\n        require(_newFactory != address(0), \"Invalid address\");\n        contestFactory = IContestFactory(_newFactory);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"135:894:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"ReentrancyGuard","nameLocation":"1048:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":183,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:2","nodeType":"VariableDeclaration","scope":246,"src":"1818:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":186,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1864:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_status","nameLocation":"1923:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1907:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1937:52:2","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":191,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2028:2:2"},"src":"1994:37:2"},{"body":{"id":198,"nodeType":"Block","src":"2051:38:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2071:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":197,"nodeType":"ExpressionStatement","src":"2061:21:2"}]},"id":199,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2048:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2051:0:2"},"scope":246,"src":"2037:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2490:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2500:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2500:21:2"},{"id":205,"nodeType":"PlaceholderStatement","src":"2531:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2542:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2542:20:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2095:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":210,"name":"nonReentrant","nameLocation":"2475:12:2","nodeType":"ModifierDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2487:2:2"},"src":"2466:103:2","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2614:268:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":214,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"IfStatement","src":"2698:86:2","trueBody":{"id":219,"nodeType":"Block","src":"2722:62:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2743:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"RevertStatement","src":"2736:37:2"}]}},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"2858:17:2"}]},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2614:0:2"},"scope":246,"src":"2575:307:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"2926:170:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3078:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"3068:21:2"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2915:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2926:0:2"},"scope":246,"src":"2888:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":244,"nodeType":"Block","src":"3339:42:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":241,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":239,"id":243,"nodeType":"Return","src":"3349:25:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3102:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3307:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"3333:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:2"},"scope":246,"src":"3275:106:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"1030:2353:2","usedErrors":[191],"usedEvents":[]}],"src":"109:3275:2"},"id":2},"contracts/ContestFactory.sol":{"ast":{"absolutePath":"contracts/ContestFactory.sol","exportedSymbols":{"ContestFactory":[810],"Context":[177],"Ownable":[147],"ReentrancyGuard":[246]},"id":811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":811,"sourceUnit":148,"src":"58:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":811,"sourceUnit":247,"src":"111:59:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"Ownable","nameLocations":["299:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"299:7:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"299:7:3"},{"baseName":{"id":254,"name":"ReentrancyGuard","nameLocations":["308:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"308:15:3"},"id":255,"nodeType":"InheritanceSpecifier","src":"308:15:3"}],"canonicalName":"ContestFactory","contractDependencies":[],"contractKind":"contract","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"172:99:3","text":" @title ContestFactory\n @dev Creates and manages Halloween contest competitions on Celo"},"fullyImplemented":true,"id":810,"linearizedBaseContracts":[810,246,147,177],"name":"ContestFactory","nameLocation":"281:14:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ContestFactory.Contest","id":281,"members":[{"constant":false,"id":257,"mutability":"mutable","name":"id","nameLocation":"368:2:3","nodeType":"VariableDeclaration","scope":281,"src":"360:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"creator","nameLocation":"388:7:3","nodeType":"VariableDeclaration","scope":281,"src":"380:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"title","nameLocation":"412:5:3","nodeType":"VariableDeclaration","scope":281,"src":"405:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":260,"name":"string","nodeType":"ElementaryTypeName","src":"405:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"metadataURI","nameLocation":"434:11:3","nodeType":"VariableDeclaration","scope":281,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":262,"name":"string","nodeType":"ElementaryTypeName","src":"427:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"prizePool","nameLocation":"506:9:3","nodeType":"VariableDeclaration","scope":281,"src":"498:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"prizeToken","nameLocation":"533:10:3","nodeType":"VariableDeclaration","scope":281,"src":"525:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"startTime","nameLocation":"597:9:3","nodeType":"VariableDeclaration","scope":281,"src":"589:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"589:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"endTime","nameLocation":"624:7:3","nodeType":"VariableDeclaration","scope":281,"src":"616:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"votingEndTime","nameLocation":"649:13:3","nodeType":"VariableDeclaration","scope":281,"src":"641:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"641:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"status","nameLocation":"686:6:3","nodeType":"VariableDeclaration","scope":281,"src":"672:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"typeName":{"id":275,"nodeType":"UserDefinedTypeName","pathNode":{"id":274,"name":"ContestStatus","nameLocations":["672:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"672:13:3"},"referencedDeclaration":287,"src":"672:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"submissionCount","nameLocation":"710:15:3","nodeType":"VariableDeclaration","scope":281,"src":"702:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"totalVotes","nameLocation":"743:10:3","nodeType":"VariableDeclaration","scope":281,"src":"735:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Contest","nameLocation":"342:7:3","nodeType":"StructDefinition","scope":810,"src":"335:425:3","visibility":"public"},{"canonicalName":"ContestFactory.ContestStatus","id":287,"members":[{"id":282,"name":"Draft","nameLocation":"799:5:3","nodeType":"EnumValue","src":"799:5:3"},{"id":283,"name":"Active","nameLocation":"814:6:3","nodeType":"EnumValue","src":"814:6:3"},{"id":284,"name":"Voting","nameLocation":"830:6:3","nodeType":"EnumValue","src":"830:6:3"},{"id":285,"name":"Ended","nameLocation":"846:5:3","nodeType":"EnumValue","src":"846:5:3"},{"id":286,"name":"Cancelled","nameLocation":"861:9:3","nodeType":"EnumValue","src":"861:9:3"}],"name":"ContestStatus","nameLocation":"775:13:3","nodeType":"EnumDefinition","src":"770:106:3"},{"constant":false,"id":289,"mutability":"mutable","name":"_contestIdCounter","nameLocation":"925:17:3","nodeType":"VariableDeclaration","scope":810,"src":"909:33:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"9d7ed738","id":294,"mutability":"mutable","name":"contests","nameLocation":"983:8:3","nodeType":"VariableDeclaration","scope":810,"src":"948:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest)"},"typeName":{"id":293,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"948:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"Contest","nameLocations":["967:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"967:7:3"},"referencedDeclaration":281,"src":"967:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}}},"visibility":"public"},{"constant":false,"functionSelector":"e6bf74c9","id":299,"mutability":"mutable","name":"creatorContests","nameLocation":"1034:15:3","nodeType":"VariableDeclaration","scope":810,"src":"997:52:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":298,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1005:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"997:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":297,"nodeType":"ArrayTypeName","src":"1016:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"22dcd13e","id":302,"mutability":"mutable","name":"platformFeeBps","nameLocation":"1131:14:3","nodeType":"VariableDeclaration","scope":810,"src":"1116:35:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323530","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1148:3:3","typeDescriptions":{"typeIdentifier":"t_rational_250_by_1","typeString":"int_const 250"},"value":"250"},"visibility":"public"},{"constant":false,"functionSelector":"c415b95c","id":304,"mutability":"mutable","name":"feeCollector","nameLocation":"1172:12:3","nodeType":"VariableDeclaration","scope":810,"src":"1157:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"1157:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"4aaaf0ce6b66893efbe13b0c3adb4a8b2077c1e3e57b0432fdeffda2eca9df06","id":318,"name":"ContestCreated","nameLocation":"1215:14:3","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1255:9:3","nodeType":"VariableDeclaration","scope":318,"src":"1239:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":308,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1290:7:3","nodeType":"VariableDeclaration","scope":318,"src":"1274:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1314:5:3","nodeType":"VariableDeclaration","scope":318,"src":"1307:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":309,"name":"string","nodeType":"ElementaryTypeName","src":"1307:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":false,"mutability":"mutable","name":"prizePool","nameLocation":"1337:9:3","nodeType":"VariableDeclaration","scope":318,"src":"1329:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1364:9:3","nodeType":"VariableDeclaration","scope":318,"src":"1356:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1391:7:3","nodeType":"VariableDeclaration","scope":318,"src":"1383:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:175:3"},"src":"1209:196:3"},{"anonymous":false,"eventSelector":"2049bae7871bc32e098ec2b73ebfa495ed2496dc8a5dc7bf9d4714eb4e09d2bb","id":328,"name":"ContestStatusChanged","nameLocation":"1421:20:3","nodeType":"EventDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1467:9:3","nodeType":"VariableDeclaration","scope":328,"src":"1451:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":false,"mutability":"mutable","name":"oldStatus","nameLocation":"1500:9:3","nodeType":"VariableDeclaration","scope":328,"src":"1486:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"typeName":{"id":322,"nodeType":"UserDefinedTypeName","pathNode":{"id":321,"name":"ContestStatus","nameLocations":["1486:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"1486:13:3"},"referencedDeclaration":287,"src":"1486:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"visibility":"internal"},{"constant":false,"id":326,"indexed":false,"mutability":"mutable","name":"newStatus","nameLocation":"1533:9:3","nodeType":"VariableDeclaration","scope":328,"src":"1519:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"typeName":{"id":325,"nodeType":"UserDefinedTypeName","pathNode":{"id":324,"name":"ContestStatus","nameLocations":["1519:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"1519:13:3"},"referencedDeclaration":287,"src":"1519:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"visibility":"internal"}],"src":"1441:107:3"},"src":"1415:134:3"},{"anonymous":false,"eventSelector":"8fb82f92fbac15f0a9edc91d47d33edcfce30f6805c6a005f56e95e4f9fd9bb4","id":338,"name":"PrizePoolIncreased","nameLocation":"1565:18:3","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1609:9:3","nodeType":"VariableDeclaration","scope":338,"src":"1593:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"contributor","nameLocation":"1644:11:3","nodeType":"VariableDeclaration","scope":338,"src":"1628:27:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1628:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1673:6:3","nodeType":"VariableDeclaration","scope":338,"src":"1665:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1665:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"newTotal","nameLocation":"1697:8:3","nodeType":"VariableDeclaration","scope":338,"src":"1689:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1583:128:3"},"src":"1559:153:3"},{"anonymous":false,"eventSelector":"d347e206f25a89b917fc9482f1a2d294d749baa4dc9bde7fb495ee11fe491643","id":344,"name":"PlatformFeeUpdated","nameLocation":"1728:18:3","nodeType":"EventDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"indexed":false,"mutability":"mutable","name":"oldFee","nameLocation":"1755:6:3","nodeType":"VariableDeclaration","scope":344,"src":"1747:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":342,"indexed":false,"mutability":"mutable","name":"newFee","nameLocation":"1771:6:3","nodeType":"VariableDeclaration","scope":344,"src":"1763:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:32:3"},"src":"1722:57:3"},{"body":{"id":357,"nodeType":"Block","src":"1844:45:3","statements":[{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":353,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1854:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":354,"name":"_feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"1869:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1854:28:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":356,"nodeType":"ExpressionStatement","src":"1854:28:3"}]},"id":358,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":349,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1832:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1836:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1832:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":351,"kind":"baseConstructorSpecifier","modifierName":{"id":348,"name":"Ownable","nameLocations":["1824:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1824:7:3"},"nodeType":"ModifierInvocation","src":"1824:19:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"_feeCollector","nameLocation":"1809:13:3","nodeType":"VariableDeclaration","scope":358,"src":"1801:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1800:23:3"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"1844:0:3"},"scope":810,"src":"1789:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":471,"nodeType":"Block","src":"2234:1323:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2252:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":382,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2265:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2271:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2265:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d65206d75737420626520696e20667574757265","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2282:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e8b0e873d06a66c9c925ccc2b7b49a9f2193d0e8836f9994126e51985936cff","typeString":"literal_string \"Start time must be in future\""},"value":"Start time must be in future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e8b0e873d06a66c9c925ccc2b7b49a9f2193d0e8836f9994126e51985936cff","typeString":"literal_string \"Start time must be in future\""}],"id":380,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2244:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"2244:69:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2331:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":390,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"2342:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2331:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e642074696d65206d757374206265206166746572207374617274","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2354:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_49017da9faed6f5d423ce95da775aab5d951fdec507ad2837d435dbb2e925c79","typeString":"literal_string \"End time must be after start\""},"value":"End time must be after start"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49017da9faed6f5d423ce95da775aab5d951fdec507ad2837d435dbb2e925c79","typeString":"literal_string \"End time must be after start\""}],"id":388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":394,"nodeType":"ExpressionStatement","src":"2323:62:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":396,"name":"_votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2403:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":397,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"2420:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2403:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720656e64206d75737420626520616674657220636f6e7465737420656e64","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2430:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_800860343476e325ac91cee09d1106260fd33714771beebf06277b3cfc3d5798","typeString":"literal_string \"Voting end must be after contest end\""},"value":"Voting end must be after contest end"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_800860343476e325ac91cee09d1106260fd33714771beebf06277b3cfc3d5798","typeString":"literal_string \"Voting end must be after contest end\""}],"id":395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2395:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"2395:74:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"_prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2487:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2500:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2487:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072697a6520706f6f6c206d7573742062652067726561746572207468616e2030","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2503:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_93b82a3a3f277ffbf8e547993ff953b81e6f040383b652fbdfeaf33d73a6688d","typeString":"literal_string \"Prize pool must be greater than 0\""},"value":"Prize pool must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93b82a3a3f277ffbf8e547993ff953b81e6f040383b652fbdfeaf33d73a6688d","typeString":"literal_string \"Prize pool must be greater than 0\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2479:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2479:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"2479:60:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"_prizeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2624:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:3","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2624:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"2620:124:3","trueBody":{"id":423,"nodeType":"Block","src":"2651:93:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2673:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2677:5:3","memberName":"value","nodeType":"MemberAccess","src":"2673:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":418,"name":"_prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2686:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742043454c4f20666f72207072697a6520706f6f6c","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2698:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_df22a696cf1c1ebd061d277daeda68b033a59774fd824e4764d4bd1c690573c6","typeString":"literal_string \"Insufficient CELO for prize pool\""},"value":"Insufficient CELO for prize pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df22a696cf1c1ebd061d277daeda68b033a59774fd824e4764d4bd1c690573c6","typeString":"literal_string \"Insufficient CELO for prize pool\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2665:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"ExpressionStatement","src":"2665:68:3"}]}},{"assignments":[426],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"contestId","nameLocation":"2770:9:3","nodeType":"VariableDeclaration","scope":471,"src":"2762:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2762:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":429,"initialValue":{"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2782:19:3","subExpression":{"id":427,"name":"_contestIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"2782:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2762:39:3"},{"expression":{"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":430,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2820:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":432,"indexExpression":{"id":431,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2829:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2820:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":434,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2868:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2900:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2904:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2900:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"2931:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":438,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2964:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":439,"name":"_prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3001:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":440,"name":"_prizeToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"3037:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":441,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"3073:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":442,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3106:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":443,"name":"_votingEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3143:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":444,"name":"ContestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3179:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ContestStatus_$287_$","typeString":"type(enum ContestFactory.ContestStatus)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3193:5:3","memberName":"Draft","nodeType":"MemberAccess","referencedDeclaration":282,"src":"3179:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3256:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":433,"name":"Contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2842:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Contest_$281_storage_ptr_$","typeString":"type(struct ContestFactory.Contest storage pointer)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2864:2:3","2891:7:3","2924:5:3","2951:11:3","2990:9:3","3025:10:3","3062:9:3","3097:7:3","3128:13:3","3171:6:3","3212:15:3","3244:10:3"],"names":["id","creator","title","metadataURI","prizePool","prizeToken","startTime","endTime","votingEndTime","status","submissionCount","totalVotes"],"nodeType":"FunctionCall","src":"2842:426:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"src":"2820:448:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"id":450,"nodeType":"ExpressionStatement","src":"2820:448:3"},{"expression":{"arguments":[{"id":456,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"3320:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":451,"name":"creatorContests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"3287:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":454,"indexExpression":{"expression":{"id":452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3303:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3307:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3303:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3287:27:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:4:3","memberName":"push","nodeType":"MemberAccess","src":"3287:32:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3287:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":458,"nodeType":"ExpressionStatement","src":"3287:43:3"},{"eventCall":{"arguments":[{"id":460,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"3382:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3405:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3409:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3405:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":463,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"3429:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":464,"name":"_prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"3449:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":465,"name":"_startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"3473:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":466,"name":"_endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3497:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"ContestCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3354:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,string memory,uint256,uint256,uint256)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3354:161:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"EmitStatement","src":"3349:166:3"},{"expression":{"id":469,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"3541:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":470,"nodeType":"Return","src":"3534:16:3"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"1899:44:3","text":" @dev Create a new contest"},"functionSelector":"a490a21b","id":472,"implemented":true,"kind":"function","modifiers":[{"id":376,"kind":"modifierInvocation","modifierName":{"id":375,"name":"nonReentrant","nameLocations":["2203:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"2203:12:3"},"nodeType":"ModifierInvocation","src":"2203:12:3"}],"name":"createContest","nameLocation":"1957:13:3","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"_title","nameLocation":"1994:6:3","nodeType":"VariableDeclaration","scope":472,"src":"1980:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":360,"name":"string","nodeType":"ElementaryTypeName","src":"1980:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"_metadataURI","nameLocation":"2024:12:3","nodeType":"VariableDeclaration","scope":472,"src":"2010:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":362,"name":"string","nodeType":"ElementaryTypeName","src":"2010:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"_prizePool","nameLocation":"2054:10:3","nodeType":"VariableDeclaration","scope":472,"src":"2046:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2046:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"_prizeToken","nameLocation":"2082:11:3","nodeType":"VariableDeclaration","scope":472,"src":"2074:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"_startTime","nameLocation":"2111:10:3","nodeType":"VariableDeclaration","scope":472,"src":"2103:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"2103:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"_endTime","nameLocation":"2139:8:3","nodeType":"VariableDeclaration","scope":472,"src":"2131:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2131:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"_votingEndTime","nameLocation":"2165:14:3","nodeType":"VariableDeclaration","scope":472,"src":"2157:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1970:215:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":472,"src":"2225:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2224:9:3"},"scope":810,"src":"1948:1609:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":521,"nodeType":"Block","src":"3723:329:3","statements":[{"assignments":[483],"declarations":[{"constant":false,"id":483,"mutability":"mutable","name":"contest","nameLocation":"3749:7:3","nodeType":"VariableDeclaration","scope":521,"src":"3733:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"},"typeName":{"id":482,"nodeType":"UserDefinedTypeName","pathNode":{"id":481,"name":"Contest","nameLocations":["3733:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"3733:7:3"},"referencedDeclaration":281,"src":"3733:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}},"visibility":"internal"}],"id":487,"initialValue":{"baseExpression":{"id":484,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3759:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":486,"indexExpression":{"id":485,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3768:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3759:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3733:46:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":489,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3797:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3805:7:3","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3797:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3816:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3820:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3816:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3797:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":494,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3830:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3834:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3830:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3844:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3844:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3830:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3797:54:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3853:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3789:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"3789:81:3"},{"assignments":[505],"declarations":[{"constant":false,"id":505,"mutability":"mutable","name":"oldStatus","nameLocation":"3903:9:3","nodeType":"VariableDeclaration","scope":521,"src":"3889:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"typeName":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"ContestStatus","nameLocations":["3889:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"3889:13:3"},"referencedDeclaration":287,"src":"3889:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"visibility":"internal"}],"id":508,"initialValue":{"expression":{"id":506,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3915:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3923:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"3915:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"VariableDeclarationStatement","src":"3889:40:3"},{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":509,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3939:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3947:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"3939:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"_newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3956:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"src":"3939:27:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"id":514,"nodeType":"ExpressionStatement","src":"3939:27:3"},{"eventCall":{"arguments":[{"id":516,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4011:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":517,"name":"oldStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"4023:9:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},{"id":518,"name":"_newStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4034:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}],"id":515,"name":"ContestStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3990:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_ContestStatus_$287_$_t_enum$_ContestStatus_$287_$returns$__$","typeString":"function (uint256,enum ContestFactory.ContestStatus,enum ContestFactory.ContestStatus)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3990:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"EmitStatement","src":"3985:60:3"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"3567:45:3","text":" @dev Update contest status"},"functionSelector":"74828bbb","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"updateContestStatus","nameLocation":"3626:19:3","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"_contestId","nameLocation":"3663:10:3","nodeType":"VariableDeclaration","scope":522,"src":"3655:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"_newStatus","nameLocation":"3697:10:3","nodeType":"VariableDeclaration","scope":522,"src":"3683:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"typeName":{"id":477,"nodeType":"UserDefinedTypeName","pathNode":{"id":476,"name":"ContestStatus","nameLocations":["3683:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":287,"src":"3683:13:3"},"referencedDeclaration":287,"src":"3683:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"visibility":"internal"}],"src":"3645:68:3"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"3723:0:3"},"scope":810,"src":"3617:435:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":591,"nodeType":"Block","src":"4187:495:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4205:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4209:5:3","memberName":"value","nodeType":"MemberAccess","src":"4205:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4217:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4205:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073656e642043454c4f","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4220:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c49771ecc32001c17a6b479e582f95b7aff84f8e5b85bb5232394aba6649db8f","typeString":"literal_string \"Must send CELO\""},"value":"Must send CELO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c49771ecc32001c17a6b479e582f95b7aff84f8e5b85bb5232394aba6649db8f","typeString":"literal_string \"Must send CELO\""}],"id":530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4197:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4197:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":537,"nodeType":"ExpressionStatement","src":"4197:40:3"},{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"contest","nameLocation":"4263:7:3","nodeType":"VariableDeclaration","scope":591,"src":"4247:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"},"typeName":{"id":539,"nodeType":"UserDefinedTypeName","pathNode":{"id":538,"name":"Contest","nameLocations":["4247:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"4247:7:3"},"referencedDeclaration":281,"src":"4247:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}},"visibility":"internal"}],"id":544,"initialValue":{"baseExpression":{"id":541,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4273:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":543,"indexExpression":{"id":542,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4282:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4273:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4247:46:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":546,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4311:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4319:10:3","memberName":"prizeToken","nodeType":"MemberAccess","referencedDeclaration":267,"src":"4311:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4341:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4333:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"4333:7:3","typeDescriptions":{}}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4333:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4311:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74657374207573657320746f6b656e2c206e6f742043454c4f","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4345:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_771cf59bf58cd9cbfb3ea95fb3485eb31b467966068597830fa6dcea6ceeccef","typeString":"literal_string \"Contest uses token, not CELO\""},"value":"Contest uses token, not CELO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_771cf59bf58cd9cbfb3ea95fb3485eb31b467966068597830fa6dcea6ceeccef","typeString":"literal_string \"Contest uses token, not CELO\""}],"id":545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4303:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"4303:73:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4394:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4402:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"4394:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":559,"name":"ContestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4412:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ContestStatus_$287_$","typeString":"type(enum ContestFactory.ContestStatus)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4426:5:3","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":285,"src":"4412:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"src":"4394:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e7465737420656e646564","id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4433:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffa47464db0d9ab93535829c56774432a602a9d366d74e4dd3b824a28b2df749","typeString":"literal_string \"Contest ended\""},"value":"Contest ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ffa47464db0d9ab93535829c56774432a602a9d366d74e4dd3b824a28b2df749","typeString":"literal_string \"Contest ended\""}],"id":556,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4386:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"4386:63:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":566,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4467:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4475:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"4467:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":568,"name":"ContestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4485:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ContestStatus_$287_$","typeString":"type(enum ContestFactory.ContestStatus)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4499:9:3","memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":286,"src":"4485:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"src":"4467:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e746573742063616e63656c6c6564","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4510:19:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc48a4a6f27e006ead0a054503e72860bae88c93751e66774e4fff01ff59b4e1","typeString":"literal_string \"Contest cancelled\""},"value":"Contest cancelled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc48a4a6f27e006ead0a054503e72860bae88c93751e66774e4fff01ff59b4e1","typeString":"literal_string \"Contest cancelled\""}],"id":565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4459:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"4459:71:3"},{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":574,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4549:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4557:9:3","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4549:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4570:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4574:5:3","memberName":"value","nodeType":"MemberAccess","src":"4570:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4549:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":580,"nodeType":"ExpressionStatement","src":"4549:30:3"},{"eventCall":{"arguments":[{"id":582,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4622:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":583,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4634:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4638:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4634:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":585,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4646:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4650:5:3","memberName":"value","nodeType":"MemberAccess","src":"4646:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":587,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"4657:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest storage pointer"}},"id":588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4665:9:3","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4657:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"PrizePoolIncreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"4603:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4603:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"EmitStatement","src":"4598:77:3"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"4062:43:3","text":" @dev Increase prize pool"},"functionSelector":"af1087e9","id":592,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"nonReentrant","nameLocations":["4174:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4174:12:3"},"nodeType":"ModifierInvocation","src":"4174:12:3"}],"name":"increasePrizePool","nameLocation":"4119:17:3","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"_contestId","nameLocation":"4145:10:3","nodeType":"VariableDeclaration","scope":592,"src":"4137:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4136:20:3"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4187:0:3"},"scope":810,"src":"4110:572:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":604,"nodeType":"Block","src":"4834:119:3","statements":[{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4908:38:3","subExpression":{"expression":{"baseExpression":{"id":598,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4908:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":600,"indexExpression":{"id":599,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"4917:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4908:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4929:15:3","memberName":"submissionCount","nodeType":"MemberAccess","referencedDeclaration":278,"src":"4908:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"4908:38:3"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"4692:74:3","text":" @dev Update submission count (called by VotingContract)"},"functionSelector":"cda6d002","id":605,"implemented":true,"kind":"function","modifiers":[],"name":"incrementSubmissionCount","nameLocation":"4780:24:3","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"_contestId","nameLocation":"4813:10:3","nodeType":"VariableDeclaration","scope":605,"src":"4805:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4804:20:3"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"4834:0:3"},"scope":810,"src":"4771:182:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":617,"nodeType":"Block","src":"5093:114:3","statements":[{"expression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5167:33:3","subExpression":{"expression":{"baseExpression":{"id":611,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5167:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":613,"indexExpression":{"id":612,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5176:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5167:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5188:10:3","memberName":"totalVotes","nodeType":"MemberAccess","referencedDeclaration":280,"src":"5167:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":616,"nodeType":"ExpressionStatement","src":"5167:33:3"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"4963:68:3","text":" @dev Update vote count (called by VotingContract)"},"functionSelector":"f3b9e61c","id":618,"implemented":true,"kind":"function","modifiers":[],"name":"incrementVoteCount","nameLocation":"5045:18:3","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"_contestId","nameLocation":"5072:10:3","nodeType":"VariableDeclaration","scope":618,"src":"5064:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"5064:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5063:20:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5093:0:3"},"scope":810,"src":"5036:171:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":631,"nodeType":"Block","src":"5344:44:3","statements":[{"expression":{"baseExpression":{"id":627,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5361:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":629,"indexExpression":{"id":628,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"5370:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5361:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"functionReturnParameters":626,"id":630,"nodeType":"Return","src":"5354:27:3"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"5217:43:3","text":" @dev Get contest details"},"functionSelector":"904b9f72","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"getContest","nameLocation":"5274:10:3","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"_contestId","nameLocation":"5293:10:3","nodeType":"VariableDeclaration","scope":632,"src":"5285:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:20:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"5328:14:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest"},"typeName":{"id":624,"nodeType":"UserDefinedTypeName","pathNode":{"id":623,"name":"Contest","nameLocations":["5328:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"5328:7:3"},"referencedDeclaration":281,"src":"5328:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}},"visibility":"internal"}],"src":"5327:16:3"},"scope":810,"src":"5265:123:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":645,"nodeType":"Block","src":"5548:49:3","statements":[{"expression":{"baseExpression":{"id":641,"name":"creatorContests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"5565:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":643,"indexExpression":{"id":642,"name":"_creator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"5581:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5565:25:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":640,"id":644,"nodeType":"Return","src":"5558:32:3"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"5398:58:3","text":" @dev Get contests created by an address"},"functionSelector":"6d436fa3","id":646,"implemented":true,"kind":"function","modifiers":[],"name":"getCreatorContests","nameLocation":"5470:18:3","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"_creator","nameLocation":"5497:8:3","nodeType":"VariableDeclaration","scope":646,"src":"5489:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"5489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5488:18:3"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":646,"src":"5530:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"5530:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ArrayTypeName","src":"5530:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5529:18:3"},"scope":810,"src":"5461:136:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":654,"nodeType":"Block","src":"5719:41:3","statements":[{"expression":{"id":652,"name":"_contestIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5736:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":651,"id":653,"nodeType":"Return","src":"5729:24:3"}]},"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"5607:47:3","text":" @dev Get total contest count"},"functionSelector":"73d53dd2","id":655,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalContests","nameLocation":"5668:16:3","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[],"src":"5684:2:3"},"returnParameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":655,"src":"5710:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5709:9:3"},"scope":810,"src":"5659:101:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":688,"nodeType":"Block","src":"5897:225:3","statements":[{"assignments":[665],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"contest","nameLocation":"5922:7:3","nodeType":"VariableDeclaration","scope":688,"src":"5907:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"Contest","nameLocations":["5907:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"5907:7:3"},"referencedDeclaration":281,"src":"5907:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}},"visibility":"internal"}],"id":669,"initialValue":{"baseExpression":{"id":666,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5932:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":668,"indexExpression":{"id":667,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5941:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5932:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5907:45:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":670,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"5969:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5977:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"5969:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":672,"name":"ContestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5987:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ContestStatus_$287_$","typeString":"type(enum ContestFactory.ContestStatus)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6001:6:3","memberName":"Active","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5987:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"src":"5969:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":675,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6026:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6032:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6026:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":677,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6045:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6053:9:3","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":269,"src":"6045:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6026:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5969:93:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":681,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6081:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6087:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6081:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":683,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6100:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6108:7:3","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":271,"src":"6100:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6081:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5969:146:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":662,"id":687,"nodeType":"Return","src":"5962:153:3"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"5770:50:3","text":" @dev Check if contest is active"},"functionSelector":"bf5e253f","id":689,"implemented":true,"kind":"function","modifiers":[],"name":"isContestActive","nameLocation":"5834:15:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"_contestId","nameLocation":"5858:10:3","nodeType":"VariableDeclaration","scope":689,"src":"5850:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"5850:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5849:20:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"5891:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"5891:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5890:6:3"},"scope":810,"src":"5825:297:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":722,"nodeType":"Block","src":"6257:228:3","statements":[{"assignments":[699],"declarations":[{"constant":false,"id":699,"mutability":"mutable","name":"contest","nameLocation":"6282:7:3","nodeType":"VariableDeclaration","scope":722,"src":"6267:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest"},"typeName":{"id":698,"nodeType":"UserDefinedTypeName","pathNode":{"id":697,"name":"Contest","nameLocations":["6267:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"6267:7:3"},"referencedDeclaration":281,"src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage_ptr","typeString":"struct ContestFactory.Contest"}},"visibility":"internal"}],"id":703,"initialValue":{"baseExpression":{"id":700,"name":"contests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"6292:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Contest_$281_storage_$","typeString":"mapping(uint256 => struct ContestFactory.Contest storage ref)"}},"id":702,"indexExpression":{"id":701,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"6301:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6292:20:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_storage","typeString":"struct ContestFactory.Contest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6267:45:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":704,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"6329:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6337:6:3","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":276,"src":"6329:14:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":706,"name":"ContestStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6347:13:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_ContestStatus_$287_$","typeString":"type(enum ContestFactory.ContestStatus)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6361:6:3","memberName":"Voting","nodeType":"MemberAccess","referencedDeclaration":284,"src":"6347:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_ContestStatus_$287","typeString":"enum ContestFactory.ContestStatus"}},"src":"6329:38:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":709,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6386:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6386:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":711,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"6404:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6412:7:3","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":271,"src":"6404:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6386:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6329:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":715,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6438:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6444:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"6438:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":717,"name":"contest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"6457:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Contest_$281_memory_ptr","typeString":"struct ContestFactory.Contest memory"}},"id":718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6465:13:3","memberName":"votingEndTime","nodeType":"MemberAccess","referencedDeclaration":273,"src":"6457:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6438:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6329:149:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":696,"id":721,"nodeType":"Return","src":"6322:156:3"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"6132:49:3","text":" @dev Check if voting is active"},"functionSelector":"772744b5","id":723,"implemented":true,"kind":"function","modifiers":[],"name":"isVotingActive","nameLocation":"6195:14:3","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"_contestId","nameLocation":"6218:10:3","nodeType":"VariableDeclaration","scope":723,"src":"6210:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"6210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6209:20:3"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"6251:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"6251:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6250:6:3"},"scope":810,"src":"6186:299:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":751,"nodeType":"Block","src":"6622:201:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":732,"name":"_newFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6640:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31303030","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6654:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"6640:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f206869676820286d61782031302529","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6660:24:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_da224265a9fe2370c3488ce3583c766956798b047ae0cf2308222c18be4d0be4","typeString":"literal_string \"Fee too high (max 10%)\""},"value":"Fee too high (max 10%)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da224265a9fe2370c3488ce3583c766956798b047ae0cf2308222c18be4d0be4","typeString":"literal_string \"Fee too high (max 10%)\""}],"id":731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6632:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6632:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"6632:53:3"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"oldFee","nameLocation":"6703:6:3","nodeType":"VariableDeclaration","scope":751,"src":"6695:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6695:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"initialValue":{"id":740,"name":"platformFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6712:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6695:31:3"},{"expression":{"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":742,"name":"platformFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6736:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":743,"name":"_newFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6753:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6736:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":745,"nodeType":"ExpressionStatement","src":"6736:27:3"},{"eventCall":{"arguments":[{"id":747,"name":"oldFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6797:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":748,"name":"_newFeeBps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6805:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":746,"name":"PlatformFeeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6778:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6778:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"EmitStatement","src":"6773:43:3"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"6495:56:3","text":" @dev Update platform fee (owner only)"},"functionSelector":"aa0b5988","id":752,"implemented":true,"kind":"function","modifiers":[{"id":729,"kind":"modifierInvocation","modifierName":{"id":728,"name":"onlyOwner","nameLocations":["6612:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6612:9:3"},"nodeType":"ModifierInvocation","src":"6612:9:3"}],"name":"updatePlatformFee","nameLocation":"6565:17:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"_newFeeBps","nameLocation":"6591:10:3","nodeType":"VariableDeclaration","scope":752,"src":"6583:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6582:20:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"6622:0:3"},"scope":810,"src":"6556:267:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":774,"nodeType":"Block","src":"6965:110:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":761,"name":"_newCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6983:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7008:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7000:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"7000:7:3","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7000:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6983:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7012:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6975:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6975:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"6975:55:3"},{"expression":{"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":770,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"7040:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":771,"name":"_newCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7055:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7040:28:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":773,"nodeType":"ExpressionStatement","src":"7040:28:3"}]},"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"6833:57:3","text":" @dev Update fee collector (owner only)"},"functionSelector":"d2c35ce8","id":775,"implemented":true,"kind":"function","modifiers":[{"id":758,"kind":"modifierInvocation","modifierName":{"id":757,"name":"onlyOwner","nameLocations":["6955:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6955:9:3"},"nodeType":"ModifierInvocation","src":"6955:9:3"}],"name":"updateFeeCollector","nameLocation":"6904:18:3","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"_newCollector","nameLocation":"6931:13:3","nodeType":"VariableDeclaration","scope":775,"src":"6923:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6923:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6922:23:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"6965:0:3"},"scope":810,"src":"6895:180:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":804,"nodeType":"Block","src":"7192:158:3","statements":[{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"7210:7:3","nodeType":"VariableDeclaration","scope":804,"src":"7202:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"7202:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":788,"initialValue":{"expression":{"arguments":[{"id":785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7228:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_ContestFactory_$810","typeString":"contract ContestFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ContestFactory_$810","typeString":"contract ContestFactory"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7220:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"7220:7:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7220:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:7:3","memberName":"balance","nodeType":"MemberAccess","src":"7220:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7202:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7259:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7259:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206665657320746f207769746864726177","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7272:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""},"value":"No fees to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_524becf2bd3d6f3c74c4c55f46993b5de22a6261a1a6108cc85fed135e73299c","typeString":"literal_string \"No fees to withdraw\""}],"id":789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7251:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7251:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":795,"nodeType":"ExpressionStatement","src":"7251:43:3"},{"expression":{"arguments":[{"id":801,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"7335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":798,"name":"feeCollector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"7312:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7304:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"7304:8:3","stateMutability":"payable","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7326:8:3","memberName":"transfer","nodeType":"MemberAccess","src":"7304:30:3","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"7304:39:3"}]},"documentation":{"id":776,"nodeType":"StructuredDocumentation","src":"7085:59:3","text":" @dev Withdraw platform fees (owner only)"},"functionSelector":"476343ee","id":805,"implemented":true,"kind":"function","modifiers":[{"id":779,"kind":"modifierInvocation","modifierName":{"id":778,"name":"onlyOwner","nameLocations":["7182:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7182:9:3"},"nodeType":"ModifierInvocation","src":"7182:9:3"}],"name":"withdrawFees","nameLocation":"7158:12:3","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"7170:2:3"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"7192:0:3"},"scope":810,"src":"7149:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":808,"nodeType":"Block","src":"7387:2:3","statements":[]},"id":809,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"7367:2:3"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"7387:0:3"},"scope":810,"src":"7360:29:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":811,"src":"272:7119:3","usedErrors":[13,18,191],"usedEvents":[24,318,328,338,344]}],"src":"32:7360:3"},"id":3},"contracts/SimpleTest.sol":{"ast":{"absolutePath":"contracts/SimpleTest.sol","exportedSymbols":{"SimpleTest":[833]},"id":834,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":812,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"SimpleTest","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":833,"linearizedBaseContracts":[833],"name":"SimpleTest","nameLocation":"67:10:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8381f58a","id":814,"mutability":"mutable","name":"number","nameLocation":"99:6:4","nodeType":"VariableDeclaration","scope":833,"src":"84:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"84:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"130:28:4","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":817,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"140:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3432","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"149:2:4","typeDescriptions":{"typeIdentifier":"t_rational_42_by_1","typeString":"int_const 42"},"value":"42"},"src":"140:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"140:11:4"}]},"id":822,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"127:2:4"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"130:0:4"},"scope":833,"src":"116:42:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":831,"nodeType":"Block","src":"211:33:4","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":827,"name":"number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"221:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":828,"name":"_number","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"230:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"221:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":830,"nodeType":"ExpressionStatement","src":"221:16:4"}]},"functionSelector":"3fb5c1cb","id":832,"implemented":true,"kind":"function","modifiers":[],"name":"setNumber","nameLocation":"177:9:4","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"_number","nameLocation":"195:7:4","nodeType":"VariableDeclaration","scope":832,"src":"187:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"186:17:4"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"211:0:4"},"scope":833,"src":"168:76:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":834,"src":"58:188:4","usedErrors":[],"usedEvents":[]}],"src":"32:215:4"},"id":4},"contracts/VotingContract.sol":{"ast":{"absolutePath":"contracts/VotingContract.sol","exportedSymbols":{"Context":[177],"IContestFactory":[855],"Ownable":[147],"ReentrancyGuard":[246],"VotingContract":[1522]},"id":1523,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":835,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":836,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1523,"sourceUnit":148,"src":"58:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1523,"sourceUnit":247,"src":"111:59:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IContestFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":855,"linearizedBaseContracts":[855],"name":"IContestFactory","nameLocation":"182:15:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"772744b5","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"isVotingActive","nameLocation":"213:14:5","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"_contestId","nameLocation":"236:10:5","nodeType":"VariableDeclaration","scope":844,"src":"228:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"228:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"227:20:5"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"271:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"271:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"270:6:5"},"scope":855,"src":"204:73:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f3b9e61c","id":849,"implemented":false,"kind":"function","modifiers":[],"name":"incrementVoteCount","nameLocation":"291:18:5","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"_contestId","nameLocation":"318:10:5","nodeType":"VariableDeclaration","scope":849,"src":"310:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"309:20:5"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"338:0:5"},"scope":855,"src":"282:57:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cda6d002","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"incrementSubmissionCount","nameLocation":"353:24:5","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"_contestId","nameLocation":"386:10:5","nodeType":"VariableDeclaration","scope":854,"src":"378:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"377:20:5"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"406:0:5"},"scope":855,"src":"344:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1523,"src":"172:237:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":857,"name":"Ownable","nameLocations":["531:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"531:7:5"},"id":858,"nodeType":"InheritanceSpecifier","src":"531:7:5"},{"baseName":{"id":859,"name":"ReentrancyGuard","nameLocations":["540:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"540:15:5"},"id":860,"nodeType":"InheritanceSpecifier","src":"540:15:5"}],"canonicalName":"VotingContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"411:92:5","text":" @title VotingContract\n @dev Handles submissions and gasless voting for contests"},"fullyImplemented":true,"id":1522,"linearizedBaseContracts":[1522,246,147,177],"name":"VotingContract","nameLocation":"513:14:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"VotingContract.Submission","id":875,"members":[{"constant":false,"id":862,"mutability":"mutable","name":"id","nameLocation":"603:2:5","nodeType":"VariableDeclaration","scope":875,"src":"595:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"595:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"contestId","nameLocation":"623:9:5","nodeType":"VariableDeclaration","scope":875,"src":"615:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"submitter","nameLocation":"650:9:5","nodeType":"VariableDeclaration","scope":875,"src":"642:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"642:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"metadataURI","nameLocation":"676:11:5","nodeType":"VariableDeclaration","scope":875,"src":"669:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":867,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"voteCount","nameLocation":"746:9:5","nodeType":"VariableDeclaration","scope":875,"src":"738:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"timestamp","nameLocation":"773:9:5","nodeType":"VariableDeclaration","scope":875,"src":"765:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"exists","nameLocation":"797:6:5","nodeType":"VariableDeclaration","scope":875,"src":"792:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"792:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Submission","nameLocation":"574:10:5","nodeType":"StructDefinition","scope":1522,"src":"567:243:5","visibility":"public"},{"constant":false,"functionSelector":"9c91cb9d","id":878,"mutability":"mutable","name":"contestFactory","nameLocation":"866:14:5","nodeType":"VariableDeclaration","scope":1522,"src":"843:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"},"typeName":{"id":877,"nodeType":"UserDefinedTypeName","pathNode":{"id":876,"name":"IContestFactory","nameLocations":["843:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"843:15:5"},"referencedDeclaration":855,"src":"843:15:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"visibility":"public"},{"constant":false,"id":880,"mutability":"mutable","name":"_submissionIdCounter","nameLocation":"902:20:5","nodeType":"VariableDeclaration","scope":1522,"src":"886:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"ad73349e","id":885,"mutability":"mutable","name":"submissions","nameLocation":"987:11:5","nodeType":"VariableDeclaration","scope":1522,"src":"949:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission)"},"typeName":{"id":884,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"957:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"949:30:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":883,"nodeType":"UserDefinedTypeName","pathNode":{"id":882,"name":"Submission","nameLocations":["968:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"968:10:5"},"referencedDeclaration":875,"src":"968:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}}},"visibility":"public"},{"constant":false,"functionSelector":"fadfa4dc","id":890,"mutability":"mutable","name":"contestSubmissions","nameLocation":"1041:18:5","nodeType":"VariableDeclaration","scope":1522,"src":"1004:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":889,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1004:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"nodeType":"ArrayTypeName","src":"1023:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d17bd67c","id":896,"mutability":"mutable","name":"userSubmission","nameLocation":"1150:14:5","nodeType":"VariableDeclaration","scope":1522,"src":"1095:69:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":895,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1103:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1095:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":894,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1114:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"43859632","id":902,"mutability":"mutable","name":"hasVoted","nameLocation":"1259:8:5","nodeType":"VariableDeclaration","scope":1522,"src":"1207:60:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":901,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1207:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":900,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1226:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":899,"name":"bool","nodeType":"ElementaryTypeName","src":"1245:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"6c811686","id":907,"mutability":"mutable","name":"submissionVoters","nameLocation":"1343:16:5","nodeType":"VariableDeclaration","scope":1522,"src":"1306:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":906,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1306:29:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":905,"nodeType":"ArrayTypeName","src":"1325:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c","id":917,"name":"SubmissionCreated","nameLocation":"1416:17:5","nodeType":"EventDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1459:12:5","nodeType":"VariableDeclaration","scope":917,"src":"1443:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1443:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1497:9:5","nodeType":"VariableDeclaration","scope":917,"src":"1481:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1481:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1532:9:5","nodeType":"VariableDeclaration","scope":917,"src":"1516:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":912,"name":"address","nodeType":"ElementaryTypeName","src":"1516:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":915,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"1558:11:5","nodeType":"VariableDeclaration","scope":917,"src":"1551:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":914,"name":"string","nodeType":"ElementaryTypeName","src":"1551:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1433:142:5"},"src":"1410:166:5"},{"anonymous":false,"eventSelector":"7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc","id":925,"name":"VoteCast","nameLocation":"1592:8:5","nodeType":"EventDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1626:12:5","nodeType":"VariableDeclaration","scope":925,"src":"1610:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1664:9:5","nodeType":"VariableDeclaration","scope":925,"src":"1648:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":923,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1699:5:5","nodeType":"VariableDeclaration","scope":925,"src":"1683:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1683:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1600:110:5"},"src":"1586:125:5"},{"anonymous":false,"eventSelector":"c6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586","id":933,"name":"VoteRemoved","nameLocation":"1727:11:5","nodeType":"EventDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1764:12:5","nodeType":"VariableDeclaration","scope":933,"src":"1748:28:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1748:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":929,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1802:9:5","nodeType":"VariableDeclaration","scope":933,"src":"1786:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":931,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1837:5:5","nodeType":"VariableDeclaration","scope":933,"src":"1821:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"1821:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1738:110:5"},"src":"1721:128:5"},{"body":{"id":948,"nodeType":"Block","src":"1916:66:5","statements":[{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":942,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"1926:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":944,"name":"_contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"1959:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":943,"name":"IContestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1943:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IContestFactory_$855_$","typeString":"type(contract IContestFactory)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"src":"1926:49:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":947,"nodeType":"ExpressionStatement","src":"1926:49:5"}]},"id":949,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1904:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1908:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1904:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":940,"kind":"baseConstructorSpecifier","modifierName":{"id":937,"name":"Ownable","nameLocations":["1896:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1896:7:5"},"nodeType":"ModifierInvocation","src":"1896:19:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"_contestFactory","nameLocation":"1879:15:5","nodeType":"VariableDeclaration","scope":949,"src":"1871:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:25:5"},"returnParameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"1916:0:5"},"scope":1522,"src":"1859:123:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1026,"nodeType":"Block","src":"2180:894:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":962,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2257:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":964,"indexExpression":{"id":963,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2272:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":967,"indexExpression":{"expression":{"id":965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2284:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2288:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2284:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2257:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2299:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2257:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207375626d697474656420746f207468697320636f6e74657374","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2302:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_97c5f25263ccb454cd3f9802b440f97f3f97a0f7533504dca3cbd826381f7efb","typeString":"literal_string \"Already submitted to this contest\""},"value":"Already submitted to this contest"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97c5f25263ccb454cd3f9802b440f97f3f97a0f7533504dca3cbd826381f7efb","typeString":"literal_string \"Already submitted to this contest\""}],"id":961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:89:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"2249:89:5"},{"assignments":[974],"declarations":[{"constant":false,"id":974,"mutability":"mutable","name":"submissionId","nameLocation":"2365:12:5","nodeType":"VariableDeclaration","scope":1026,"src":"2357:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":977,"initialValue":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2380:22:5","subExpression":{"id":975,"name":"_submissionIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2380:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2357:45:5"},{"expression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":978,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2421:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":980,"indexExpression":{"id":979,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2433:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2421:25:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":982,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2478:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":983,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2515:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2550:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2554:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2550:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"2587:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2624:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":988,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2650:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2656:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2650:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2687:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":981,"name":"Submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2449:10:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Submission_$875_storage_ptr_$","typeString":"type(struct VotingContract.Submission storage pointer)"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2474:2:5","2504:9:5","2539:9:5","2574:11:5","2613:9:5","2639:9:5","2679:6:5"],"names":["id","contestId","submitter","metadataURI","voteCount","timestamp","exists"],"nodeType":"FunctionCall","src":"2449:253:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"src":"2421:281:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"id":993,"nodeType":"ExpressionStatement","src":"2421:281:5"},{"expression":{"arguments":[{"id":998,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2757:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":994,"name":"contestSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2721:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":996,"indexExpression":{"id":995,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2740:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2721:30:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2752:4:5","memberName":"push","nodeType":"MemberAccess","src":"2721:35:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"ExpressionStatement","src":"2721:49:5"},{"expression":{"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1001,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"2780:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1005,"indexExpression":{"id":1002,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2795:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2780:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1006,"indexExpression":{"expression":{"id":1003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2807:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2811:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2807:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2780:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1007,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2821:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:53:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1009,"nodeType":"ExpressionStatement","src":"2780:53:5"},{"expression":{"arguments":[{"id":1013,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2925:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1010,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"2885:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2900:24:5","memberName":"incrementSubmissionCount","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2885:39:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"2885:51:5"},{"eventCall":{"arguments":[{"id":1017,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2978:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1018,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"2992:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3004:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3008:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3004:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1021,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"3016:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1016,"name":"SubmissionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2960:17:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address,string memory)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1023,"nodeType":"EmitStatement","src":"2955:74:5"},{"expression":{"id":1024,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3055:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":960,"id":1025,"nodeType":"Return","src":"3048:19:5"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"1992:52:5","text":" @dev Submit an entry to a contest"},"functionSelector":"56ce45b6","id":1027,"implemented":true,"kind":"function","modifiers":[{"id":957,"kind":"modifierInvocation","modifierName":{"id":956,"name":"nonReentrant","nameLocations":["2149:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"2149:12:5"},"nodeType":"ModifierInvocation","src":"2149:12:5"}],"name":"submitEntry","nameLocation":"2058:11:5","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"_contestId","nameLocation":"2087:10:5","nodeType":"VariableDeclaration","scope":1027,"src":"2079:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"_metadataURI","nameLocation":"2121:12:5","nodeType":"VariableDeclaration","scope":1027,"src":"2107:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2069:70:5"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"2171:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2170:9:5"},"scope":1522,"src":"2049:1025:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1116,"nodeType":"Block","src":"3223:952:5","statements":[{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"submission","nameLocation":"3252:10:5","nodeType":"VariableDeclaration","scope":1116,"src":"3233:29:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"},"typeName":{"id":1036,"nodeType":"UserDefinedTypeName","pathNode":{"id":1035,"name":"Submission","nameLocations":["3233:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"3233:10:5"},"referencedDeclaration":875,"src":"3233:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"visibility":"internal"}],"id":1041,"initialValue":{"baseExpression":{"id":1038,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"3265:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":1040,"indexExpression":{"id":1039,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3277:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3265:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3233:58:5"},{"expression":{"arguments":[{"expression":{"id":1043,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3309:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3320:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":874,"src":"3309:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5375626d697373696f6e20646f6573206e6f74206578697374","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3328:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""},"value":"Submission does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""}],"id":1042,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3301:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3301:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"3301:55:5"},{"assignments":[1049],"declarations":[{"constant":false,"id":1049,"mutability":"mutable","name":"contestId","nameLocation":"3383:9:5","nodeType":"VariableDeclaration","scope":1116,"src":"3375:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1052,"initialValue":{"expression":{"id":1050,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3395:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3406:9:5","memberName":"contestId","nodeType":"MemberAccess","referencedDeclaration":864,"src":"3395:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3375:40:5"},{"expression":{"arguments":[{"arguments":[{"id":1056,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"3506:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1054,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"3476:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3491:14:5","memberName":"isVotingActive","nodeType":"MemberAccess","referencedDeclaration":844,"src":"3476:29:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3476:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420616374697665","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3518:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""},"value":"Voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""}],"id":1053,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3468:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"3468:70:5"},{"expression":{"arguments":[{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3620:36:5","subExpression":{"baseExpression":{"baseExpression":{"id":1062,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3621:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1064,"indexExpression":{"id":1063,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3630:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1067,"indexExpression":{"expression":{"id":1065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3645:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3649:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3645:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3621:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f746564","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3658:15:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""},"value":"Already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""}],"id":1061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3612:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3612:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"3612:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1073,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3761:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3772:9:5","memberName":"submitter","nodeType":"MemberAccess","referencedDeclaration":866,"src":"3761:20:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1075,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3785:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3789:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3785:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3761:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3797:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d452425a1f081571439a5138f501d33fbe60ebf7e96bddc5d7878eabc033566","typeString":"literal_string \"Cannot vote for own submission\""},"value":"Cannot vote for own submission"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d452425a1f081571439a5138f501d33fbe60ebf7e96bddc5d7878eabc033566","typeString":"literal_string \"Cannot vote for own submission\""}],"id":1072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3753:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1080,"nodeType":"ExpressionStatement","src":"3753:77:5"},{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1081,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3870:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1085,"indexExpression":{"id":1082,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3879:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3870:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1086,"indexExpression":{"expression":{"id":1083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3894:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3898:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3894:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3870:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3908:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3870:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1089,"nodeType":"ExpressionStatement","src":"3870:42:5"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3922:22:5","subExpression":{"expression":{"id":1090,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"3922:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3933:9:5","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":870,"src":"3922:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"3922:22:5"},{"expression":{"arguments":[{"expression":{"id":1099,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3991:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3995:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3991:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":1095,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"3954:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":1097,"indexExpression":{"id":1096,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"3971:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3954:31:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3986:4:5","memberName":"push","nodeType":"MemberAccess","src":"3954:36:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"3954:48:5"},{"expression":{"arguments":[{"id":1106,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4088:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1103,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4054:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4069:18:5","memberName":"incrementVoteCount","nodeType":"MemberAccess","referencedDeclaration":849,"src":"4054:33:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"4054:44:5"},{"eventCall":{"arguments":[{"id":1110,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"4131:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1111,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"4146:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1112,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4157:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4157:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1109,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"4122:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1115,"nodeType":"EmitStatement","src":"4117:51:5"}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"3084:75:5","text":" @dev Cast a vote for a submission (gasless via Biconomy)"},"functionSelector":"0121b93f","id":1117,"implemented":true,"kind":"function","modifiers":[{"id":1033,"kind":"modifierInvocation","modifierName":{"id":1032,"name":"nonReentrant","nameLocations":["3210:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"3210:12:5"},"nodeType":"ModifierInvocation","src":"3210:12:5"}],"name":"vote","nameLocation":"3173:4:5","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"_submissionId","nameLocation":"3186:13:5","nodeType":"VariableDeclaration","scope":1117,"src":"3178:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"3178:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3177:23:5"},"returnParameters":{"id":1034,"nodeType":"ParameterList","parameters":[],"src":"3223:0:5"},"scope":1522,"src":"3164:1011:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1229,"nodeType":"Block","src":"4327:924:5","statements":[{"assignments":[1127],"declarations":[{"constant":false,"id":1127,"mutability":"mutable","name":"submission","nameLocation":"4356:10:5","nodeType":"VariableDeclaration","scope":1229,"src":"4337:29:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"},"typeName":{"id":1126,"nodeType":"UserDefinedTypeName","pathNode":{"id":1125,"name":"Submission","nameLocations":["4337:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"4337:10:5"},"referencedDeclaration":875,"src":"4337:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"visibility":"internal"}],"id":1131,"initialValue":{"baseExpression":{"id":1128,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"4369:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":1130,"indexExpression":{"id":1129,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4381:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4369:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4337:58:5"},{"expression":{"arguments":[{"expression":{"id":1133,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4413:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4424:6:5","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":874,"src":"4413:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5375626d697373696f6e20646f6573206e6f74206578697374","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4432:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""},"value":"Submission does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""}],"id":1132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4405:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4405:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"4405:55:5"},{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":1139,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4478:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1141,"indexExpression":{"id":1140,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4487:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1144,"indexExpression":{"expression":{"id":1142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4502:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4506:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4502:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486176656e277420766f74656420796574","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4515:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2a5b2040e0ec5e16740e8435cb6b0f29b3ac53be27e7139006577f12e65c46d","typeString":"literal_string \"Haven't voted yet\""},"value":"Haven't voted yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2a5b2040e0ec5e16740e8435cb6b0f29b3ac53be27e7139006577f12e65c46d","typeString":"literal_string \"Haven't voted yet\""}],"id":1138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4470:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4470:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1147,"nodeType":"ExpressionStatement","src":"4470:65:5"},{"assignments":[1149],"declarations":[{"constant":false,"id":1149,"mutability":"mutable","name":"contestId","nameLocation":"4562:9:5","nodeType":"VariableDeclaration","scope":1229,"src":"4554:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4554:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1152,"initialValue":{"expression":{"id":1150,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4574:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4585:9:5","memberName":"contestId","nodeType":"MemberAccess","referencedDeclaration":864,"src":"4574:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4554:40:5"},{"expression":{"arguments":[{"arguments":[{"id":1156,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4642:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1154,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"4612:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4627:14:5","memberName":"isVotingActive","nodeType":"MemberAccess","referencedDeclaration":844,"src":"4612:29:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view external returns (bool)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4612:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e67206e6f7420616374697665","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4654:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""},"value":"Voting not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4753b041641313f1ca2fbfa3890c4d0c79c5ac55aa0cd2bcb91e0eb948ae8f7c","typeString":"literal_string \"Voting not active\""}],"id":1153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4604:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4604:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"ExpressionStatement","src":"4604:70:5"},{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1161,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"4716:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1165,"indexExpression":{"id":1162,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4725:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4716:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1166,"indexExpression":{"expression":{"id":1163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4740:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4744:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4740:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4716:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4754:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4716:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1169,"nodeType":"ExpressionStatement","src":"4716:43:5"},{"expression":{"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"4769:22:5","subExpression":{"expression":{"id":1170,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4769:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission storage pointer"}},"id":1172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4780:9:5","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":870,"src":"4769:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1174,"nodeType":"ExpressionStatement","src":"4769:22:5"},{"assignments":[1179],"declarations":[{"constant":false,"id":1179,"mutability":"mutable","name":"voters","nameLocation":"4902:6:5","nodeType":"VariableDeclaration","scope":1229,"src":"4884:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4884:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1178,"nodeType":"ArrayTypeName","src":"4884:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1183,"initialValue":{"baseExpression":{"id":1180,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"4911:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":1182,"indexExpression":{"id":1181,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4928:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4911:31:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4884:58:5"},{"body":{"id":1220,"nodeType":"Block","src":"4996:176:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1195,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5014:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1197,"indexExpression":{"id":1196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5021:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5014:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5027:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5031:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5027:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5014:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"5010:152:5","trueBody":{"id":1218,"nodeType":"Block","src":"5039:123:5","statements":[{"expression":{"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1201,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5057:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1203,"indexExpression":{"id":1202,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"5064:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5057:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1204,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5069:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1209,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1205,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5076:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:5","memberName":"length","nodeType":"MemberAccess","src":"5076:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5092:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5076:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5069:25:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5057:37:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1211,"nodeType":"ExpressionStatement","src":"5057:37:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1212,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"5112:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5119:3:5","memberName":"pop","nodeType":"MemberAccess","src":"5112:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"5112:12:5"},{"id":1217,"nodeType":"Break","src":"5142:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4972:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1189,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4976:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4983:6:5","memberName":"length","nodeType":"MemberAccess","src":"4976:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4972:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1221,"initializationExpression":{"assignments":[1185],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"i","nameLocation":"4965:1:5","nodeType":"VariableDeclaration","scope":1221,"src":"4957:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4957:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1187,"initialValue":{"hexValue":"30","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4969:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4957:13:5"},"loopExpression":{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4991:3:5","subExpression":{"id":1192,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4991:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"4991:3:5"},"nodeType":"ForStatement","src":"4952:220:5"},{"eventCall":{"arguments":[{"id":1223,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5207:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1224,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"5222:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1225,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5233:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5237:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5233:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"VoteRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5195:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"EmitStatement","src":"5190:54:5"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"4185:72:5","text":" @dev Remove a vote (allow users to change their vote)"},"functionSelector":"3f68fde4","id":1230,"implemented":true,"kind":"function","modifiers":[{"id":1123,"kind":"modifierInvocation","modifierName":{"id":1122,"name":"nonReentrant","nameLocations":["4314:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4314:12:5"},"nodeType":"ModifierInvocation","src":"4314:12:5"}],"name":"removeVote","nameLocation":"4271:10:5","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"_submissionId","nameLocation":"4290:13:5","nodeType":"VariableDeclaration","scope":1230,"src":"4282:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"4282:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4281:23:5"},"returnParameters":{"id":1124,"nodeType":"ParameterList","parameters":[],"src":"4327:0:5"},"scope":1522,"src":"4262:989:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1243,"nodeType":"Block","src":"5400:50:5","statements":[{"expression":{"baseExpression":{"id":1239,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5417:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":1241,"indexExpression":{"id":1240,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"5429:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5417:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"functionReturnParameters":1238,"id":1242,"nodeType":"Return","src":"5410:33:5"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"5261:46:5","text":" @dev Get submission details"},"functionSelector":"3e8686cc","id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"getSubmission","nameLocation":"5321:13:5","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"_submissionId","nameLocation":"5343:13:5","nodeType":"VariableDeclaration","scope":1244,"src":"5335:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"5335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5334:23:5"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"5381:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission"},"typeName":{"id":1236,"nodeType":"UserDefinedTypeName","pathNode":{"id":1235,"name":"Submission","nameLocations":["5381:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"5381:10:5"},"referencedDeclaration":875,"src":"5381:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"visibility":"internal"}],"src":"5380:19:5"},"scope":1522,"src":"5312:138:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1257,"nodeType":"Block","src":"5614:54:5","statements":[{"expression":{"baseExpression":{"id":1253,"name":"contestSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5631:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":1255,"indexExpression":{"id":1254,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5650:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5631:30:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":1252,"id":1256,"nodeType":"Return","src":"5624:37:5"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"5460:57:5","text":" @dev Get all submissions for a contest"},"functionSelector":"4c406c01","id":1258,"implemented":true,"kind":"function","modifiers":[],"name":"getContestSubmissions","nameLocation":"5531:21:5","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"_contestId","nameLocation":"5561:10:5","nodeType":"VariableDeclaration","scope":1258,"src":"5553:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5553:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5552:20:5"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1258,"src":"5596:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ArrayTypeName","src":"5596:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5595:18:5"},"scope":1522,"src":"5522:146:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1278,"nodeType":"Block","src":"5938:85:5","statements":[{"expression":{"components":[{"baseExpression":{"id":1270,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5956:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":1272,"indexExpression":{"id":1271,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"5968:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5956:26:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},{"baseExpression":{"id":1273,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"5984:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":1275,"indexExpression":{"id":1274,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"6001:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5984:31:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":1276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5955:61:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Submission_$875_storage_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(struct VotingContract.Submission storage ref,address[] storage ref)"}},"functionReturnParameters":1269,"id":1277,"nodeType":"Return","src":"5948:68:5"}]},"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"5678:56:5","text":" @dev Get submission with vote details"},"functionSelector":"e2555a73","id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"getSubmissionWithVotes","nameLocation":"5748:22:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"_submissionId","nameLocation":"5779:13:5","nodeType":"VariableDeclaration","scope":1279,"src":"5771:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5770:23:5"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"submission","nameLocation":"5875:10:5","nodeType":"VariableDeclaration","scope":1279,"src":"5857:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission"},"typeName":{"id":1264,"nodeType":"UserDefinedTypeName","pathNode":{"id":1263,"name":"Submission","nameLocations":["5857:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"5857:10:5"},"referencedDeclaration":875,"src":"5857:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"voters","nameLocation":"5916:6:5","nodeType":"VariableDeclaration","scope":1279,"src":"5899:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"5899:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1267,"nodeType":"ArrayTypeName","src":"5899:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5843:89:5"},"scope":1522,"src":"5739:284:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1452,"nodeType":"Block","src":"6252:1252:5","statements":[{"assignments":[1295],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"submissionIds","nameLocation":"6279:13:5","nodeType":"VariableDeclaration","scope":1452,"src":"6262:30:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1294,"nodeType":"ArrayTypeName","src":"6262:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1299,"initialValue":{"baseExpression":{"id":1296,"name":"contestSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"6295:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":1298,"indexExpression":{"id":1297,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"6314:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6295:30:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6262:63:5"},{"assignments":[1301],"declarations":[{"constant":false,"id":1301,"mutability":"mutable","name":"length","nameLocation":"6343:6:5","nodeType":"VariableDeclaration","scope":1452,"src":"6335:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"6335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1304,"initialValue":{"expression":{"id":1302,"name":"submissionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6352:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6366:6:5","memberName":"length","nodeType":"MemberAccess","src":"6352:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6335:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6395:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6405:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6395:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"IfStatement","src":"6391:68:5","trueBody":{"id":1315,"nodeType":"Block","src":"6408:51:5","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6446:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6429:16:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct VotingContract.Submission memory[] memory)"},"typeName":{"baseType":{"id":1309,"nodeType":"UserDefinedTypeName","pathNode":{"id":1308,"name":"Submission","nameLocations":["6433:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6433:10:5"},"referencedDeclaration":875,"src":"6433:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1310,"nodeType":"ArrayTypeName","src":"6433:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}}},"id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6429:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"functionReturnParameters":1290,"id":1314,"nodeType":"Return","src":"6422:26:5"}]}},{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"allSubmissions","nameLocation":"6536:14:5","nodeType":"VariableDeclaration","scope":1452,"src":"6516:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission[]"},"typeName":{"baseType":{"id":1319,"nodeType":"UserDefinedTypeName","pathNode":{"id":1318,"name":"Submission","nameLocations":["6516:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6516:10:5"},"referencedDeclaration":875,"src":"6516:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1320,"nodeType":"ArrayTypeName","src":"6516:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}},"visibility":"internal"}],"id":1328,"initialValue":{"arguments":[{"id":1326,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6570:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6553:16:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct VotingContract.Submission memory[] memory)"},"typeName":{"baseType":{"id":1323,"nodeType":"UserDefinedTypeName","pathNode":{"id":1322,"name":"Submission","nameLocations":["6557:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6557:10:5"},"referencedDeclaration":875,"src":"6557:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1324,"nodeType":"ArrayTypeName","src":"6557:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6516:61:5"},{"body":{"id":1349,"nodeType":"Block","src":"6624:74:5","statements":[{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1339,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6638:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1341,"indexExpression":{"id":1340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6653:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6638:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1342,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"6658:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$875_storage_$","typeString":"mapping(uint256 => struct VotingContract.Submission storage ref)"}},"id":1346,"indexExpression":{"baseExpression":{"id":1343,"name":"submissionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6670:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1345,"indexExpression":{"id":1344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6684:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6670:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6658:29:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage","typeString":"struct VotingContract.Submission storage ref"}},"src":"6638:49:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1348,"nodeType":"ExpressionStatement","src":"6638:49:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6607:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1334,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6611:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6607:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"initializationExpression":{"assignments":[1330],"declarations":[{"constant":false,"id":1330,"mutability":"mutable","name":"i","nameLocation":"6600:1:5","nodeType":"VariableDeclaration","scope":1350,"src":"6592:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1332,"initialValue":{"hexValue":"30","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6604:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6592:13:5"},"loopExpression":{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6619:3:5","subExpression":{"id":1336,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6619:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"6619:3:5"},"nodeType":"ForStatement","src":"6587:111:5"},{"body":{"id":1407,"nodeType":"Block","src":"6808:348:5","statements":[{"body":{"id":1405,"nodeType":"Block","src":"6863:283:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1373,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6885:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1375,"indexExpression":{"id":1374,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"6900:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6885:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1376,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6903:9:5","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":870,"src":"6885:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":1377,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6915:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1379,"indexExpression":{"id":1378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6930:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6915:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6933:9:5","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":870,"src":"6915:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6885:57:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"nodeType":"IfStatement","src":"6881:251:5","trueBody":{"id":1403,"nodeType":"Block","src":"6944:188:5","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"temp","nameLocation":"6984:4:5","nodeType":"VariableDeclaration","scope":1403,"src":"6966:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission"},"typeName":{"id":1383,"nodeType":"UserDefinedTypeName","pathNode":{"id":1382,"name":"Submission","nameLocations":["6966:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6966:10:5"},"referencedDeclaration":875,"src":"6966:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"visibility":"internal"}],"id":1388,"initialValue":{"baseExpression":{"id":1385,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"6991:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1387,"indexExpression":{"id":1386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"7006:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6991:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"nodeType":"VariableDeclarationStatement","src":"6966:42:5"},{"expression":{"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1389,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7030:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1391,"indexExpression":{"id":1390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"7045:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7030:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1392,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7050:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1394,"indexExpression":{"id":1393,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7065:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7050:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"src":"7030:37:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1396,"nodeType":"ExpressionStatement","src":"7030:37:5"},{"expression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1397,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7089:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1399,"indexExpression":{"id":1398,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"7104:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7089:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1400,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7109:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"src":"7089:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1402,"nodeType":"ExpressionStatement","src":"7089:24:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"6846:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1368,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6850:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6846:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1406,"initializationExpression":{"assignments":[1362],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"j","nameLocation":"6835:1:5","nodeType":"VariableDeclaration","scope":1406,"src":"6827:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"6827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1366,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6839:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6839:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6827:17:5"},"loopExpression":{"expression":{"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6858:3:5","subExpression":{"id":1370,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"6858:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ExpressionStatement","src":"6858:3:5"},"nodeType":"ForStatement","src":"6822:324:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6791:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1356,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"6795:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1408,"initializationExpression":{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"i","nameLocation":"6784:1:5","nodeType":"VariableDeclaration","scope":1408,"src":"6776:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"6776:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1354,"initialValue":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6776:13:5"},"loopExpression":{"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6803:3:5","subExpression":{"id":1358,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"6803:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"nodeType":"ExpressionStatement","src":"6803:3:5"},"nodeType":"ForStatement","src":"6771:385:5"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"resultLength","nameLocation":"7218:12:5","nodeType":"VariableDeclaration","scope":1452,"src":"7210:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"7210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1417,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1411,"name":"_limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7233:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1412,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7242:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7233:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1415,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"7260:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7233:33:5","trueExpression":{"id":1414,"name":"_limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7251:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7210:56:5"},{"assignments":[1422],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"topSubmissions","nameLocation":"7296:14:5","nodeType":"VariableDeclaration","scope":1452,"src":"7276:34:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission[]"},"typeName":{"baseType":{"id":1420,"nodeType":"UserDefinedTypeName","pathNode":{"id":1419,"name":"Submission","nameLocations":["7276:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"7276:10:5"},"referencedDeclaration":875,"src":"7276:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1421,"nodeType":"ArrayTypeName","src":"7276:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}},"visibility":"internal"}],"id":1429,"initialValue":{"arguments":[{"id":1427,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"7330:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7313:16:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct VotingContract.Submission memory[] memory)"},"typeName":{"baseType":{"id":1424,"nodeType":"UserDefinedTypeName","pathNode":{"id":1423,"name":"Submission","nameLocations":["7317:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"7317:10:5"},"referencedDeclaration":875,"src":"7317:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1425,"nodeType":"ArrayTypeName","src":"7317:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7276:67:5"},{"body":{"id":1448,"nodeType":"Block","src":"7396:62:5","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1440,"name":"topSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"7410:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1442,"indexExpression":{"id":1441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7425:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7410:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1443,"name":"allSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"7430:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"id":1445,"indexExpression":{"id":1444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7445:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7430:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"src":"7410:37:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_memory_ptr","typeString":"struct VotingContract.Submission memory"}},"id":1447,"nodeType":"ExpressionStatement","src":"7410:37:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7373:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1435,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"7377:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7373:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1449,"initializationExpression":{"assignments":[1431],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"i","nameLocation":"7366:1:5","nodeType":"VariableDeclaration","scope":1449,"src":"7358:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"7358:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1433,"initialValue":{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7370:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7358:13:5"},"loopExpression":{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7391:3:5","subExpression":{"id":1437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"7391:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7391:3:5"},"nodeType":"ForStatement","src":"7353:105:5"},{"expression":{"id":1450,"name":"topSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"7483:14:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission memory[] memory"}},"functionReturnParameters":1290,"id":1451,"nodeType":"Return","src":"7476:21:5"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"6033:75:5","text":" @dev Get top submissions for a contest (sorted by votes)"},"functionSelector":"938de8c3","id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"getTopSubmissions","nameLocation":"6122:17:5","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"_contestId","nameLocation":"6148:10:5","nodeType":"VariableDeclaration","scope":1453,"src":"6140:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6140:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"_limit","nameLocation":"6168:6:5","nodeType":"VariableDeclaration","scope":1453,"src":"6160:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"6160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6139:36:5"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"6226:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_memory_ptr_$dyn_memory_ptr","typeString":"struct VotingContract.Submission[]"},"typeName":{"baseType":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"Submission","nameLocations":["6226:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":875,"src":"6226:10:5"},"referencedDeclaration":875,"src":"6226:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$875_storage_ptr","typeString":"struct VotingContract.Submission"}},"id":1288,"nodeType":"ArrayTypeName","src":"6226:12:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Submission_$875_storage_$dyn_storage_ptr","typeString":"struct VotingContract.Submission[]"}},"visibility":"internal"}],"src":"6225:21:5"},"scope":1522,"src":"6113:1391:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1469,"nodeType":"Block","src":"7672:54:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1463,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"7689:8:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1465,"indexExpression":{"id":1464,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"7698:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7689:23:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1467,"indexExpression":{"id":1466,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7713:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7689:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1462,"id":1468,"nodeType":"Return","src":"7682:37:5"}]},"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"7514:64:5","text":" @dev Check if user has voted for a submission"},"functionSelector":"dc296ae1","id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"hasUserVoted","nameLocation":"7592:12:5","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"_submissionId","nameLocation":"7613:13:5","nodeType":"VariableDeclaration","scope":1470,"src":"7605:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"7605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"_user","nameLocation":"7636:5:5","nodeType":"VariableDeclaration","scope":1470,"src":"7628:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"7628:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7604:38:5"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"7666:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1460,"name":"bool","nodeType":"ElementaryTypeName","src":"7666:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7665:6:5"},"scope":1522,"src":"7583:143:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1486,"nodeType":"Block","src":"7894:57:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1480,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7911:14:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1482,"indexExpression":{"id":1481,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"7926:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7911:26:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1484,"indexExpression":{"id":1483,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7938:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7911:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1479,"id":1485,"nodeType":"Return","src":"7904:40:5"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"7736:59:5","text":" @dev Get user's submission for a contest"},"functionSelector":"3687f7bf","id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"getUserSubmission","nameLocation":"7809:17:5","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"_contestId","nameLocation":"7835:10:5","nodeType":"VariableDeclaration","scope":1487,"src":"7827:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"7827:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"_user","nameLocation":"7855:5:5","nodeType":"VariableDeclaration","scope":1487,"src":"7847:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"7847:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7826:35:5"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1487,"src":"7885:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"7885:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7884:9:5"},"scope":1522,"src":"7800:151:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1495,"nodeType":"Block","src":"8080:44:5","statements":[{"expression":{"id":1493,"name":"_submissionIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"8097:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1492,"id":1494,"nodeType":"Return","src":"8090:27:5"}]},"documentation":{"id":1488,"nodeType":"StructuredDocumentation","src":"7961:51:5","text":" @dev Get total submissions count"},"functionSelector":"54554d46","id":1496,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalSubmissions","nameLocation":"8026:19:5","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[],"src":"8045:2:5"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1496,"src":"8071:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"8071:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8070:9:5"},"scope":1522,"src":"8017:107:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1520,"nodeType":"Block","src":"8275:125:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"_newFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8293:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8316:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8308:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8308:7:5","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8293:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8320:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":1504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8285:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8285:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"ExpressionStatement","src":"8285:53:5"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1514,"name":"contestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8348:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1516,"name":"_newFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8381:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1515,"name":"IContestFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8365:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IContestFactory_$855_$","typeString":"type(contract IContestFactory)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8365:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"src":"8348:45:5","typeDescriptions":{"typeIdentifier":"t_contract$_IContestFactory_$855","typeString":"contract IContestFactory"}},"id":1519,"nodeType":"ExpressionStatement","src":"8348:45:5"}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"8134:66:5","text":" @dev Update ContestFactory address (owner only)"},"functionSelector":"1448c970","id":1521,"implemented":true,"kind":"function","modifiers":[{"id":1502,"kind":"modifierInvocation","modifierName":{"id":1501,"name":"onlyOwner","nameLocations":["8265:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8265:9:5"},"nodeType":"ModifierInvocation","src":"8265:9:5"}],"name":"updateContestFactory","nameLocation":"8214:20:5","nodeType":"FunctionDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"_newFactory","nameLocation":"8243:11:5","nodeType":"VariableDeclaration","scope":1521,"src":"8235:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"8235:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8234:21:5"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"8275:0:5"},"scope":1522,"src":"8205:195:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1523,"src":"504:7898:5","usedErrors":[13,18,191],"usedEvents":[24,917,925,933]}],"src":"32:8371:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":188,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ContestFactory.sol":{"ContestFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_feeCollector","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"uint256","name":"prizePool","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"ContestCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":false,"internalType":"enum ContestFactory.ContestStatus","name":"oldStatus","type":"uint8"},{"indexed":false,"internalType":"enum ContestFactory.ContestStatus","name":"newStatus","type":"uint8"}],"name":"ContestStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFee","type":"uint256"}],"name":"PlatformFeeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newTotal","type":"uint256"}],"name":"PrizePoolIncreased","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"contests","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"prizePool","type":"uint256"},{"internalType":"address","name":"prizeToken","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"votingEndTime","type":"uint256"},{"internalType":"enum ContestFactory.ContestStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"submissionCount","type":"uint256"},{"internalType":"uint256","name":"totalVotes","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_metadataURI","type":"string"},{"internalType":"uint256","name":"_prizePool","type":"uint256"},{"internalType":"address","name":"_prizeToken","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256","name":"_votingEndTime","type":"uint256"}],"name":"createContest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"creatorContests","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeCollector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"getContest","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"prizePool","type":"uint256"},{"internalType":"address","name":"prizeToken","type":"address"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"votingEndTime","type":"uint256"},{"internalType":"enum ContestFactory.ContestStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"submissionCount","type":"uint256"},{"internalType":"uint256","name":"totalVotes","type":"uint256"}],"internalType":"struct ContestFactory.Contest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_creator","type":"address"}],"name":"getCreatorContests","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalContests","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"increasePrizePool","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"incrementSubmissionCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"incrementVoteCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"isContestActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"isVotingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeBps","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"enum ContestFactory.ContestStatus","name":"_newStatus","type":"uint8"}],"name":"updateContestStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newCollector","type":"address"}],"name":"updateFeeCollector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFeeBps","type":"uint256"}],"name":"updatePlatformFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"details":"Creates and manages Halloween contest competitions on Celo","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"createContest(string,string,uint256,address,uint256,uint256,uint256)":{"details":"Create a new contest"},"getContest(uint256)":{"details":"Get contest details"},"getCreatorContests(address)":{"details":"Get contests created by an address"},"getTotalContests()":{"details":"Get total contest count"},"increasePrizePool(uint256)":{"details":"Increase prize pool"},"incrementSubmissionCount(uint256)":{"details":"Update submission count (called by VotingContract)"},"incrementVoteCount(uint256)":{"details":"Update vote count (called by VotingContract)"},"isContestActive(uint256)":{"details":"Check if contest is active"},"isVotingActive(uint256)":{"details":"Check if voting is active"},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateContestStatus(uint256,uint8)":{"details":"Update contest status"},"updateFeeCollector(address)":{"details":"Update fee collector (owner only)"},"updatePlatformFee(uint256)":{"details":"Update platform fee (owner only)"},"withdrawFees()":{"details":"Withdraw platform fees (owner only)"}},"title":"ContestFactory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100cf57601f61170c38819003918201601f19168301916001600160401b038311848410176100d4578084926020946040528339810103126100cf57516001600160a01b0390818116908190036100cf5733156100b65760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560fa600555600654161760065561162190816100eb8239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816322dcd13e1461134757508063476343ee146112c25780636d436fa31461120e578063715018a6146111b557806373d53dd21461119757806374828bbb146110b1578063772744b514610fae5780638da5cb5b14610f85578063904b9f7214610da05780639d7ed73814610cb6578063a490a21b1461065d578063aa0b5988146105c1578063af1087e91461041c578063bf5e253f146102f4578063c415b95c146102cb578063cda6d0021461029d578063d2c35ce81461021e578063e6bf74c9146101c6578063f2fde38b1461013d5763f3b9e61c14610106573861000f565b34610138576020366003190112610138576004356000526003602052600b6040600020016101348154611595565b9055005b600080fd5b3461013857602036600319011261013857610156611362565b61015e611569565b6001600160a01b039081169081156101ad57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610138576040366003190112610138576101df611362565b6001600160a01b0316600090815260046020526040902080546024359190821015610138576020916102109161153b565b90546040519160031b1c8152f35b3461013857602036600319011261013857610237611362565b61023f611569565b6001600160a01b03168015610266576001600160601b0360a01b6006541617600655600080f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610138576020366003190112610138576004356000526003602052600a6040600020016101348154611595565b34610138576000366003190112610138576006546040516001600160a01b039091168152602090f35b34610138576020366003190112610138576004356000526003602052604060002060405190610322826113ff565b8054825260018101546001600160a01b0390811660208401526103476002830161143e565b60408401526103586003830161143e565b60608401526004820154608084015260058201541660a083015260068101549060c0830191825260078101549260e081019384526008820154610100820152610160600b60ff600985015416936103b4610120850195866115a4565b600a8101546101408501520154910152519160058310156104065760016020931491826103fa575b50816103ee575b506040519015158152f35b905051421115826103e3565b514210159150836103dc565b634e487b7160e01b600052602160045260246000fd5b602080600319360112610138576004356104346115c8565b341561058b576000818152600383526040902060058101546001600160a01b03166105465760ff60098201541660058110156104065760038114610511576004146104d8576004018054903482018092116104c257819055604051923484528301527f8fb82f92fbac15f0a9edc91d47d33edcfce30f6805c6a005f56e95e4f9fd9bb460403393a360018055005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260048101849052601160248201527010dbdb9d195cdd0818d85b98d95b1b1959607a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052600d60248201526c10dbdb9d195cdd08195b991959609a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052601c60248201527f436f6e74657374207573657320746f6b656e2c206e6f742043454c4f000000006044820152606490fd5b60405162461bcd60e51b815260048101839052600e60248201526d4d7573742073656e642043454c4f60901b6044820152606490fd5b34610138576020366003190112610138576004356105dd611569565b6103e8811161061f5760407fd347e206f25a89b917fc9482f1a2d294d749baa4dc9bde7fb495ee11fe49164391600554908060055582519182526020820152a1005b60405162461bcd60e51b815260206004820152601660248201527546656520746f6f206869676820286d6178203130252960501b6044820152606490fd5b60e03660031901126101385760043567ffffffffffffffff8111610138576106899036906004016114e4565b60243567ffffffffffffffff8111610138576106a99036906004016114e4565b6064803591906001600160a01b0383168303610138576106c76115c8565b426084351115610c745760843560a4351115610c325760a43560c4351115610be25760443515610b94576001600160a01b03831615610b48575b506002549161070f83611595565b6002556040519161071f836113ff565b8383523360208401528460408401526060830152604435608083015260018060a01b031660a082015260843560c082015260a43560e082015260c435610100820152600061012082015260006101408201526000610160820152816000526003602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b825416179055604081015180519067ffffffffffffffff82116109925781906107d460028601546113c5565b601f8111610af5575b50602090601f8311600114610a8357600092610a78575b50508160011b916000199060031b1c19161760028301555b606081015180519067ffffffffffffffff821161099257819061083260038601546113c5565b601f8111610a25575b50602090601f83116001146109b3576000926109a8575b50508160011b916000199060031b1c19161760038301555b608081015160048301556005820160018060a01b0360a0830151166001600160601b0360a01b82541617905560c0810151600683015560e081015160078301556101008101516008830155610120810151600581101561040657600b916108d761016092600986016115b0565b610140810151600a850155015191015533600052600460205260406000209182549268010000000000000000841015610992578361091c91600160209601815561153b565b81549060031b9084821b91600019901b1916179055817f4aaaf0ce6b66893efbe13b0c3adb4a8b2077c1e3e57b0432fdeffda2eca9df0661096860405193608085526080850190611378565b9260443586820152608435604082015260a43560608201528033940390a360018055604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508680610852565b9250600385016000526020600020906000935b601f1984168510610a0a576001945083601f198116106109f1575b505050811b01600383015561086a565b015160001960f88460031b161c191690558680806109e1565b818101518355602094850194600190930192909101906109c6565b909150600385016000526020600020601f840160051c810160208510610a71575b90849392915b601f830160051c82018110610a6257505061083b565b60008155859450600101610a4c565b5080610a46565b0151905086806107f4565b9250600285016000526020600020906000935b601f1984168510610ada576001945083601f19811610610ac1575b505050811b01600283015561080c565b015160001960f88460031b161c19169055868080610ab1565b81810151835560209485019460019093019290910190610a96565b909150600285016000526020600020601f840160051c810160208510610b41575b90849392915b601f830160051c82018110610b325750506107dd565b60008155859450600101610b1c565b5080610b16565b6044353410156107015760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742043454c4f20666f72207072697a6520706f6f6c6044820152fd5b608490600360fc1b6040519162461bcd60e51b835260206004840152602160248401527f5072697a6520706f6f6c206d7573742062652067726561746572207468616e206044840152820152fd5b6084906308195b9960e21b6040519162461bcd60e51b8352602060048401526024808401527f566f74696e6720656e64206d75737420626520616674657220636f6e746573746044840152820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f456e642074696d65206d757374206265206166746572207374617274000000006044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f53746172742074696d65206d75737420626520696e20667574757265000000006044820152fd5b34610138576020366003190112610138576004356000908152600360205260409020805460018201546001600160a01b0390811692610cf76002820161143e565b90610d046003820161143e565b6004820154936005830154166006830154600784015490600885015492600986015460ff1694600a87015496600b0154976040519b8c9b8c5260208c01526101808060408d01528b01610d5691611378565b8a810360608c0152610d6791611378565b9760808a015260a089015260c088015260e08701526101008601526101208501610d90916113b8565b6101408401526101608301520390f35b34610138576020366003190112610138576000610160604051610dc2816113ff565b828152826020820152606060408201526060808201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152015260043560005260036020526040600020600b60405191610e26836113ff565b8054835260018101546001600160a01b03166020840152610e496002820161143e565b6040840152610e5a6003820161143e565b60608401526004810154608084015260058101546001600160a01b031660a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610eb19060ff1661012085016115a4565b600a81015461014084015201546101608201526040518091602082528051602083015260018060a01b036020820151166040830152610160610f1d610f07604084015161018060608701526101a0860190611378565b6060840151858203601f19016080870152611378565b91608081015160a085015260018060a01b0360a08201511660c085015260c081015160e085015260e0810151610100850152610100810151610120850152610f6f6101208201516101408601906113b8565b6101408101518285015201516101808301520390f35b34610138576000366003190112610138576000546040516001600160a01b039091168152602090f35b34610138576020366003190112610138576004356000526003602052604060002060405190610fdc826113ff565b8054825260018101546001600160a01b0390811660208401526110016002830161143e565b60408401526110126003830161143e565b60608401526004820154608084015260058201541660a0830152600681015460c083015260078101549060e083019182526008810154926101008101938452610160600b60ff6009850154169361106e610120850195866115a4565b600a8101546101408501520154910152519160058310156104065760026020931491826110a65750816103ee57506040519015158152f35b5142119150836103dc565b346101385760403660031901126101385760043560243560058110156101385760008281526003602052604090206001810154336001600160a01b0391821614908115611189575b5015611153577f2049bae7871bc32e098ec2b73ebfa495ed2496dc8a5dc7bf9d4714eb4e09d2bb916111506009604093019161113a8160ff855416946115b0565b611146845180946113b8565b60208301906113b8565ba2005b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b9050600054163314846110f9565b34610138576000366003190112610138576020600254604051908152f35b34610138576000366003190112610138576111ce611569565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461013857602080600319360112610138576001600160a01b03611230611362565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b868282106112ae57868661126e8288038361141c565b604051928392818401908285525180915260408401929160005b82811061129757505050500390f35b835185528695509381019392810192600101611288565b835485529093019260019283019201611258565b34610138576000366003190112610138576112db611569565b47801561130c576006546000918291829182916001600160a01b031682f11561130057005b6040513d6000823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b34610138576000366003190112610138576020906005548152f35b600435906001600160a01b038216820361013857565b919082519283825260005b8481106113a4575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611383565b9060058210156104065752565b90600182811c921680156113f5575b60208310146113df57565b634e487b7160e01b600052602260045260246000fd5b91607f16916113d4565b610180810190811067ffffffffffffffff82111761099257604052565b90601f8019910116810190811067ffffffffffffffff82111761099257604052565b9060405191826000825492611452846113c5565b9081845260019485811690816000146114c1575060011461147e575b505061147c9250038361141c565b565b9093915060005260209081600020936000915b8183106114a957505061147c9350820101388061146e565b85548884018501529485019487945091830191611491565b91505061147c94506020925060ff191682840152151560051b820101388061146e565b81601f820112156101385780359067ffffffffffffffff82116109925760405192611519601f8401601f19166020018561141c565b8284526020838301011161013857816000926020809301838601378301015290565b80548210156115535760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b0316330361157d57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146104c25760010190565b60058210156104065752565b9060058110156104065760ff80198354169116179055565b6002600154146115d9576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220f2c30d4bfee6638c4a3b1093b5c6ea15e38a3e564ebb482ceae413fc5436bb4b64736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xCF JUMPI PUSH1 0x1F PUSH2 0x170C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xD4 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xCF JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xCF JUMPI CALLER ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0xFA PUSH1 0x5 SSTORE PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH2 0x1621 SWAP1 DUP2 PUSH2 0xEB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x22DCD13E EQ PUSH2 0x1347 JUMPI POP DUP1 PUSH4 0x476343EE EQ PUSH2 0x12C2 JUMPI DUP1 PUSH4 0x6D436FA3 EQ PUSH2 0x120E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11B5 JUMPI DUP1 PUSH4 0x73D53DD2 EQ PUSH2 0x1197 JUMPI DUP1 PUSH4 0x74828BBB EQ PUSH2 0x10B1 JUMPI DUP1 PUSH4 0x772744B5 EQ PUSH2 0xFAE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF85 JUMPI DUP1 PUSH4 0x904B9F72 EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x9D7ED738 EQ PUSH2 0xCB6 JUMPI DUP1 PUSH4 0xA490A21B EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xAA0B5988 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xAF1087E9 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xBF5E253F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xCDA6D002 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE6BF74C9 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13D JUMPI PUSH4 0xF3B9E61C EQ PUSH2 0x106 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x134 DUP2 SLOAD PUSH2 0x1595 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1DF PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x210 SWAP2 PUSH2 0x153B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x237 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x134 DUP2 SLOAD PUSH2 0x1595 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x322 DUP3 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x347 PUSH1 0x2 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x358 PUSH1 0x3 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0xC0 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x7 DUP2 ADD SLOAD SWAP3 PUSH1 0xE0 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x160 PUSH1 0xB PUSH1 0xFF PUSH1 0x9 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x3B4 PUSH2 0x120 DUP6 ADD SWAP6 DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 PUSH2 0x3FA JUMPI JUMPDEST POP DUP2 PUSH2 0x3EE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP MLOAD TIMESTAMP GT ISZERO DUP3 PUSH2 0x3E3 JUMP JUMPDEST MLOAD TIMESTAMP LT ISZERO SWAP2 POP DUP4 PUSH2 0x3DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x434 PUSH2 0x15C8 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x546 JUMPI PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x3 DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x4 EQ PUSH2 0x4D8 JUMPI PUSH1 0x4 ADD DUP1 SLOAD SWAP1 CALLVALUE DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4C2 JUMPI DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLVALUE DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0x8FB82F92FBAC15F0A9EDC91D47D33EDCFCE30F6805C6A005F56E95E4F9FD9BB4 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDB9D195CDD0818D85B98D95B1B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DBDB9D195CDD08195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657374207573657320746F6B656E2C206E6F742043454C4F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D7573742073656E642043454C4F PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5DD PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x61F JUMPI PUSH1 0x40 PUSH32 0xD347E206F25A89B917FC9482F1A2D294D749BAA4DC9BDE7FB495EE11FE491643 SWAP2 PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46656520746F6F206869676820286D61782031302529 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x138 JUMPI PUSH2 0x689 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x138 JUMPI PUSH2 0x6A9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x64 DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x138 JUMPI PUSH2 0x6C7 PUSH2 0x15C8 JUMP JUMPDEST TIMESTAMP PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0xC74 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD GT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xB94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xB48 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD SWAP2 PUSH2 0x70F DUP4 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x71F DUP4 PUSH2 0x13FF JUMP JUMPDEST DUP4 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP5 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI DUP2 SWAP1 PUSH2 0x7D4 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xAF5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA83 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xA78 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI DUP2 SWAP1 PUSH2 0x832 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA25 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x9B3 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x9A8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0xB SWAP2 PUSH2 0x8D7 PUSH2 0x160 SWAP3 PUSH1 0x9 DUP7 ADD PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x992 JUMPI DUP4 PUSH2 0x91C SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0x153B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH32 0x4AAAF0CE6B66893EFBE13B0C3ADB4A8B2077C1E3E57B0432FDEFFDA2ECA9DF06 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1378 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x852 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xA0A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x9F1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x86A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x9E1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xA71 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xA62 JUMPI POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xA4C JUMP JUMPDEST POP DUP1 PUSH2 0xA46 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xADA JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xAC1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x80C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xAB1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xB41 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xB32 JUMPI POP POP PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xB1C JUMP JUMPDEST POP DUP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD CALLVALUE LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043454C4F20666F72207072697A6520706F6F6C PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x5072697A6520706F6F6C206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH4 0x8195B99 PUSH1 0xE2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP1 DUP5 ADD MSTORE PUSH32 0x566F74696E6720656E64206D75737420626520616674657220636F6E74657374 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520616674657220737461727400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D75737420626520696E2066757475726500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH2 0xCF7 PUSH1 0x2 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST SWAP1 PUSH2 0xD04 PUSH1 0x3 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0xA DUP8 ADD SLOAD SWAP7 PUSH1 0xB ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0x40 DUP14 ADD MSTORE DUP12 ADD PUSH2 0xD56 SWAP2 PUSH2 0x1378 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0xD67 SWAP2 PUSH2 0x1378 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD PUSH2 0xD90 SWAP2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0xDC2 DUP2 PUSH2 0x13FF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD SWAP2 PUSH2 0xE26 DUP4 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE49 PUSH1 0x2 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xE5A PUSH1 0x3 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xEB1 SWAP1 PUSH1 0xFF AND PUSH2 0x120 DUP6 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x160 PUSH2 0xF1D PUSH2 0xF07 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x180 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x1378 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0xF6F PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFDC DUP3 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1001 PUSH1 0x2 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1012 PUSH1 0x3 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD SWAP1 PUSH1 0xE0 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x8 DUP2 ADD SLOAD SWAP3 PUSH2 0x100 DUP2 ADD SWAP4 DUP5 MSTORE PUSH2 0x160 PUSH1 0xB PUSH1 0xFF PUSH1 0x9 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x106E PUSH2 0x120 DUP6 ADD SWAP6 DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 PUSH2 0x10A6 JUMPI POP DUP2 PUSH2 0x3EE JUMPI POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST MLOAD TIMESTAMP GT SWAP2 POP DUP4 PUSH2 0x3DC JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x1189 JUMPI JUMPDEST POP ISZERO PUSH2 0x1153 JUMPI PUSH32 0x2049BAE7871BC32E098EC2B73EBFA495ED2496DC8A5DC7BF9D4714EB4E09D2BB SWAP2 PUSH2 0x1150 PUSH1 0x9 PUSH1 0x40 SWAP4 ADD SWAP2 PUSH2 0x113A DUP2 PUSH1 0xFF DUP6 SLOAD AND SWAP5 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x1146 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x13B8 JUMP JUMPDEST LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD AND CALLER EQ DUP5 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x11CE PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x1362 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x12AE JUMPI DUP7 DUP7 PUSH2 0x126E DUP3 DUP9 SUB DUP4 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1297 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1288 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1258 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x12DB PUSH2 0x1569 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x130C JUMPI PUSH1 0x6 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x1300 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x13A4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1383 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x406 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x13F5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x13DF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x992 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x992 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1452 DUP5 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x14C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x147E JUMPI JUMPDEST POP POP PUSH2 0x147C SWAP3 POP SUB DUP4 PUSH2 0x141C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x14A9 JUMPI POP POP PUSH2 0x147C SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x146E JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1491 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147C SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x146E JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x138 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1519 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x141C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x138 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1553 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x157D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x406 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x15D9 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xC3 0xD 0x4B INVALID 0xE6 PUSH4 0x8C4A3B10 SWAP4 0xB5 0xC6 0xEA ISZERO 0xE3 DUP11 RETURNDATACOPY JUMP 0x4E 0xBB BASEFEE 0x2C 0xEA 0xE4 SGT 0xFC SLOAD CALLDATASIZE 0xBB 0x4B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"272:7119:3:-:0;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;1832:10;1273:26:0;1269:95;;-1:-1:-1;272:7119:3;;;;;;;1832:10;;272:7119;;;;-1:-1:-1;272:7119:3;;;1832:10;;272:7119;;3052:40:0;-1:-1:-1;3052:40:0;;272:7119:3;;;1148:3;;272:7119;1854:28;272:7119;;;1854:28;272:7119;;;;;;;;1269:95:0;272:7119:3;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;272:7119:3;;;1322:31:0;272:7119:3;-1:-1:-1;272:7119:3;;;;;;-1:-1:-1;272:7119:3;;;;;-1:-1:-1;272:7119:3"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4962,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":5348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_ContestStatus":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":4984,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5182,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5061,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5148,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20004":{"entryPoint":5119,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":5481,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":5576,"id":226,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":5525,"id":null,"parameterSlots":1,"returnSlots":1},"storage_array_index_access_uint256_dyn":{"entryPoint":5435,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_enum_ContestStatus_to_enum_ContestStatus":{"entryPoint":5552,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_ContestStatus":{"entryPoint":5540,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816322dcd13e1461134757508063476343ee146112c25780636d436fa31461120e578063715018a6146111b557806373d53dd21461119757806374828bbb146110b1578063772744b514610fae5780638da5cb5b14610f85578063904b9f7214610da05780639d7ed73814610cb6578063a490a21b1461065d578063aa0b5988146105c1578063af1087e91461041c578063bf5e253f146102f4578063c415b95c146102cb578063cda6d0021461029d578063d2c35ce81461021e578063e6bf74c9146101c6578063f2fde38b1461013d5763f3b9e61c14610106573861000f565b34610138576020366003190112610138576004356000526003602052600b6040600020016101348154611595565b9055005b600080fd5b3461013857602036600319011261013857610156611362565b61015e611569565b6001600160a01b039081169081156101ad57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610138576040366003190112610138576101df611362565b6001600160a01b0316600090815260046020526040902080546024359190821015610138576020916102109161153b565b90546040519160031b1c8152f35b3461013857602036600319011261013857610237611362565b61023f611569565b6001600160a01b03168015610266576001600160601b0360a01b6006541617600655600080f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610138576020366003190112610138576004356000526003602052600a6040600020016101348154611595565b34610138576000366003190112610138576006546040516001600160a01b039091168152602090f35b34610138576020366003190112610138576004356000526003602052604060002060405190610322826113ff565b8054825260018101546001600160a01b0390811660208401526103476002830161143e565b60408401526103586003830161143e565b60608401526004820154608084015260058201541660a083015260068101549060c0830191825260078101549260e081019384526008820154610100820152610160600b60ff600985015416936103b4610120850195866115a4565b600a8101546101408501520154910152519160058310156104065760016020931491826103fa575b50816103ee575b506040519015158152f35b905051421115826103e3565b514210159150836103dc565b634e487b7160e01b600052602160045260246000fd5b602080600319360112610138576004356104346115c8565b341561058b576000818152600383526040902060058101546001600160a01b03166105465760ff60098201541660058110156104065760038114610511576004146104d8576004018054903482018092116104c257819055604051923484528301527f8fb82f92fbac15f0a9edc91d47d33edcfce30f6805c6a005f56e95e4f9fd9bb460403393a360018055005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260048101849052601160248201527010dbdb9d195cdd0818d85b98d95b1b1959607a1b6044820152606490fd5b60405162461bcd60e51b815260048101859052600d60248201526c10dbdb9d195cdd08195b991959609a1b6044820152606490fd5b60405162461bcd60e51b815260048101849052601c60248201527f436f6e74657374207573657320746f6b656e2c206e6f742043454c4f000000006044820152606490fd5b60405162461bcd60e51b815260048101839052600e60248201526d4d7573742073656e642043454c4f60901b6044820152606490fd5b34610138576020366003190112610138576004356105dd611569565b6103e8811161061f5760407fd347e206f25a89b917fc9482f1a2d294d749baa4dc9bde7fb495ee11fe49164391600554908060055582519182526020820152a1005b60405162461bcd60e51b815260206004820152601660248201527546656520746f6f206869676820286d6178203130252960501b6044820152606490fd5b60e03660031901126101385760043567ffffffffffffffff8111610138576106899036906004016114e4565b60243567ffffffffffffffff8111610138576106a99036906004016114e4565b6064803591906001600160a01b0383168303610138576106c76115c8565b426084351115610c745760843560a4351115610c325760a43560c4351115610be25760443515610b94576001600160a01b03831615610b48575b506002549161070f83611595565b6002556040519161071f836113ff565b8383523360208401528460408401526060830152604435608083015260018060a01b031660a082015260843560c082015260a43560e082015260c435610100820152600061012082015260006101408201526000610160820152816000526003602052604060002090805182556001820160018060a01b036020830151166001600160601b0360a01b825416179055604081015180519067ffffffffffffffff82116109925781906107d460028601546113c5565b601f8111610af5575b50602090601f8311600114610a8357600092610a78575b50508160011b916000199060031b1c19161760028301555b606081015180519067ffffffffffffffff821161099257819061083260038601546113c5565b601f8111610a25575b50602090601f83116001146109b3576000926109a8575b50508160011b916000199060031b1c19161760038301555b608081015160048301556005820160018060a01b0360a0830151166001600160601b0360a01b82541617905560c0810151600683015560e081015160078301556101008101516008830155610120810151600581101561040657600b916108d761016092600986016115b0565b610140810151600a850155015191015533600052600460205260406000209182549268010000000000000000841015610992578361091c91600160209601815561153b565b81549060031b9084821b91600019901b1916179055817f4aaaf0ce6b66893efbe13b0c3adb4a8b2077c1e3e57b0432fdeffda2eca9df0661096860405193608085526080850190611378565b9260443586820152608435604082015260a43560608201528033940390a360018055604051908152f35b634e487b7160e01b600052604160045260246000fd5b015190508680610852565b9250600385016000526020600020906000935b601f1984168510610a0a576001945083601f198116106109f1575b505050811b01600383015561086a565b015160001960f88460031b161c191690558680806109e1565b818101518355602094850194600190930192909101906109c6565b909150600385016000526020600020601f840160051c810160208510610a71575b90849392915b601f830160051c82018110610a6257505061083b565b60008155859450600101610a4c565b5080610a46565b0151905086806107f4565b9250600285016000526020600020906000935b601f1984168510610ada576001945083601f19811610610ac1575b505050811b01600283015561080c565b015160001960f88460031b161c19169055868080610ab1565b81810151835560209485019460019093019290910190610a96565b909150600285016000526020600020601f840160051c810160208510610b41575b90849392915b601f830160051c82018110610b325750506107dd565b60008155859450600101610b1c565b5080610b16565b6044353410156107015760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e742043454c4f20666f72207072697a6520706f6f6c6044820152fd5b608490600360fc1b6040519162461bcd60e51b835260206004840152602160248401527f5072697a6520706f6f6c206d7573742062652067726561746572207468616e206044840152820152fd5b6084906308195b9960e21b6040519162461bcd60e51b8352602060048401526024808401527f566f74696e6720656e64206d75737420626520616674657220636f6e746573746044840152820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f456e642074696d65206d757374206265206166746572207374617274000000006044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f53746172742074696d65206d75737420626520696e20667574757265000000006044820152fd5b34610138576020366003190112610138576004356000908152600360205260409020805460018201546001600160a01b0390811692610cf76002820161143e565b90610d046003820161143e565b6004820154936005830154166006830154600784015490600885015492600986015460ff1694600a87015496600b0154976040519b8c9b8c5260208c01526101808060408d01528b01610d5691611378565b8a810360608c0152610d6791611378565b9760808a015260a089015260c088015260e08701526101008601526101208501610d90916113b8565b6101408401526101608301520390f35b34610138576020366003190112610138576000610160604051610dc2816113ff565b828152826020820152606060408201526060808201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152015260043560005260036020526040600020600b60405191610e26836113ff565b8054835260018101546001600160a01b03166020840152610e496002820161143e565b6040840152610e5a6003820161143e565b60608401526004810154608084015260058101546001600160a01b031660a0840152600681015460c0840152600781015460e084015260088101546101008401526009810154610eb19060ff1661012085016115a4565b600a81015461014084015201546101608201526040518091602082528051602083015260018060a01b036020820151166040830152610160610f1d610f07604084015161018060608701526101a0860190611378565b6060840151858203601f19016080870152611378565b91608081015160a085015260018060a01b0360a08201511660c085015260c081015160e085015260e0810151610100850152610100810151610120850152610f6f6101208201516101408601906113b8565b6101408101518285015201516101808301520390f35b34610138576000366003190112610138576000546040516001600160a01b039091168152602090f35b34610138576020366003190112610138576004356000526003602052604060002060405190610fdc826113ff565b8054825260018101546001600160a01b0390811660208401526110016002830161143e565b60408401526110126003830161143e565b60608401526004820154608084015260058201541660a0830152600681015460c083015260078101549060e083019182526008810154926101008101938452610160600b60ff6009850154169361106e610120850195866115a4565b600a8101546101408501520154910152519160058310156104065760026020931491826110a65750816103ee57506040519015158152f35b5142119150836103dc565b346101385760403660031901126101385760043560243560058110156101385760008281526003602052604090206001810154336001600160a01b0391821614908115611189575b5015611153577f2049bae7871bc32e098ec2b73ebfa495ed2496dc8a5dc7bf9d4714eb4e09d2bb916111506009604093019161113a8160ff855416946115b0565b611146845180946113b8565b60208301906113b8565ba2005b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b9050600054163314846110f9565b34610138576000366003190112610138576020600254604051908152f35b34610138576000366003190112610138576111ce611569565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461013857602080600319360112610138576001600160a01b03611230611362565b1660005260048152604060002060405190818382549182815201908192600052846000209060005b868282106112ae57868661126e8288038361141c565b604051928392818401908285525180915260408401929160005b82811061129757505050500390f35b835185528695509381019392810192600101611288565b835485529093019260019283019201611258565b34610138576000366003190112610138576112db611569565b47801561130c576006546000918291829182916001600160a01b031682f11561130057005b6040513d6000823e3d90fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f206665657320746f20776974686472617760681b6044820152606490fd5b34610138576000366003190112610138576020906005548152f35b600435906001600160a01b038216820361013857565b919082519283825260005b8481106113a4575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611383565b9060058210156104065752565b90600182811c921680156113f5575b60208310146113df57565b634e487b7160e01b600052602260045260246000fd5b91607f16916113d4565b610180810190811067ffffffffffffffff82111761099257604052565b90601f8019910116810190811067ffffffffffffffff82111761099257604052565b9060405191826000825492611452846113c5565b9081845260019485811690816000146114c1575060011461147e575b505061147c9250038361141c565b565b9093915060005260209081600020936000915b8183106114a957505061147c9350820101388061146e565b85548884018501529485019487945091830191611491565b91505061147c94506020925060ff191682840152151560051b820101388061146e565b81601f820112156101385780359067ffffffffffffffff82116109925760405192611519601f8401601f19166020018561141c565b8284526020838301011161013857816000926020809301838601378301015290565b80548210156115535760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b0316330361157d57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146104c25760010190565b60058210156104065752565b9060058110156104065760ff80198354169116179055565b6002600154146115d9576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220f2c30d4bfee6638c4a3b1093b5c6ea15e38a3e564ebb482ceae413fc5436bb4b64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x22DCD13E EQ PUSH2 0x1347 JUMPI POP DUP1 PUSH4 0x476343EE EQ PUSH2 0x12C2 JUMPI DUP1 PUSH4 0x6D436FA3 EQ PUSH2 0x120E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11B5 JUMPI DUP1 PUSH4 0x73D53DD2 EQ PUSH2 0x1197 JUMPI DUP1 PUSH4 0x74828BBB EQ PUSH2 0x10B1 JUMPI DUP1 PUSH4 0x772744B5 EQ PUSH2 0xFAE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF85 JUMPI DUP1 PUSH4 0x904B9F72 EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x9D7ED738 EQ PUSH2 0xCB6 JUMPI DUP1 PUSH4 0xA490A21B EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xAA0B5988 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xAF1087E9 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xBF5E253F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xCDA6D002 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xE6BF74C9 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13D JUMPI PUSH4 0xF3B9E61C EQ PUSH2 0x106 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xB PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x134 DUP2 SLOAD PUSH2 0x1595 JUMP JUMPDEST SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1DF PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x210 SWAP2 PUSH2 0x153B JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x237 PUSH2 0x1362 JUMP JUMPDEST PUSH2 0x23F PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xA PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x134 DUP2 SLOAD PUSH2 0x1595 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x322 DUP3 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x347 PUSH1 0x2 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x358 PUSH1 0x3 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD SWAP1 PUSH1 0xC0 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x7 DUP2 ADD SLOAD SWAP3 PUSH1 0xE0 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x160 PUSH1 0xB PUSH1 0xFF PUSH1 0x9 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x3B4 PUSH2 0x120 DUP6 ADD SWAP6 DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x1 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 PUSH2 0x3FA JUMPI JUMPDEST POP DUP2 PUSH2 0x3EE JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP MLOAD TIMESTAMP GT ISZERO DUP3 PUSH2 0x3E3 JUMP JUMPDEST MLOAD TIMESTAMP LT ISZERO SWAP2 POP DUP4 PUSH2 0x3DC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x434 PUSH2 0x15C8 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x546 JUMPI PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x3 DUP2 EQ PUSH2 0x511 JUMPI PUSH1 0x4 EQ PUSH2 0x4D8 JUMPI PUSH1 0x4 ADD DUP1 SLOAD SWAP1 CALLVALUE DUP3 ADD DUP1 SWAP3 GT PUSH2 0x4C2 JUMPI DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLVALUE DUP5 MSTORE DUP4 ADD MSTORE PUSH32 0x8FB82F92FBAC15F0A9EDC91D47D33EDCFCE30F6805C6A005F56E95E4F9FD9BB4 PUSH1 0x40 CALLER SWAP4 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x10DBDB9D195CDD0818D85B98D95B1B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DBDB9D195CDD08195B991959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74657374207573657320746F6B656E2C206E6F742043454C4F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x4D7573742073656E642043454C4F PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x5DD PUSH2 0x1569 JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT PUSH2 0x61F JUMPI PUSH1 0x40 PUSH32 0xD347E206F25A89B917FC9482F1A2D294D749BAA4DC9BDE7FB495EE11FE491643 SWAP2 PUSH1 0x5 SLOAD SWAP1 DUP1 PUSH1 0x5 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46656520746F6F206869676820286D61782031302529 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x138 JUMPI PUSH2 0x689 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x138 JUMPI PUSH2 0x6A9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x64 DUP1 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0x138 JUMPI PUSH2 0x6C7 PUSH2 0x15C8 JUMP JUMPDEST TIMESTAMP PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0xC74 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 CALLDATALOAD GT ISZERO PUSH2 0xC32 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0xC4 CALLDATALOAD GT ISZERO PUSH2 0xBE2 JUMPI PUSH1 0x44 CALLDATALOAD ISZERO PUSH2 0xB94 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xB48 JUMPI JUMPDEST POP PUSH1 0x2 SLOAD SWAP2 PUSH2 0x70F DUP4 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH2 0x71F DUP4 PUSH2 0x13FF JUMP JUMPDEST DUP4 DUP4 MSTORE CALLER PUSH1 0x20 DUP5 ADD MSTORE DUP5 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x160 DUP3 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI DUP2 SWAP1 PUSH2 0x7D4 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xAF5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xA83 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xA78 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI DUP2 SWAP1 PUSH2 0x832 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xA25 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x9B3 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x9A8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0xB SWAP2 PUSH2 0x8D7 PUSH2 0x160 SWAP3 PUSH1 0x9 DUP7 ADD PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD PUSH1 0xA DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x992 JUMPI DUP4 PUSH2 0x91C SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0x153B JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH32 0x4AAAF0CE6B66893EFBE13B0C3ADB4A8B2077C1E3E57B0432FDEFFDA2ECA9DF06 PUSH2 0x968 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x1378 JUMP JUMPDEST SWAP3 PUSH1 0x44 CALLDATALOAD DUP7 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x852 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xA0A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x9F1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x86A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x9E1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xA71 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xA62 JUMPI POP POP PUSH2 0x83B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xA4C JUMP JUMPDEST POP DUP1 PUSH2 0xA46 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x7F4 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xADA JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xAC1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x80C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xAB1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xA96 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xB41 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xB32 JUMPI POP POP PUSH2 0x7DD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xB1C JUMP JUMPDEST POP DUP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD CALLVALUE LT ISZERO PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742043454C4F20666F72207072697A6520706F6F6C PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP5 ADD MSTORE PUSH32 0x5072697A6520706F6F6C206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 SWAP1 PUSH4 0x8195B99 PUSH1 0xE2 SHL PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP1 DUP5 ADD MSTORE PUSH32 0x566F74696E6720656E64206D75737420626520616674657220636F6E74657374 PUSH1 0x44 DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520616674657220737461727400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D75737420626520696E2066757475726500000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH2 0xCF7 PUSH1 0x2 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST SWAP1 PUSH2 0xD04 PUSH1 0x3 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0x6 DUP4 ADD SLOAD PUSH1 0x7 DUP5 ADD SLOAD SWAP1 PUSH1 0x8 DUP6 ADD SLOAD SWAP3 PUSH1 0x9 DUP7 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0xA DUP8 ADD SLOAD SWAP7 PUSH1 0xB ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x180 DUP1 PUSH1 0x40 DUP14 ADD MSTORE DUP12 ADD PUSH2 0xD56 SWAP2 PUSH2 0x1378 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0xD67 SWAP2 PUSH2 0x1378 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD PUSH2 0xD90 SWAP2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH2 0x160 PUSH1 0x40 MLOAD PUSH2 0xDC2 DUP2 PUSH2 0x13FF JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE DUP3 PUSH2 0x140 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xB PUSH1 0x40 MLOAD SWAP2 PUSH2 0xE26 DUP4 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE49 PUSH1 0x2 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xE5A PUSH1 0x3 DUP3 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH2 0xEB1 SWAP1 PUSH1 0xFF AND PUSH2 0x120 DUP6 ADD PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x160 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x160 PUSH2 0xF1D PUSH2 0xF07 PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x180 PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x1378 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0xF6F PUSH2 0x120 DUP3 ADD MLOAD PUSH2 0x140 DUP7 ADD SWAP1 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP3 DUP6 ADD MSTORE ADD MLOAD PUSH2 0x180 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xFDC DUP3 PUSH2 0x13FF JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1001 PUSH1 0x2 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1012 PUSH1 0x3 DUP4 ADD PUSH2 0x143E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD SWAP1 PUSH1 0xE0 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x8 DUP2 ADD SLOAD SWAP3 PUSH2 0x100 DUP2 ADD SWAP4 DUP5 MSTORE PUSH2 0x160 PUSH1 0xB PUSH1 0xFF PUSH1 0x9 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x106E PUSH2 0x120 DUP6 ADD SWAP6 DUP7 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD PUSH2 0x140 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE MLOAD SWAP2 PUSH1 0x5 DUP4 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x2 PUSH1 0x20 SWAP4 EQ SWAP2 DUP3 PUSH2 0x10A6 JUMPI POP DUP2 PUSH2 0x3EE JUMPI POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST MLOAD TIMESTAMP GT SWAP2 POP DUP4 PUSH2 0x3DC JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x1189 JUMPI JUMPDEST POP ISZERO PUSH2 0x1153 JUMPI PUSH32 0x2049BAE7871BC32E098EC2B73EBFA495ED2496DC8A5DC7BF9D4714EB4E09D2BB SWAP2 PUSH2 0x1150 PUSH1 0x9 PUSH1 0x40 SWAP4 ADD SWAP2 PUSH2 0x113A DUP2 PUSH1 0xFF DUP6 SLOAD AND SWAP5 PUSH2 0x15B0 JUMP JUMPDEST PUSH2 0x1146 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x13B8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x13B8 JUMP JUMPDEST LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 SLOAD AND CALLER EQ DUP5 PUSH2 0x10F9 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x11CE PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1230 PUSH2 0x1362 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x12AE JUMPI DUP7 DUP7 PUSH2 0x126E DUP3 DUP9 SUB DUP4 PUSH2 0x141C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1297 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1288 JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1258 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x12DB PUSH2 0x1569 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x130C JUMPI PUSH1 0x6 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 CALL ISZERO PUSH2 0x1300 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F206665657320746F207769746864726177 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x13A4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1383 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x406 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x13F5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x13DF JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH2 0x180 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x992 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x992 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1452 DUP5 PUSH2 0x13C5 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x14C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x147E JUMPI JUMPDEST POP POP PUSH2 0x147C SWAP3 POP SUB DUP4 PUSH2 0x141C JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x14A9 JUMPI POP POP PUSH2 0x147C SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x146E JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1491 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147C SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x146E JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x138 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1519 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x141C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x138 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1553 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x157D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x406 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x15D9 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xC3 0xD 0x4B INVALID 0xE6 PUSH4 0x8C4A3B10 SWAP4 0xB5 0xC6 0xEA ISZERO 0xE3 DUP11 RETURNDATACOPY JUMP 0x4E 0xBB BASEFEE 0x2C 0xEA 0xE4 SGT 0xFC SLOAD CALLDATASIZE 0xBB 0x4B PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"272:7119:3:-:0;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;5167:31;272:7119;;;5167:31;:33;272:7119;;5167:33;:::i;:::-;272:7119;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;272:7119:3;;;;2627:22:0;;2623:91;;272:7119:3;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;3052:40:0;272:7119:3;3052:40:0;;272:7119:3;2623:91:0;272:7119:3;;-1:-1:-1;;;2672:31:0;;272:7119:3;;2672:31:0;;272:7119:3;;;2672:31:0;272:7119:3;;;;;;-1:-1:-1;;272:7119:3;;;;;;:::i;:::-;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;;;;;;997:52;;;;;272:7119;997:52;;;;:::i;:::-;272:7119;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;272:7119:3;6983:27;;272:7119;;-1:-1:-1;;;;;272:7119:3;;7040:28;272:7119;;;7040:28;272:7119;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;4908:36;272:7119;;;4908:36;:38;272:7119;;4908:38;:::i;272:7119::-;;;;;;-1:-1:-1;;272:7119:3;;;;1157:27;272:7119;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5969:38;;:93;;;;272:7119;5969:146;;;;272:7119;;;;;;;;;;5969:146;272:7119;;;6081:15;:34;;5969:146;;;:93;272:7119;6026:15;:36;;;-1:-1:-1;5969:93:3;;;272:7119;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;:::i;:::-;4205:9:3;:13;272:7119;;;;;;;;;;;;4311:18;;;272:7119;-1:-1:-1;;;;;272:7119:3;;;;4394:14;;;272:7119;;4311:18;272:7119;;;;;;4394:37;;272:7119;;;4467:41;272:7119;;;4549:17;272:7119;;4205:9;;272:7119;;;;;;;;;;;;4205:9;;272:7119;;;;;4603:72;272:7119;4634:10;4603:72;;272:7119;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;1500:62:0;;:::i;:::-;6654:4:3;6640:18;;272:7119;;;6778:38;272:7119;6712:14;272:7119;;;6712:14;272:7119;;;;;;;;;;6778:38;272:7119;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;2466:103:2;;:::i;:::-;2265:15:3;272:7119;;2252:28;272:7119;;;;;;;2331:21;272:7119;;;;;;;2403:25;272:7119;;;;;2487:14;272:7119;;-1:-1:-1;;;;;272:7119:3;;2624:25;2620:124;;272:7119;;2782:19;272:7119;2782:19;;;;:::i;:::-;;272:7119;;;;;;;:::i;:::-;;;;2900:10;272:7119;2842:426;;272:7119;2842:426;272:7119;2842:426;;272:7119;;2842:426;;272:7119;;;;2842:426;;272:7119;;;;;;;;2842:426;;272:7119;;;;2842:426;;272:7119;;;;2842:426;;272:7119;;;2842:426;;;272:7119;;2842:426;;;272:7119;;2842:426;;;272:7119;;2842:426;;;272:7119;;;;;;;;;;;;;;;;;;;;;;;;2842:426;;272:7119;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;2842:426;;272:7119;;;;;;;;;;;;2782:19;272:7119;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2782:19;272:7119;;;;;2842:426;;272:7119;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2842:426;;272:7119;;;;;;;;;;;;;;2842:426;;272:7119;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;2842:426;;272:7119;;;;;;2842:426;;272:7119;;;;;2842:426;;;272:7119;;;;;2842:426;;;272:7119;;;;;;;;;;2842:426;272:7119;;;;;:::i;:::-;2842:426;;;272:7119;;;;;2842:426;272:7119;;;;2900:10;272:7119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3354:161;272:7119;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2900:10;;3354:161;;;;272:7119;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;-1:-1:-1;272:7119:3;;;;;;;-1:-1:-1;272:7119:3;;;;;;;2782:19;272:7119;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;2782:19;272:7119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2782:19;272:7119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;-1:-1:-1;272:7119:3;;;2620:124;272:7119;;2673:9;:23;272:7119;2620:124;272:7119;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;948:43;;272:7119;-1:-1:-1;;;;;272:7119:3;;;;948:43;;;;;:::i;:::-;;;272:7119;948:43;;;:::i;:::-;272:7119;948:43;;272:7119;948:43;;;;272:7119;;948:43;;;272:7119;948:43;;;272:7119;948:43;;;;272:7119;948:43;;;;272:7119;;;948:43;;;;272:7119;948:43;;;272:7119;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6329:38;;:90;;;;:149;;;;272:7119;;;;;;;;;6329:90;272:7119;6386:15;:33;;-1:-1:-1;6329:90:3;;;272:7119;;;;;;-1:-1:-1;;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;3797:15;;272:7119;3816:10;-1:-1:-1;;;;;272:7119:3;;;3797:29;;:54;;;;272:7119;;;;;3990:55;3915:14;272:7119;3915:14;272:7119;3915:14;;272:7119;3939:27;272:7119;;;;;3939:27;;:::i;:::-;272:7119;;;;;;:::i;:::-;;;;;;:::i;:::-;3990:55;272:7119;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;3797:54;272:7119;;;;;3816:10;3830:21;3797:54;;;272:7119;;;;;;-1:-1:-1;;272:7119:3;;;;;5736:17;272:7119;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;1500:62:0;;:::i;:::-;272:7119:3;;;-1:-1:-1;;;;;;272:7119:3;;;;-1:-1:-1;;;;;272:7119:3;3052:40:0;272:7119:3;;3052:40:0;272:7119:3;;;;;;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;1500:62:0;;:::i;:::-;7220:21:3;7259:11;;272:7119;;7312:12;272:7119;;;;;;;;;-1:-1:-1;;;;;272:7119:3;;7304:39;;;;272:7119;7304:39;272:7119;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;-1:-1:-1;;;272:7119:3;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;;1116:35;272:7119;;;;;;;;-1:-1:-1;;;;;272:7119:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;272:7119:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;272:7119:3;;;;-1:-1:-1;272:7119:3;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;272:7119:3;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;272:7119:3;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;272:7119:3;;-1:-1:-1;272:7119:3;;;-1:-1:-1;272:7119:3;:::o;:::-;;;;;;;;;;;;1796:162:0;1710:6;272:7119:3;-1:-1:-1;;;;;272:7119:3;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;272:7119:3;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;272:7119:3;;;1901:40:0;272:7119:3;-1:-1:-1;;272:7119:3;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;2575:307:2:-;1899:1;2702:7;272:7119:3;2702:18:2;2698:86;;1899:1;2702:7;272:7119:3;2575:307:2:o;2698:86::-;272:7119:3;;-1:-1:-1;;;2743:30:2;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1133000","executionCost":"infinite","totalCost":"infinite"},"external":{"contests(uint256)":"infinite","createContest(string,string,uint256,address,uint256,uint256,uint256)":"infinite","creatorContests(address,uint256)":"7153","feeCollector()":"2590","getContest(uint256)":"infinite","getCreatorContests(address)":"infinite","getTotalContests()":"2346","increasePrizePool(uint256)":"77461","incrementSubmissionCount(uint256)":"24800","incrementVoteCount(uint256)":"24885","isContestActive(uint256)":"infinite","isVotingActive(uint256)":"infinite","owner()":"2436","platformFeeBps()":"2250","renounceOwnership()":"28120","transferOwnership(address)":"28560","updateContestStatus(uint256,uint8)":"infinite","updateFeeCollector(address)":"26995","updatePlatformFee(uint256)":"28083","withdrawFees()":"infinite"}},"methodIdentifiers":{"contests(uint256)":"9d7ed738","createContest(string,string,uint256,address,uint256,uint256,uint256)":"a490a21b","creatorContests(address,uint256)":"e6bf74c9","feeCollector()":"c415b95c","getContest(uint256)":"904b9f72","getCreatorContests(address)":"6d436fa3","getTotalContests()":"73d53dd2","increasePrizePool(uint256)":"af1087e9","incrementSubmissionCount(uint256)":"cda6d002","incrementVoteCount(uint256)":"f3b9e61c","isContestActive(uint256)":"bf5e253f","isVotingActive(uint256)":"772744b5","owner()":"8da5cb5b","platformFeeBps()":"22dcd13e","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateContestStatus(uint256,uint8)":"74828bbb","updateFeeCollector(address)":"d2c35ce8","updatePlatformFee(uint256)":"aa0b5988","withdrawFees()":"476343ee"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"ContestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ContestFactory.ContestStatus\",\"name\":\"oldStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum ContestFactory.ContestStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"ContestStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotal\",\"type\":\"uint256\"}],\"name\":\"PrizePoolIncreased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prizeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"enum ContestFactory.ContestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_prizePool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_prizeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votingEndTime\",\"type\":\"uint256\"}],\"name\":\"createContest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"creatorContests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"getContest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"prizeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEndTime\",\"type\":\"uint256\"},{\"internalType\":\"enum ContestFactory.ContestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct ContestFactory.Contest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorContests\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalContests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"increasePrizePool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"incrementSubmissionCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"incrementVoteCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"isContestActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"isVotingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"enum ContestFactory.ContestStatus\",\"name\":\"_newStatus\",\"type\":\"uint8\"}],\"name\":\"updateContestStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeeBps\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Creates and manages Halloween contest competitions on Celo\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"createContest(string,string,uint256,address,uint256,uint256,uint256)\":{\"details\":\"Create a new contest\"},\"getContest(uint256)\":{\"details\":\"Get contest details\"},\"getCreatorContests(address)\":{\"details\":\"Get contests created by an address\"},\"getTotalContests()\":{\"details\":\"Get total contest count\"},\"increasePrizePool(uint256)\":{\"details\":\"Increase prize pool\"},\"incrementSubmissionCount(uint256)\":{\"details\":\"Update submission count (called by VotingContract)\"},\"incrementVoteCount(uint256)\":{\"details\":\"Update vote count (called by VotingContract)\"},\"isContestActive(uint256)\":{\"details\":\"Check if contest is active\"},\"isVotingActive(uint256)\":{\"details\":\"Check if voting is active\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateContestStatus(uint256,uint8)\":{\"details\":\"Update contest status\"},\"updateFeeCollector(address)\":{\"details\":\"Update fee collector (owner only)\"},\"updatePlatformFee(uint256)\":{\"details\":\"Update platform fee (owner only)\"},\"withdrawFees()\":{\"details\":\"Withdraw platform fees (owner only)\"}},\"title\":\"ContestFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ContestFactory.sol\":\"ContestFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/ContestFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title ContestFactory\\n * @dev Creates and manages Halloween contest competitions on Celo\\n */\\ncontract ContestFactory is Ownable, ReentrancyGuard {\\n    \\n    struct Contest {\\n        uint256 id;\\n        address creator;\\n        string title;\\n        string metadataURI;      // IPFS hash for full contest details\\n        uint256 prizePool;\\n        address prizeToken;      // cUSD, CELO, or custom token\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 votingEndTime;\\n        ContestStatus status;\\n        uint256 submissionCount;\\n        uint256 totalVotes;\\n    }\\n    \\n    enum ContestStatus {\\n        Draft,\\n        Active,\\n        Voting,\\n        Ended,\\n        Cancelled\\n    }\\n    \\n    // State variables\\n    uint256 private _contestIdCounter;\\n    mapping(uint256 => Contest) public contests;\\n    mapping(address => uint256[]) public creatorContests;\\n    \\n    // Platform fee (in basis points, e.g., 250 = 2.5%)\\n    uint256 public platformFeeBps = 250;\\n    address public feeCollector;\\n    \\n    // Events\\n    event ContestCreated(\\n        uint256 indexed contestId,\\n        address indexed creator,\\n        string title,\\n        uint256 prizePool,\\n        uint256 startTime,\\n        uint256 endTime\\n    );\\n    \\n    event ContestStatusChanged(\\n        uint256 indexed contestId,\\n        ContestStatus oldStatus,\\n        ContestStatus newStatus\\n    );\\n    \\n    event PrizePoolIncreased(\\n        uint256 indexed contestId,\\n        address indexed contributor,\\n        uint256 amount,\\n        uint256 newTotal\\n    );\\n    \\n    event PlatformFeeUpdated(uint256 oldFee, uint256 newFee);\\n    \\n    constructor(address _feeCollector) Ownable(msg.sender) {\\n        feeCollector = _feeCollector;\\n    }\\n    \\n    /**\\n     * @dev Create a new contest\\n     */\\n    function createContest(\\n        string memory _title,\\n        string memory _metadataURI,\\n        uint256 _prizePool,\\n        address _prizeToken,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint256 _votingEndTime\\n    ) external payable nonReentrant returns (uint256) {\\n        require(_startTime > block.timestamp, \\\"Start time must be in future\\\");\\n        require(_endTime > _startTime, \\\"End time must be after start\\\");\\n        require(_votingEndTime > _endTime, \\\"Voting end must be after contest end\\\");\\n        require(_prizePool > 0, \\\"Prize pool must be greater than 0\\\");\\n        \\n        // If prize token is address(0), it means native CELO\\n        if (_prizeToken == address(0)) {\\n            require(msg.value >= _prizePool, \\\"Insufficient CELO for prize pool\\\");\\n        }\\n        \\n        uint256 contestId = _contestIdCounter++;\\n        \\n        contests[contestId] = Contest({\\n            id: contestId,\\n            creator: msg.sender,\\n            title: _title,\\n            metadataURI: _metadataURI,\\n            prizePool: _prizePool,\\n            prizeToken: _prizeToken,\\n            startTime: _startTime,\\n            endTime: _endTime,\\n            votingEndTime: _votingEndTime,\\n            status: ContestStatus.Draft,\\n            submissionCount: 0,\\n            totalVotes: 0\\n        });\\n        \\n        creatorContests[msg.sender].push(contestId);\\n        \\n        emit ContestCreated(\\n            contestId,\\n            msg.sender,\\n            _title,\\n            _prizePool,\\n            _startTime,\\n            _endTime\\n        );\\n        \\n        return contestId;\\n    }\\n    \\n    /**\\n     * @dev Update contest status\\n     */\\n    function updateContestStatus(\\n        uint256 _contestId,\\n        ContestStatus _newStatus\\n    ) external {\\n        Contest storage contest = contests[_contestId];\\n        require(contest.creator == msg.sender || msg.sender == owner(), \\\"Not authorized\\\");\\n        \\n        ContestStatus oldStatus = contest.status;\\n        contest.status = _newStatus;\\n        \\n        emit ContestStatusChanged(_contestId, oldStatus, _newStatus);\\n    }\\n    \\n    /**\\n     * @dev Increase prize pool\\n     */\\n    function increasePrizePool(uint256 _contestId) external payable nonReentrant {\\n        require(msg.value > 0, \\\"Must send CELO\\\");\\n        Contest storage contest = contests[_contestId];\\n        require(contest.prizeToken == address(0), \\\"Contest uses token, not CELO\\\");\\n        require(contest.status != ContestStatus.Ended, \\\"Contest ended\\\");\\n        require(contest.status != ContestStatus.Cancelled, \\\"Contest cancelled\\\");\\n        \\n        contest.prizePool += msg.value;\\n        \\n        emit PrizePoolIncreased(_contestId, msg.sender, msg.value, contest.prizePool);\\n    }\\n    \\n    /**\\n     * @dev Update submission count (called by VotingContract)\\n     */\\n    function incrementSubmissionCount(uint256 _contestId) external {\\n        // In production, add access control for VotingContract\\n        contests[_contestId].submissionCount++;\\n    }\\n    \\n    /**\\n     * @dev Update vote count (called by VotingContract)\\n     */\\n    function incrementVoteCount(uint256 _contestId) external {\\n        // In production, add access control for VotingContract\\n        contests[_contestId].totalVotes++;\\n    }\\n    \\n    /**\\n     * @dev Get contest details\\n     */\\n    function getContest(uint256 _contestId) external view returns (Contest memory) {\\n        return contests[_contestId];\\n    }\\n    \\n    /**\\n     * @dev Get contests created by an address\\n     */\\n    function getCreatorContests(address _creator) external view returns (uint256[] memory) {\\n        return creatorContests[_creator];\\n    }\\n    \\n    /**\\n     * @dev Get total contest count\\n     */\\n    function getTotalContests() external view returns (uint256) {\\n        return _contestIdCounter;\\n    }\\n    \\n    /**\\n     * @dev Check if contest is active\\n     */\\n    function isContestActive(uint256 _contestId) public view returns (bool) {\\n        Contest memory contest = contests[_contestId];\\n        return contest.status == ContestStatus.Active &&\\n               block.timestamp >= contest.startTime &&\\n               block.timestamp <= contest.endTime;\\n    }\\n    \\n    /**\\n     * @dev Check if voting is active\\n     */\\n    function isVotingActive(uint256 _contestId) public view returns (bool) {\\n        Contest memory contest = contests[_contestId];\\n        return contest.status == ContestStatus.Voting &&\\n               block.timestamp > contest.endTime &&\\n               block.timestamp <= contest.votingEndTime;\\n    }\\n    \\n    /**\\n     * @dev Update platform fee (owner only)\\n     */\\n    function updatePlatformFee(uint256 _newFeeBps) external onlyOwner {\\n        require(_newFeeBps <= 1000, \\\"Fee too high (max 10%)\\\");\\n        uint256 oldFee = platformFeeBps;\\n        platformFeeBps = _newFeeBps;\\n        emit PlatformFeeUpdated(oldFee, _newFeeBps);\\n    }\\n    \\n    /**\\n     * @dev Update fee collector (owner only)\\n     */\\n    function updateFeeCollector(address _newCollector) external onlyOwner {\\n        require(_newCollector != address(0), \\\"Invalid address\\\");\\n        feeCollector = _newCollector;\\n    }\\n    \\n    /**\\n     * @dev Withdraw platform fees (owner only)\\n     */\\n    function withdrawFees() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No fees to withdraw\\\");\\n        payable(feeCollector).transfer(balance);\\n    }\\n    \\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x4c351cb60dc91700a9c42ab1b5027394bfd02092d5d4be763eca36cd3faf47da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":188,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":289,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"_contestIdCounter","offset":0,"slot":"2","type":"t_uint256"},{"astId":294,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"contests","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Contest)281_storage)"},{"astId":299,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"creatorContests","offset":0,"slot":"4","type":"t_mapping(t_address,t_array(t_uint256)dyn_storage)"},{"astId":302,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"platformFeeBps","offset":0,"slot":"5","type":"t_uint256"},{"astId":304,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"feeCollector","offset":0,"slot":"6","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_enum(ContestStatus)287":{"encoding":"inplace","label":"enum ContestFactory.ContestStatus","numberOfBytes":"1"},"t_mapping(t_address,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_struct(Contest)281_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ContestFactory.Contest)","numberOfBytes":"32","value":"t_struct(Contest)281_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Contest)281_storage":{"encoding":"inplace","label":"struct ContestFactory.Contest","members":[{"astId":257,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":259,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"creator","offset":0,"slot":"1","type":"t_address"},{"astId":261,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"title","offset":0,"slot":"2","type":"t_string_storage"},{"astId":263,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"metadataURI","offset":0,"slot":"3","type":"t_string_storage"},{"astId":265,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"prizePool","offset":0,"slot":"4","type":"t_uint256"},{"astId":267,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"prizeToken","offset":0,"slot":"5","type":"t_address"},{"astId":269,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"startTime","offset":0,"slot":"6","type":"t_uint256"},{"astId":271,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"endTime","offset":0,"slot":"7","type":"t_uint256"},{"astId":273,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"votingEndTime","offset":0,"slot":"8","type":"t_uint256"},{"astId":276,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"status","offset":0,"slot":"9","type":"t_enum(ContestStatus)287"},{"astId":278,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"submissionCount","offset":0,"slot":"10","type":"t_uint256"},{"astId":280,"contract":"contracts/ContestFactory.sol:ContestFactory","label":"totalVotes","offset":0,"slot":"11","type":"t_uint256"}],"numberOfBytes":"384"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleTest.sol":{"SimpleTest":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"number","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_number","type":"uint256"}],"name":"setNumber","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601957602a600055609d908161001f8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c80633fb5c1cb14604c57638381f58a14603257600080fd5b3460485781600319360112604857602091548152f35b5080fd5b82346064576020366003190112606457600435815580f35b80fdfea264697066735822122023228e25f63627d3684e387ebd8094c6a3f0696b86ad9161e2d036a14d0b42fd64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x19 JUMPI PUSH1 0x2A PUSH1 0x0 SSTORE PUSH1 0x9D SWAP1 DUP2 PUSH2 0x1F DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FB5C1CB EQ PUSH1 0x4C JUMPI PUSH4 0x8381F58A EQ PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x48 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x48 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH1 0x64 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x64 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x22 DUP15 0x25 0xF6 CALLDATASIZE 0x27 0xD3 PUSH9 0x4E387EBD8094C6A3F0 PUSH10 0x6B86AD9161E2D036A14D SIGNEXTEND TIMESTAMP REVERT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"58:188:4:-:0;;;;;;;149:2;140:11;58:188;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b600090813560e01c80633fb5c1cb14604c57638381f58a14603257600080fd5b3460485781600319360112604857602091548152f35b5080fd5b82346064576020366003190112606457600435815580f35b80fdfea264697066735822122023228e25f63627d3684e387ebd8094c6a3f0696b86ad9161e2d036a14d0b42fd64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FB5C1CB EQ PUSH1 0x4C JUMPI PUSH4 0x8381F58A EQ PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x48 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH1 0x48 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH1 0x64 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x64 JUMPI PUSH1 0x4 CALLDATALOAD DUP2 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 0x22 DUP15 0x25 0xF6 CALLDATASIZE 0x27 0xD3 PUSH9 0x4E387EBD8094C6A3F0 PUSH10 0x6B86AD9161E2D036A14D SIGNEXTEND TIMESTAMP REVERT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"58:188:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:188:4;;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"31400","executionCost":"22193","totalCost":"53593"},"external":{"number()":"2269","setNumber(uint256)":"22247"}},"methodIdentifiers":{"number()":"8381f58a","setNumber(uint256)":"3fb5c1cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"}],\"name\":\"setNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleTest.sol\":\"SimpleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleTest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\ncontract SimpleTest {\\n    uint256 public number;\\n    \\n    constructor() {\\n        number = 42;\\n    }\\n    \\n    function setNumber(uint256 _number) public {\\n        number = _number;\\n    }\\n}\\n\",\"keccak256\":\"0x25680b28d579de3c0f4f62f0ad319c9f7cf3eaf0833a0a715312ced021f8220e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":814,"contract":"contracts/SimpleTest.sol:SimpleTest","label":"number","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/VotingContract.sol":{"IContestFactory":{"abi":[{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"incrementSubmissionCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"incrementVoteCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"isVotingActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"incrementSubmissionCount(uint256)":"cda6d002","incrementVoteCount(uint256)":"f3b9e61c","isVotingActive(uint256)":"772744b5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"incrementSubmissionCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"incrementVoteCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"isVotingActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingContract.sol\":\"IContestFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/VotingContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ninterface IContestFactory {\\n    function isVotingActive(uint256 _contestId) external view returns (bool);\\n    function incrementVoteCount(uint256 _contestId) external;\\n    function incrementSubmissionCount(uint256 _contestId) external;\\n}\\n\\n/**\\n * @title VotingContract\\n * @dev Handles submissions and gasless voting for contests\\n */\\ncontract VotingContract is Ownable, ReentrancyGuard {\\n    \\n    struct Submission {\\n        uint256 id;\\n        uint256 contestId;\\n        address submitter;\\n        string metadataURI;      // IPFS hash for submission content\\n        uint256 voteCount;\\n        uint256 timestamp;\\n        bool exists;\\n    }\\n    \\n    // State variables\\n    IContestFactory public contestFactory;\\n    uint256 private _submissionIdCounter;\\n    \\n    // Mappings\\n    mapping(uint256 => Submission) public submissions;\\n    mapping(uint256 => uint256[]) public contestSubmissions; // contestId => submissionIds\\n    mapping(uint256 => mapping(address => uint256)) public userSubmission; // contestId => user => submissionId\\n    mapping(uint256 => mapping(address => bool)) public hasVoted; // submissionId => voter => bool\\n    mapping(uint256 => address[]) public submissionVoters; // submissionId => voters\\n    \\n    // Events\\n    event SubmissionCreated(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed submitter,\\n        string metadataURI\\n    );\\n    \\n    event VoteCast(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    event VoteRemoved(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    constructor(address _contestFactory) Ownable(msg.sender) {\\n        contestFactory = IContestFactory(_contestFactory);\\n    }\\n    \\n    /**\\n     * @dev Submit an entry to a contest\\n     */\\n    function submitEntry(\\n        uint256 _contestId,\\n        string memory _metadataURI\\n    ) external nonReentrant returns (uint256) {\\n        // Check if user already submitted to this contest\\n        require(userSubmission[_contestId][msg.sender] == 0, \\\"Already submitted to this contest\\\");\\n        \\n        uint256 submissionId = _submissionIdCounter++;\\n        \\n        submissions[submissionId] = Submission({\\n            id: submissionId,\\n            contestId: _contestId,\\n            submitter: msg.sender,\\n            metadataURI: _metadataURI,\\n            voteCount: 0,\\n            timestamp: block.timestamp,\\n            exists: true\\n        });\\n        \\n        contestSubmissions[_contestId].push(submissionId);\\n        userSubmission[_contestId][msg.sender] = submissionId;\\n        \\n        // Notify ContestFactory\\n        contestFactory.incrementSubmissionCount(_contestId);\\n        \\n        emit SubmissionCreated(submissionId, _contestId, msg.sender, _metadataURI);\\n        \\n        return submissionId;\\n    }\\n    \\n    /**\\n     * @dev Cast a vote for a submission (gasless via Biconomy)\\n     */\\n    function vote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        \\n        // Check voting is active\\n        require(contestFactory.isVotingActive(contestId), \\\"Voting not active\\\");\\n        \\n        // Check user hasn't voted for this submission\\n        require(!hasVoted[_submissionId][msg.sender], \\\"Already voted\\\");\\n        \\n        // Check user isn't voting for their own submission\\n        require(submission.submitter != msg.sender, \\\"Cannot vote for own submission\\\");\\n        \\n        // Cast vote\\n        hasVoted[_submissionId][msg.sender] = true;\\n        submission.voteCount++;\\n        submissionVoters[_submissionId].push(msg.sender);\\n        \\n        // Notify ContestFactory\\n        contestFactory.incrementVoteCount(contestId);\\n        \\n        emit VoteCast(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Remove a vote (allow users to change their vote)\\n     */\\n    function removeVote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        require(hasVoted[_submissionId][msg.sender], \\\"Haven't voted yet\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        require(contestFactory.isVotingActive(contestId), \\\"Voting not active\\\");\\n        \\n        // Remove vote\\n        hasVoted[_submissionId][msg.sender] = false;\\n        submission.voteCount--;\\n        \\n        // Remove from voters array (gas intensive, but keeps data clean)\\n        address[] storage voters = submissionVoters[_submissionId];\\n        for (uint256 i = 0; i < voters.length; i++) {\\n            if (voters[i] == msg.sender) {\\n                voters[i] = voters[voters.length - 1];\\n                voters.pop();\\n                break;\\n            }\\n        }\\n        \\n        emit VoteRemoved(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Get submission details\\n     */\\n    function getSubmission(uint256 _submissionId) external view returns (Submission memory) {\\n        return submissions[_submissionId];\\n    }\\n    \\n    /**\\n     * @dev Get all submissions for a contest\\n     */\\n    function getContestSubmissions(uint256 _contestId) external view returns (uint256[] memory) {\\n        return contestSubmissions[_contestId];\\n    }\\n    \\n    /**\\n     * @dev Get submission with vote details\\n     */\\n    function getSubmissionWithVotes(uint256 _submissionId) \\n        external \\n        view \\n        returns (\\n            Submission memory submission,\\n            address[] memory voters\\n        ) \\n    {\\n        return (submissions[_submissionId], submissionVoters[_submissionId]);\\n    }\\n    \\n    /**\\n     * @dev Get top submissions for a contest (sorted by votes)\\n     */\\n    function getTopSubmissions(uint256 _contestId, uint256 _limit) \\n        external \\n        view \\n        returns (Submission[] memory) \\n    {\\n        uint256[] memory submissionIds = contestSubmissions[_contestId];\\n        uint256 length = submissionIds.length;\\n        \\n        if (length == 0) {\\n            return new Submission[](0);\\n        }\\n        \\n        // Create array of submissions\\n        Submission[] memory allSubmissions = new Submission[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            allSubmissions[i] = submissions[submissionIds[i]];\\n        }\\n        \\n        // Simple bubble sort (works for small arrays)\\n        for (uint256 i = 0; i < length; i++) {\\n            for (uint256 j = i + 1; j < length; j++) {\\n                if (allSubmissions[j].voteCount > allSubmissions[i].voteCount) {\\n                    Submission memory temp = allSubmissions[i];\\n                    allSubmissions[i] = allSubmissions[j];\\n                    allSubmissions[j] = temp;\\n                }\\n            }\\n        }\\n        \\n        // Return top N submissions\\n        uint256 resultLength = _limit < length ? _limit : length;\\n        Submission[] memory topSubmissions = new Submission[](resultLength);\\n        for (uint256 i = 0; i < resultLength; i++) {\\n            topSubmissions[i] = allSubmissions[i];\\n        }\\n        \\n        return topSubmissions;\\n    }\\n    \\n    /**\\n     * @dev Check if user has voted for a submission\\n     */\\n    function hasUserVoted(uint256 _submissionId, address _user) external view returns (bool) {\\n        return hasVoted[_submissionId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get user's submission for a contest\\n     */\\n    function getUserSubmission(uint256 _contestId, address _user) external view returns (uint256) {\\n        return userSubmission[_contestId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get total submissions count\\n     */\\n    function getTotalSubmissions() external view returns (uint256) {\\n        return _submissionIdCounter;\\n    }\\n    \\n    /**\\n     * @dev Update ContestFactory address (owner only)\\n     */\\n    function updateContestFactory(address _newFactory) external onlyOwner {\\n        require(_newFactory != address(0), \\\"Invalid address\\\");\\n        contestFactory = IContestFactory(_newFactory);\\n    }\\n}\\n\",\"keccak256\":\"0x4f60381b4a5249d303e7d99242a805a77966147732ddaf2016a3f92b5179478c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"VotingContract":{"abi":[{"inputs":[{"internalType":"address","name":"_contestFactory","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"SubmissionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"VoteRemoved","type":"event"},{"inputs":[],"name":"contestFactory","outputs":[{"internalType":"contract IContestFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"contestSubmissions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"getContestSubmissions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"getSubmission","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct VotingContract.Submission","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"getSubmissionWithVotes","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct VotingContract.Submission","name":"submission","type":"tuple"},{"internalType":"address[]","name":"voters","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"uint256","name":"_limit","type":"uint256"}],"name":"getTopSubmissions","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct VotingContract.Submission[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSubmissions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserSubmission","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"hasUserVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"removeVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"submissionVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"submissions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"submitEntry","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newFactory","type":"address"}],"name":"updateContestFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userSubmission","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Handles submissions and gasless voting for contests","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"getContestSubmissions(uint256)":{"details":"Get all submissions for a contest"},"getSubmission(uint256)":{"details":"Get submission details"},"getSubmissionWithVotes(uint256)":{"details":"Get submission with vote details"},"getTopSubmissions(uint256,uint256)":{"details":"Get top submissions for a contest (sorted by votes)"},"getTotalSubmissions()":{"details":"Get total submissions count"},"getUserSubmission(uint256,address)":{"details":"Get user's submission for a contest"},"hasUserVoted(uint256,address)":{"details":"Check if user has voted for a submission"},"owner()":{"details":"Returns the address of the current owner."},"removeVote(uint256)":{"details":"Remove a vote (allow users to change their vote)"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"submitEntry(uint256,string)":{"details":"Submit an entry to a contest"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateContestFactory(address)":{"details":"Update ContestFactory address (owner only)"},"vote(uint256)":{"details":"Cast a vote for a submission (gasless via Biconomy)"}},"title":"VotingContract","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100ca57601f61172238819003918201601f19168301916001600160401b038311848410176100cf578084926020946040528339810103126100ca57516001600160a01b0390818116908190036100ca5733156100b15760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360018055600254161760025561163c90816100e68239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80630121b93f14610d565780631448c97014610cd85780633687f7bf146102f25780633e8686cc14610c8c5780633f68fde414610a0457806343859632146102a65780634c406c011461096457806354554d461461094657806356ce45b6146105395780636c811686146104ee578063715018a6146104945780638da5cb5b1461046d578063938de8c3146103f65780639c91cb9d146103cd578063ad73349e14610339578063d17bd67c146102f2578063dc296ae1146102a6578063e2555a73146101c6578063f2fde38b1461013b5763fadfa4dc146100f957600080fd5b3461013857610107366110d3565b9190815260056020526040812090815483101561013857602061012a84846110e9565b90546040519160031b1c8152f35b80fd5b503461013857602036600319011261013857610155610f9e565b61015d6111f7565b6001600160a01b039081169081156101ad57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b50346101385760209081600319360112610138576101e261130f565b5060043581526004825260408120600883526102016040832091611347565b916040519384908084549687815201958694845281842090845b81811061028957505050610234826102499703836110b1565b8060405196879660408852604088019061100f565b928684038288015251928381520193925b82811061026957505050500390f35b83516001600160a01b03168552869550938101939281019260010161025a565b82546001600160a01b03168952978301976001928301920161021b565b50346101385760403660031901126101385760406102c2610fb9565b9160043581526007602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461013857604036600319011261013857604061030e610fb9565b9160043581526006602052209060018060a01b03166000526020526020604060002054604051908152f35b503461013857602036600319011261013857600480358252602052604090208054600182015460028301549092906001600160a01b031661037c60038301611151565b916103b760048201549360ff60066005850154940154169360405197889788526020880152604087015260e0606087015260e0860190610fcf565b92608085015260a0840152151560c08301520390f35b50346101385780600319360112610138576002546040516001600160a01b039091168152602090f35b50346101385761040e610408366110d3565b90611427565b60405190602092838301848452825180915260408401948060408360051b870101940192955b8287106104415785850386f35b90919293828061045d600193603f198a8203018652885161100f565b9601920196019592919092610434565b5034610138578060031936011261013857546040516001600160a01b039091168152602090f35b50346101385780600319360112610138576104ad6111f7565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610138576104fd366110d3565b9190815260086020526040812090815483101561013857602061052084846110e9565b905460405160039290921b1c6001600160a01b03168152f35b50346101385760403660031901126101385760243567ffffffffffffffff81116107f557366023820112156107f55780600401359067ffffffffffffffff8211610932578290604051926105976020601f19601f84011601856110b1565b80845236602482840101116107e6578060246020930183860137830101526105bd611248565b6004358252600660205260408220336000526020526040600020546108e357600354906105e982611223565b6003556040516105f881611095565b82815260043560208201523360408201528160608201528360808201524260a0820152600160c082015282845260046020526040842081518155602082015160018201556002810160018060a01b036040840151166001600160601b0360a01b825416179055606082015180519067ffffffffffffffff82116108cf576106826003840154611117565b601f811161088a575b50602090601f831160011461081857918060c094926006948a9261080d575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015501910151151560ff801983541691161790556004358352600560205260408320805490600160401b8210156107f95790610715916001820181556110e9565b81549060031b9084821b91600019901b1916179055600435835260066020526040832033600052602052816040600020558260018060a01b0360025416803b156107f55781906024604051809481936366d3680160e11b835260043560048401525af180156107ea576107d2575b6020838360405190838252827f9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c3393806107c36004359589830190610fcf565b0390a460018055604051908152f35b6107dc849161106b565b6107e65782610783565b8280fd5b6040513d86823e3d90fd5b5080fd5b634e487b7160e01b85526041600452602485fd5b0151905038806106aa565b906003840188526020882091885b601f198516811061087257509260c0949260019260069583601f19811610610859575b505050811b0160038201556106c2565b015160001960f88460031b161c19169055388080610849565b91926020600181928685015181550194019201610826565b60038401885260208820601f840160051c8101602085106108c8575b601f830160051c820181106108bc57505061068b565b600081556001016108a6565b50806108a6565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152602160248201527f416c7265616479207375626d697474656420746f207468697320636f6e7465736044820152601d60fa1b6064820152608490fd5b634e487b7160e01b83526041600452602483fd5b50346101385780600319360112610138576020600354604051908152f35b5034610138576020806003193601126107f5576004358252600581526040822060405192838383549182815201908193835284832090835b8181106109f057505050846109b29103856110b1565b60405193838594850191818652518092526040850193925b8281106109d957505050500390f35b8351855286955093810193928101926001016109ca565b82548452928601926001928301920161099c565b5034610138576020908160031936011261013857600435610a23611248565b808252600483526040822090610a3f60ff60068401541661126b565b808352600784526040832033600052845260ff6040600020541615610c535760019184838201549160018060a01b039081600254166040519384809263772744b560e01b825287600483015260249687915afa908115610c485760049291610aae918a91610c1b575b506112cf565b8588526007895260408820336000528952604060002060ff19815416905501908154918215610c08578697986008916000198095019055868a525260408820918689905b610b25575b898833888a7fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e74401175868580a4805580f35b835480821015610c0257610b3982866110e9565b905460039291831b1c85163314610b5b575050610b5590611223565b87610af2565b90969798508281969394959601908111610bef5790610b8f85610b81610bae94896110e9565b9054908a1b1c1691876110e9565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8354908115610bdd57500192610bc484846110e9565b81939154921b1b19169055559082913880808080610af7565b634e487b7160e01b8a52603160045289fd5b634e487b7160e01b8b526011600452828bfd5b50610af7565b634e487b7160e01b885260116004528388fd5b610c3b91508b3d8d11610c41575b610c3381836110b1565b8101906112b7565b38610aa8565b503d610c29565b6040513d8a823e3d90fd5b60405162461bcd60e51b815260048101859052601160248201527012185d995b89dd081d9bdd1959081e595d607a1b6044820152606490fd5b503461013857602036600319011261013857610cc06040610cd492610caf61130f565b506004358152600460205220611347565b60405191829160208352602083019061100f565b0390f35b503461013857602036600319011261013857610cf2610f9e565b610cfa6111f7565b6001600160a01b03168015610d1f576001600160601b0360a01b600254161760025580f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b5034610138576020806003193601126107f55760043590610d75611248565b8183526004815260408320610d9060ff60068301541661126b565b60018101549160018060a01b039160248284600254166040519283809263772744b560e01b82528960048301525afa8015610f9357610dd5918891610f7c57506112cf565b8486526007825260408620338752825260ff604087205416610f4757338360028301541614610f02579060046008928688526007835260408820338952835260408820600160ff1982541617905501610e2e8154611223565b90558486525260408420805490600160401b821015610eee57610e5c82610e7a9260018996950181556110e9565b81546001600160a01b0360039290921b91821b19163390911b179055565b60025416803b156107f5578190602460405180948193633cee798760e21b83528760048401525af180156107ea57610edb575b5033917f7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc8480a46001805580f35b610ee79093919361106b565b9138610ead565b634e487b7160e01b86526041600452602486fd5b60405162461bcd60e51b815260048101839052601e60248201527f43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e00006044820152606490fd5b60405162461bcd60e51b815260048101839052600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b610c3b9150843d8611610c4157610c3381836110b1565b6040513d89823e3d90fd5b600435906001600160a01b0382168203610fb457565b600080fd5b602435906001600160a01b0382168203610fb457565b919082519283825260005b848110610ffb575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fda565b90815181526020820151602082015260018060a01b03604083015116604082015260c08061104c606085015160e0606086015260e0850190610fcf565b936080810151608085015260a081015160a08501520151151591015290565b67ffffffffffffffff811161107f57604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761107f57604052565b90601f8019910116810190811067ffffffffffffffff82111761107f57604052565b6040906003190112610fb4576004359060243590565b80548210156111015760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611147575b602083101461113157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611126565b906040519182600082549261116584611117565b9081845260019485811690816000146111d45750600114611191575b505061118f925003836110b1565b565b9093915060005260209081600020936000915b8183106111bc57505061118f93508201013880611181565b855488840185015294850194879450918301916111a4565b91505061118f94506020925060ff191682840152151560051b8201013880611181565b6000546001600160a01b0316330361120b57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146112325760010190565b634e487b7160e01b600052601160045260246000fd5b600260015414611259576002600155565b604051633ee5aeb560e01b8152600490fd5b1561127257565b60405162461bcd60e51b815260206004820152601960248201527f5375626d697373696f6e20646f6573206e6f74206578697374000000000000006044820152606490fd5b90816020910312610fb457518015158103610fb45790565b156112d657565b60405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606490fd5b6040519061131c82611095565b8160c06000918281528260208201528260408201526060808201528260808201528260a08201520152565b9060405161135481611095565b60c060ff60068395805485526001810154602086015260018060a01b03600282015416604086015261138860038201611151565b606086015260048101546080860152600581015460a08601520154161515910152565b67ffffffffffffffff811161107f5760051b60200190565b906113cd826113ab565b6113da60405191826110b1565b82815280926113eb601f19916113ab565b019060005b8281106113fc57505050565b60209061140761130f565b828285010152016113f0565b80518210156111015760209160051b010190565b9060009182526020906005825260408084208151808286829454938481520190885286882092885b888282106115f057505050611466925003826110b1565b80519182156115cc57611478836113c3565b94865b8481106115925750505050835b8181106114ea5750808210156114e25750905b6114a4826113c3565b925b8281106114b35750505090565b806114c16114dd9284611413565b516114cc8287611413565b526114d78186611413565b50611223565b6114a6565b90509061149b565b6001810180821161157e575b82811061150c575061150790611223565b611488565b6115389060808061151d8389611413565b5101519061152b8589611413565b5101511061153d57611223565b6114f6565b6115478387611413565b516115528288611413565b5161155d8589611413565b526115688488611413565b506115738288611413565b526114d78187611413565b634e487b7160e01b86526011600452602486fd5b806115a06115c79286611413565b518952600483526115b2848a20611347565b6115bc828a611413565b526114d78189611413565b61147b565b805195948601935091505067ffffffffffffffff8211848310176109325752815290565b855484526001958601958795509301920161144f56fea2646970667358221220c9cc13248657ac041b4a10b7afe0d53307937fac69419f7b851b25cef86f6d4264736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xCA JUMPI PUSH1 0x1F PUSH2 0x1722 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xCF JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xCA JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xCA JUMPI CALLER ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x163C SWAP1 DUP2 PUSH2 0xE6 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0xD56 JUMPI DUP1 PUSH4 0x1448C970 EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x3687F7BF EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3E8686CC EQ PUSH2 0xC8C JUMPI DUP1 PUSH4 0x3F68FDE4 EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x4C406C01 EQ PUSH2 0x964 JUMPI DUP1 PUSH4 0x54554D46 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0x56CE45B6 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x6C811686 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x938DE8C3 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x9C91CB9D EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xAD73349E EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xD17BD67C EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xDC296AE1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xE2555A73 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI PUSH4 0xFADFA4DC EQ PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x107 CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 PUSH2 0x12A DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x155 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1E2 PUSH2 0x130F JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP4 MSTORE PUSH2 0x201 PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH2 0x1347 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 DUP1 DUP5 SLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP6 DUP7 SWAP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x289 JUMPI POP POP POP PUSH2 0x234 DUP3 PUSH2 0x249 SWAP8 SUB DUP4 PUSH2 0x10B1 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x40 DUP9 MSTORE PUSH1 0x40 DUP9 ADD SWAP1 PUSH2 0x100F JUMP JUMPDEST SWAP3 DUP7 DUP5 SUB DUP3 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x269 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x25A JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE SWAP8 DUP4 ADD SWAP8 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21B JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 PUSH2 0x2C2 PUSH2 0xFB9 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 PUSH2 0x30E PUSH2 0xFB9 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37C PUSH1 0x3 DUP4 ADD PUSH2 0x1151 JUMP JUMPDEST SWAP2 PUSH2 0x3B7 PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x40E PUSH2 0x408 CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP3 DUP4 DUP4 ADD DUP5 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 DUP1 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x441 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x45D PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x100F JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x434 JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH2 0x4AD PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x4FD CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 PUSH2 0x520 DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7F5 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x932 JUMPI DUP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x597 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP6 PUSH2 0x10B1 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x7E6 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x5BD PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8E3 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH2 0x5E9 DUP3 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5F8 DUP2 PUSH2 0x1095 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8CF JUMPI PUSH2 0x682 PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x88A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x818 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 DUP11 SWAP3 PUSH2 0x80D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x7F9 JUMPI SWAP1 PUSH2 0x715 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x10E9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7F5 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x66D36801 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7D2 JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH32 0x9D9EC53E54F6385EC09428208C029BD27EB96263FC7B5DA62DB98ECC7D3F015C CALLER SWAP4 DUP1 PUSH2 0x7C3 PUSH1 0x4 CALLDATALOAD SWAP6 DUP10 DUP4 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7DC DUP5 SWAP2 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x7E6 JUMPI DUP3 PUSH2 0x783 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x6AA JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP5 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP2 DUP9 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x872 JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x859 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x6C2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x849 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x826 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x8C8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x8BC JUMPI POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8A6 JUMP JUMPDEST POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207375626D697474656420746F207468697320636F6E746573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F5 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x9F0 JUMPI POP POP POP DUP5 PUSH2 0x9B2 SWAP2 SUB DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x9D9 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9CA JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x99C JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA23 PUSH2 0x1248 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH2 0xA3F PUSH1 0xFF PUSH1 0x6 DUP5 ADD SLOAD AND PUSH2 0x126B JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI PUSH1 0x1 SWAP2 DUP5 DUP4 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x772744B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP7 DUP8 SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC48 JUMPI PUSH1 0x4 SWAP3 SWAP2 PUSH2 0xAAE SWAP2 DUP11 SWAP2 PUSH2 0xC1B JUMPI JUMPDEST POP PUSH2 0x12CF JUMP JUMPDEST DUP6 DUP9 MSTORE PUSH1 0x7 DUP10 MSTORE PUSH1 0x40 DUP9 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD SWAP1 DUP2 SLOAD SWAP2 DUP3 ISZERO PUSH2 0xC08 JUMPI DUP7 SWAP8 SWAP9 PUSH1 0x8 SWAP2 PUSH1 0x0 NOT DUP1 SWAP6 ADD SWAP1 SSTORE DUP7 DUP11 MSTORE MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP2 DUP7 DUP10 SWAP1 JUMPDEST PUSH2 0xB25 JUMPI JUMPDEST DUP10 DUP9 CALLER DUP9 DUP11 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 DUP6 DUP1 LOG4 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP4 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xB39 DUP3 DUP7 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP3 SWAP2 DUP4 SHL SHR DUP6 AND CALLER EQ PUSH2 0xB5B JUMPI POP POP PUSH2 0xB55 SWAP1 PUSH2 0x1223 JUMP JUMPDEST DUP8 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 SWAP7 SWAP8 SWAP9 POP DUP3 DUP2 SWAP7 SWAP4 SWAP5 SWAP6 SWAP7 ADD SWAP1 DUP2 GT PUSH2 0xBEF JUMPI SWAP1 PUSH2 0xB8F DUP6 PUSH2 0xB81 PUSH2 0xBAE SWAP5 DUP10 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP11 SHL SHR AND SWAP2 DUP8 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP4 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xBDD JUMPI POP ADD SWAP3 PUSH2 0xBC4 DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP1 DUP3 SWAP2 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP3 DUP12 REVERT JUMPDEST POP PUSH2 0xAF7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP4 DUP9 REVERT JUMPDEST PUSH2 0xC3B SWAP2 POP DUP12 RETURNDATASIZE DUP14 GT PUSH2 0xC41 JUMPI JUMPDEST PUSH2 0xC33 DUP2 DUP4 PUSH2 0x10B1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12B7 JUMP JUMPDEST CODESIZE PUSH2 0xAA8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185D995B89DD081D9BDD1959081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xCC0 PUSH1 0x40 PUSH2 0xCD4 SWAP3 PUSH2 0xCAF PUSH2 0x130F JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x100F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xCF2 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xCFA PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xD75 PUSH2 0x1248 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0xD90 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 DUP3 DUP5 PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x772744B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0xF93 JUMPI PUSH2 0xDD5 SWAP2 DUP9 SWAP2 PUSH2 0xF7C JUMPI POP PUSH2 0x12CF JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER DUP8 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0xF47 JUMPI CALLER DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND EQ PUSH2 0xF02 JUMPI SWAP1 PUSH1 0x4 PUSH1 0x8 SWAP3 DUP7 DUP9 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP4 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xE2E DUP2 SLOAD PUSH2 0x1223 JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH2 0xE5C DUP3 PUSH2 0xE7A SWAP3 PUSH1 0x1 DUP10 SWAP7 SWAP6 ADD DUP2 SSTORE PUSH2 0x10E9 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7F5 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x3CEE7987 PUSH1 0xE2 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0xEDB JUMPI JUMPDEST POP CALLER SWAP2 PUSH32 0x7FE1D4E6B34E228B5DC059FCDC037C71B216FB2417F47C171E505144A5E4F5FC DUP5 DUP1 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEE7 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x106B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xEAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420766F746520666F72206F776E207375626D697373696F6E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xC3B SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xC41 JUMPI PUSH2 0xC33 DUP2 DUP4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFB4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFB4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xFFB JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFDA JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x104C PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFB4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1147 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1131 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1126 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1165 DUP5 PUSH2 0x1117 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x11D4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1191 JUMPI JUMPDEST POP POP PUSH2 0x118F SWAP3 POP SUB DUP4 PUSH2 0x10B1 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x11BC JUMPI POP POP PUSH2 0x118F SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1181 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118F SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x120B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1232 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1259 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1272 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E20646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xFB4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xFB4 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x131C DUP3 PUSH2 0x1095 JUMP JUMPDEST DUP2 PUSH1 0xC0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1354 DUP2 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1388 PUSH1 0x3 DUP3 ADD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13CD DUP3 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x10B1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x13EB PUSH1 0x1F NOT SWAP2 PUSH2 0x13AB JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13FC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1407 PUSH2 0x130F JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x13F0 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP3 DUP7 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP9 MSTORE DUP7 DUP9 KECCAK256 SWAP3 DUP9 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0x15F0 JUMPI POP POP POP PUSH2 0x1466 SWAP3 POP SUB DUP3 PUSH2 0x10B1 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO PUSH2 0x15CC JUMPI PUSH2 0x1478 DUP4 PUSH2 0x13C3 JUMP JUMPDEST SWAP5 DUP7 JUMPDEST DUP5 DUP2 LT PUSH2 0x1592 JUMPI POP POP POP POP DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x14EA JUMPI POP DUP1 DUP3 LT ISZERO PUSH2 0x14E2 JUMPI POP SWAP1 JUMPDEST PUSH2 0x14A4 DUP3 PUSH2 0x13C3 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x14B3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x14C1 PUSH2 0x14DD SWAP3 DUP5 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x14CC DUP3 DUP8 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP7 PUSH2 0x1413 JUMP JUMPDEST POP PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x14A6 JUMP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 DUP3 GT PUSH2 0x157E JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x150C JUMPI POP PUSH2 0x1507 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x1538 SWAP1 PUSH1 0x80 DUP1 PUSH2 0x151D DUP4 DUP10 PUSH2 0x1413 JUMP JUMPDEST MLOAD ADD MLOAD SWAP1 PUSH2 0x152B DUP6 DUP10 PUSH2 0x1413 JUMP JUMPDEST MLOAD ADD MLOAD LT PUSH2 0x153D JUMPI PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x1547 DUP4 DUP8 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x1552 DUP3 DUP9 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x155D DUP6 DUP10 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x1568 DUP5 DUP9 PUSH2 0x1413 JUMP JUMPDEST POP PUSH2 0x1573 DUP3 DUP9 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP8 PUSH2 0x1413 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP1 PUSH2 0x15A0 PUSH2 0x15C7 SWAP3 DUP7 PUSH2 0x1413 JUMP JUMPDEST MLOAD DUP10 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x15B2 DUP5 DUP11 KECCAK256 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x15BC DUP3 DUP11 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP10 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x147B JUMP JUMPDEST DUP1 MLOAD SWAP6 SWAP5 DUP7 ADD SWAP4 POP SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP5 DUP4 LT OR PUSH2 0x932 JUMPI MSTORE DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP8 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x144F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xCC SGT 0x24 DUP7 JUMPI 0xAC DIV SHL 0x4A LT 0xB7 0xAF 0xE0 0xD5 CALLER SMOD SWAP4 PUSH32 0xAC69419F7B851B25CEF86F6D4264736F6C634300081400330000000000000000 ","sourceMap":"504:7898:5:-:0;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;1904:10;1273:26:0;1269:95;;-1:-1:-1;504:7898:5;;;;;;;1904:10;;504:7898;;;;-1:-1:-1;504:7898:5;;;1904:10;;504:7898;;3052:40:0;-1:-1:-1;3052:40:0;;504:7898:5;1857:1:2;;1926:49:5;504:7898;;;1926:49;504:7898;;;;;;;;1269:95:0;504:7898:5;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;504:7898:5;;;1322:31:0;504:7898:5;-1:-1:-1;504:7898:5;;;;;;-1:-1:-1;504:7898:5;;;;;-1:-1:-1;504:7898:5"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4025,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_17210":{"entryPoint":3998,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":4791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":4307,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_string":{"entryPoint":4047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Submission":{"entryPoint":4111,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Submission_dyn":{"entryPoint":5059,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Submission":{"entryPoint":4879,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Submission_dyn":{"entryPoint":5035,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4433,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4375,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4273,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_17209":{"entryPoint":4203,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17214":{"entryPoint":4245,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":4599,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getTopSubmissions":{"entryPoint":5159,"id":1453,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":4680,"id":226,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":4643,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":5139,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_storage_reference_type_struct_Submission":{"entryPoint":4935,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4815,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a822":{"entryPoint":4715,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b6000803560e01c80630121b93f14610d565780631448c97014610cd85780633687f7bf146102f25780633e8686cc14610c8c5780633f68fde414610a0457806343859632146102a65780634c406c011461096457806354554d461461094657806356ce45b6146105395780636c811686146104ee578063715018a6146104945780638da5cb5b1461046d578063938de8c3146103f65780639c91cb9d146103cd578063ad73349e14610339578063d17bd67c146102f2578063dc296ae1146102a6578063e2555a73146101c6578063f2fde38b1461013b5763fadfa4dc146100f957600080fd5b3461013857610107366110d3565b9190815260056020526040812090815483101561013857602061012a84846110e9565b90546040519160031b1c8152f35b80fd5b503461013857602036600319011261013857610155610f9e565b61015d6111f7565b6001600160a01b039081169081156101ad57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b50346101385760209081600319360112610138576101e261130f565b5060043581526004825260408120600883526102016040832091611347565b916040519384908084549687815201958694845281842090845b81811061028957505050610234826102499703836110b1565b8060405196879660408852604088019061100f565b928684038288015251928381520193925b82811061026957505050500390f35b83516001600160a01b03168552869550938101939281019260010161025a565b82546001600160a01b03168952978301976001928301920161021b565b50346101385760403660031901126101385760406102c2610fb9565b9160043581526007602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b503461013857604036600319011261013857604061030e610fb9565b9160043581526006602052209060018060a01b03166000526020526020604060002054604051908152f35b503461013857602036600319011261013857600480358252602052604090208054600182015460028301549092906001600160a01b031661037c60038301611151565b916103b760048201549360ff60066005850154940154169360405197889788526020880152604087015260e0606087015260e0860190610fcf565b92608085015260a0840152151560c08301520390f35b50346101385780600319360112610138576002546040516001600160a01b039091168152602090f35b50346101385761040e610408366110d3565b90611427565b60405190602092838301848452825180915260408401948060408360051b870101940192955b8287106104415785850386f35b90919293828061045d600193603f198a8203018652885161100f565b9601920196019592919092610434565b5034610138578060031936011261013857546040516001600160a01b039091168152602090f35b50346101385780600319360112610138576104ad6111f7565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610138576104fd366110d3565b9190815260086020526040812090815483101561013857602061052084846110e9565b905460405160039290921b1c6001600160a01b03168152f35b50346101385760403660031901126101385760243567ffffffffffffffff81116107f557366023820112156107f55780600401359067ffffffffffffffff8211610932578290604051926105976020601f19601f84011601856110b1565b80845236602482840101116107e6578060246020930183860137830101526105bd611248565b6004358252600660205260408220336000526020526040600020546108e357600354906105e982611223565b6003556040516105f881611095565b82815260043560208201523360408201528160608201528360808201524260a0820152600160c082015282845260046020526040842081518155602082015160018201556002810160018060a01b036040840151166001600160601b0360a01b825416179055606082015180519067ffffffffffffffff82116108cf576106826003840154611117565b601f811161088a575b50602090601f831160011461081857918060c094926006948a9261080d575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015501910151151560ff801983541691161790556004358352600560205260408320805490600160401b8210156107f95790610715916001820181556110e9565b81549060031b9084821b91600019901b1916179055600435835260066020526040832033600052602052816040600020558260018060a01b0360025416803b156107f55781906024604051809481936366d3680160e11b835260043560048401525af180156107ea576107d2575b6020838360405190838252827f9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c3393806107c36004359589830190610fcf565b0390a460018055604051908152f35b6107dc849161106b565b6107e65782610783565b8280fd5b6040513d86823e3d90fd5b5080fd5b634e487b7160e01b85526041600452602485fd5b0151905038806106aa565b906003840188526020882091885b601f198516811061087257509260c0949260019260069583601f19811610610859575b505050811b0160038201556106c2565b015160001960f88460031b161c19169055388080610849565b91926020600181928685015181550194019201610826565b60038401885260208820601f840160051c8101602085106108c8575b601f830160051c820181106108bc57505061068b565b600081556001016108a6565b50806108a6565b634e487b7160e01b87526041600452602487fd5b60405162461bcd60e51b815260206004820152602160248201527f416c7265616479207375626d697474656420746f207468697320636f6e7465736044820152601d60fa1b6064820152608490fd5b634e487b7160e01b83526041600452602483fd5b50346101385780600319360112610138576020600354604051908152f35b5034610138576020806003193601126107f5576004358252600581526040822060405192838383549182815201908193835284832090835b8181106109f057505050846109b29103856110b1565b60405193838594850191818652518092526040850193925b8281106109d957505050500390f35b8351855286955093810193928101926001016109ca565b82548452928601926001928301920161099c565b5034610138576020908160031936011261013857600435610a23611248565b808252600483526040822090610a3f60ff60068401541661126b565b808352600784526040832033600052845260ff6040600020541615610c535760019184838201549160018060a01b039081600254166040519384809263772744b560e01b825287600483015260249687915afa908115610c485760049291610aae918a91610c1b575b506112cf565b8588526007895260408820336000528952604060002060ff19815416905501908154918215610c08578697986008916000198095019055868a525260408820918689905b610b25575b898833888a7fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e74401175868580a4805580f35b835480821015610c0257610b3982866110e9565b905460039291831b1c85163314610b5b575050610b5590611223565b87610af2565b90969798508281969394959601908111610bef5790610b8f85610b81610bae94896110e9565b9054908a1b1c1691876110e9565b90919082549060031b9160018060a01b03809116831b921b1916179055565b8354908115610bdd57500192610bc484846110e9565b81939154921b1b19169055559082913880808080610af7565b634e487b7160e01b8a52603160045289fd5b634e487b7160e01b8b526011600452828bfd5b50610af7565b634e487b7160e01b885260116004528388fd5b610c3b91508b3d8d11610c41575b610c3381836110b1565b8101906112b7565b38610aa8565b503d610c29565b6040513d8a823e3d90fd5b60405162461bcd60e51b815260048101859052601160248201527012185d995b89dd081d9bdd1959081e595d607a1b6044820152606490fd5b503461013857602036600319011261013857610cc06040610cd492610caf61130f565b506004358152600460205220611347565b60405191829160208352602083019061100f565b0390f35b503461013857602036600319011261013857610cf2610f9e565b610cfa6111f7565b6001600160a01b03168015610d1f576001600160601b0360a01b600254161760025580f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b5034610138576020806003193601126107f55760043590610d75611248565b8183526004815260408320610d9060ff60068301541661126b565b60018101549160018060a01b039160248284600254166040519283809263772744b560e01b82528960048301525afa8015610f9357610dd5918891610f7c57506112cf565b8486526007825260408620338752825260ff604087205416610f4757338360028301541614610f02579060046008928688526007835260408820338952835260408820600160ff1982541617905501610e2e8154611223565b90558486525260408420805490600160401b821015610eee57610e5c82610e7a9260018996950181556110e9565b81546001600160a01b0360039290921b91821b19163390911b179055565b60025416803b156107f5578190602460405180948193633cee798760e21b83528760048401525af180156107ea57610edb575b5033917f7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc8480a46001805580f35b610ee79093919361106b565b9138610ead565b634e487b7160e01b86526041600452602486fd5b60405162461bcd60e51b815260048101839052601e60248201527f43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e00006044820152606490fd5b60405162461bcd60e51b815260048101839052600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b610c3b9150843d8611610c4157610c3381836110b1565b6040513d89823e3d90fd5b600435906001600160a01b0382168203610fb457565b600080fd5b602435906001600160a01b0382168203610fb457565b919082519283825260005b848110610ffb575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fda565b90815181526020820151602082015260018060a01b03604083015116604082015260c08061104c606085015160e0606086015260e0850190610fcf565b936080810151608085015260a081015160a08501520151151591015290565b67ffffffffffffffff811161107f57604052565b634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761107f57604052565b90601f8019910116810190811067ffffffffffffffff82111761107f57604052565b6040906003190112610fb4576004359060243590565b80548210156111015760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015611147575b602083101461113157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611126565b906040519182600082549261116584611117565b9081845260019485811690816000146111d45750600114611191575b505061118f925003836110b1565b565b9093915060005260209081600020936000915b8183106111bc57505061118f93508201013880611181565b855488840185015294850194879450918301916111a4565b91505061118f94506020925060ff191682840152151560051b8201013880611181565b6000546001600160a01b0316330361120b57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146112325760010190565b634e487b7160e01b600052601160045260246000fd5b600260015414611259576002600155565b604051633ee5aeb560e01b8152600490fd5b1561127257565b60405162461bcd60e51b815260206004820152601960248201527f5375626d697373696f6e20646f6573206e6f74206578697374000000000000006044820152606490fd5b90816020910312610fb457518015158103610fb45790565b156112d657565b60405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606490fd5b6040519061131c82611095565b8160c06000918281528260208201528260408201526060808201528260808201528260a08201520152565b9060405161135481611095565b60c060ff60068395805485526001810154602086015260018060a01b03600282015416604086015261138860038201611151565b606086015260048101546080860152600581015460a08601520154161515910152565b67ffffffffffffffff811161107f5760051b60200190565b906113cd826113ab565b6113da60405191826110b1565b82815280926113eb601f19916113ab565b019060005b8281106113fc57505050565b60209061140761130f565b828285010152016113f0565b80518210156111015760209160051b010190565b9060009182526020906005825260408084208151808286829454938481520190885286882092885b888282106115f057505050611466925003826110b1565b80519182156115cc57611478836113c3565b94865b8481106115925750505050835b8181106114ea5750808210156114e25750905b6114a4826113c3565b925b8281106114b35750505090565b806114c16114dd9284611413565b516114cc8287611413565b526114d78186611413565b50611223565b6114a6565b90509061149b565b6001810180821161157e575b82811061150c575061150790611223565b611488565b6115389060808061151d8389611413565b5101519061152b8589611413565b5101511061153d57611223565b6114f6565b6115478387611413565b516115528288611413565b5161155d8589611413565b526115688488611413565b506115738288611413565b526114d78187611413565b634e487b7160e01b86526011600452602486fd5b806115a06115c79286611413565b518952600483526115b2848a20611347565b6115bc828a611413565b526114d78189611413565b61147b565b805195948601935091505067ffffffffffffffff8211848310176109325752815290565b855484526001958601958795509301920161144f56fea2646970667358221220c9cc13248657ac041b4a10b7afe0d53307937fac69419f7b851b25cef86f6d4264736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0xD56 JUMPI DUP1 PUSH4 0x1448C970 EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0x3687F7BF EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3E8686CC EQ PUSH2 0xC8C JUMPI DUP1 PUSH4 0x3F68FDE4 EQ PUSH2 0xA04 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x4C406C01 EQ PUSH2 0x964 JUMPI DUP1 PUSH4 0x54554D46 EQ PUSH2 0x946 JUMPI DUP1 PUSH4 0x56CE45B6 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0x6C811686 EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x938DE8C3 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x9C91CB9D EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xAD73349E EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xD17BD67C EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xDC296AE1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xE2555A73 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13B JUMPI PUSH4 0xFADFA4DC EQ PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x107 CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 PUSH2 0x12A DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x155 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x15D PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1E2 PUSH2 0x130F JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 DUP4 MSTORE PUSH2 0x201 PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH2 0x1347 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP1 DUP1 DUP5 SLOAD SWAP7 DUP8 DUP2 MSTORE ADD SWAP6 DUP7 SWAP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x289 JUMPI POP POP POP PUSH2 0x234 DUP3 PUSH2 0x249 SWAP8 SUB DUP4 PUSH2 0x10B1 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x40 DUP9 MSTORE PUSH1 0x40 DUP9 ADD SWAP1 PUSH2 0x100F JUMP JUMPDEST SWAP3 DUP7 DUP5 SUB DUP3 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x269 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x25A JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 MSTORE SWAP8 DUP4 ADD SWAP8 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x21B JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 PUSH2 0x2C2 PUSH2 0xFB9 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 PUSH2 0x30E PUSH2 0xFB9 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 DUP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37C PUSH1 0x3 DUP4 ADD PUSH2 0x1151 JUMP JUMPDEST SWAP2 PUSH2 0x3B7 PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x40E PUSH2 0x408 CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 SWAP3 DUP4 DUP4 ADD DUP5 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 DUP1 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD SWAP5 ADD SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x441 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x45D PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x100F JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x434 JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH2 0x4AD PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH2 0x4FD CALLDATASIZE PUSH2 0x10D3 JUMP JUMPDEST SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP4 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x20 PUSH2 0x520 DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7F5 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x932 JUMPI DUP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x597 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP6 PUSH2 0x10B1 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x7E6 JUMPI DUP1 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x5BD PUSH2 0x1248 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x8E3 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH2 0x5E9 DUP3 PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x5F8 DUP2 PUSH2 0x1095 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 DUP5 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x8CF JUMPI PUSH2 0x682 PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x88A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x818 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 DUP11 SWAP3 PUSH2 0x80D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x7F9 JUMPI SWAP1 PUSH2 0x715 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x10E9 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7F5 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x66D36801 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7D2 JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 PUSH1 0x40 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH32 0x9D9EC53E54F6385EC09428208C029BD27EB96263FC7B5DA62DB98ECC7D3F015C CALLER SWAP4 DUP1 PUSH2 0x7C3 PUSH1 0x4 CALLDATALOAD SWAP6 DUP10 DUP4 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x7DC DUP5 SWAP2 PUSH2 0x106B JUMP JUMPDEST PUSH2 0x7E6 JUMPI DUP3 PUSH2 0x783 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x6AA JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP5 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP2 DUP9 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x872 JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x859 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x6C2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x849 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x826 JUMP JUMPDEST PUSH1 0x3 DUP5 ADD DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x8C8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x8BC JUMPI POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8A6 JUMP JUMPDEST POP DUP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207375626D697474656420746F207468697320636F6E746573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F5 JUMPI PUSH1 0x4 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP4 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 DUP4 MSTORE DUP5 DUP4 KECCAK256 SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x9F0 JUMPI POP POP POP DUP5 PUSH2 0x9B2 SWAP2 SUB DUP6 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP4 DUP6 SWAP5 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x9D9 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x9CA JUMP JUMPDEST DUP3 SLOAD DUP5 MSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x99C JUMP JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x138 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA23 PUSH2 0x1248 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 PUSH2 0xA3F PUSH1 0xFF PUSH1 0x6 DUP5 ADD SLOAD AND PUSH2 0x126B JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 DUP4 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI PUSH1 0x1 SWAP2 DUP5 DUP4 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x772744B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP7 DUP8 SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xC48 JUMPI PUSH1 0x4 SWAP3 SWAP2 PUSH2 0xAAE SWAP2 DUP11 SWAP2 PUSH2 0xC1B JUMPI JUMPDEST POP PUSH2 0x12CF JUMP JUMPDEST DUP6 DUP9 MSTORE PUSH1 0x7 DUP10 MSTORE PUSH1 0x40 DUP9 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD SWAP1 DUP2 SLOAD SWAP2 DUP3 ISZERO PUSH2 0xC08 JUMPI DUP7 SWAP8 SWAP9 PUSH1 0x8 SWAP2 PUSH1 0x0 NOT DUP1 SWAP6 ADD SWAP1 SSTORE DUP7 DUP11 MSTORE MSTORE PUSH1 0x40 DUP9 KECCAK256 SWAP2 DUP7 DUP10 SWAP1 JUMPDEST PUSH2 0xB25 JUMPI JUMPDEST DUP10 DUP9 CALLER DUP9 DUP11 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 DUP6 DUP1 LOG4 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP4 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xB39 DUP3 DUP7 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP3 SWAP2 DUP4 SHL SHR DUP6 AND CALLER EQ PUSH2 0xB5B JUMPI POP POP PUSH2 0xB55 SWAP1 PUSH2 0x1223 JUMP JUMPDEST DUP8 PUSH2 0xAF2 JUMP JUMPDEST SWAP1 SWAP7 SWAP8 SWAP9 POP DUP3 DUP2 SWAP7 SWAP4 SWAP5 SWAP6 SWAP7 ADD SWAP1 DUP2 GT PUSH2 0xBEF JUMPI SWAP1 PUSH2 0xB8F DUP6 PUSH2 0xB81 PUSH2 0xBAE SWAP5 DUP10 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP11 SHL SHR AND SWAP2 DUP8 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP4 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xBDD JUMPI POP ADD SWAP3 PUSH2 0xBC4 DUP5 DUP5 PUSH2 0x10E9 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP3 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP1 DUP3 SWAP2 CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xAF7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP3 DUP12 REVERT JUMPDEST POP PUSH2 0xAF7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE DUP4 DUP9 REVERT JUMPDEST PUSH2 0xC3B SWAP2 POP DUP12 RETURNDATASIZE DUP14 GT PUSH2 0xC41 JUMPI JUMPDEST PUSH2 0xC33 DUP2 DUP4 PUSH2 0x10B1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x12B7 JUMP JUMPDEST CODESIZE PUSH2 0xAA8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185D995B89DD081D9BDD1959081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xCC0 PUSH1 0x40 PUSH2 0xCD4 SWAP3 PUSH2 0xCAF PUSH2 0x130F JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x100F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xCF2 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xCFA PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xD1F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xD75 PUSH2 0x1248 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH2 0xD90 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x126B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x24 DUP3 DUP5 PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x772744B5 PUSH1 0xE0 SHL DUP3 MSTORE DUP10 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0xF93 JUMPI PUSH2 0xDD5 SWAP2 DUP9 SWAP2 PUSH2 0xF7C JUMPI POP PUSH2 0x12CF JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP7 KECCAK256 CALLER DUP8 MSTORE DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 DUP8 KECCAK256 SLOAD AND PUSH2 0xF47 JUMPI CALLER DUP4 PUSH1 0x2 DUP4 ADD SLOAD AND EQ PUSH2 0xF02 JUMPI SWAP1 PUSH1 0x4 PUSH1 0x8 SWAP3 DUP7 DUP9 MSTORE PUSH1 0x7 DUP4 MSTORE PUSH1 0x40 DUP9 KECCAK256 CALLER DUP10 MSTORE DUP4 MSTORE PUSH1 0x40 DUP9 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xE2E DUP2 SLOAD PUSH2 0x1223 JUMP JUMPDEST SWAP1 SSTORE DUP5 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0xEEE JUMPI PUSH2 0xE5C DUP3 PUSH2 0xE7A SWAP3 PUSH1 0x1 DUP10 SWAP7 SWAP6 ADD DUP2 SSTORE PUSH2 0x10E9 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x7F5 JUMPI DUP2 SWAP1 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x3CEE7987 PUSH1 0xE2 SHL DUP4 MSTORE DUP8 PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH2 0xEDB JUMPI JUMPDEST POP CALLER SWAP2 PUSH32 0x7FE1D4E6B34E228B5DC059FCDC037C71B216FB2417F47C171E505144A5E4F5FC DUP5 DUP1 LOG4 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEE7 SWAP1 SWAP4 SWAP2 SWAP4 PUSH2 0x106B JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0xEAD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420766F746520666F72206F776E207375626D697373696F6E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xC3B SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0xC41 JUMPI PUSH2 0xC33 DUP2 DUP4 PUSH2 0x10B1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFB4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xFB4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xFFB JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFDA JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 PUSH2 0x104C PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0xE0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0xFCF JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x107F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xFB4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1147 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1131 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1126 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1165 DUP5 PUSH2 0x1117 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x11D4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1191 JUMPI JUMPDEST POP POP PUSH2 0x118F SWAP3 POP SUB DUP4 PUSH2 0x10B1 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x11BC JUMPI POP POP PUSH2 0x118F SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1181 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x118F SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x120B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1232 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x1259 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1272 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E20646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xFB4 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xFB4 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x566F74696E67206E6F7420616374697665 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x131C DUP3 PUSH2 0x1095 JUMP JUMPDEST DUP2 PUSH1 0xC0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1354 DUP2 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP4 SWAP6 DUP1 SLOAD DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x1388 PUSH1 0x3 DUP3 ADD PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x107F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x13CD DUP3 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x13DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x10B1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x13EB PUSH1 0x1F NOT SWAP2 PUSH2 0x13AB JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x13FC JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1407 PUSH2 0x130F JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x13F0 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1101 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP3 DUP7 DUP3 SWAP5 SLOAD SWAP4 DUP5 DUP2 MSTORE ADD SWAP1 DUP9 MSTORE DUP7 DUP9 KECCAK256 SWAP3 DUP9 JUMPDEST DUP9 DUP3 DUP3 LT PUSH2 0x15F0 JUMPI POP POP POP PUSH2 0x1466 SWAP3 POP SUB DUP3 PUSH2 0x10B1 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO PUSH2 0x15CC JUMPI PUSH2 0x1478 DUP4 PUSH2 0x13C3 JUMP JUMPDEST SWAP5 DUP7 JUMPDEST DUP5 DUP2 LT PUSH2 0x1592 JUMPI POP POP POP POP DUP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x14EA JUMPI POP DUP1 DUP3 LT ISZERO PUSH2 0x14E2 JUMPI POP SWAP1 JUMPDEST PUSH2 0x14A4 DUP3 PUSH2 0x13C3 JUMP JUMPDEST SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x14B3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x14C1 PUSH2 0x14DD SWAP3 DUP5 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x14CC DUP3 DUP8 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP7 PUSH2 0x1413 JUMP JUMPDEST POP PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x14A6 JUMP JUMPDEST SWAP1 POP SWAP1 PUSH2 0x149B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 DUP3 GT PUSH2 0x157E JUMPI JUMPDEST DUP3 DUP2 LT PUSH2 0x150C JUMPI POP PUSH2 0x1507 SWAP1 PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x1538 SWAP1 PUSH1 0x80 DUP1 PUSH2 0x151D DUP4 DUP10 PUSH2 0x1413 JUMP JUMPDEST MLOAD ADD MLOAD SWAP1 PUSH2 0x152B DUP6 DUP10 PUSH2 0x1413 JUMP JUMPDEST MLOAD ADD MLOAD LT PUSH2 0x153D JUMPI PUSH2 0x1223 JUMP JUMPDEST PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x1547 DUP4 DUP8 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x1552 DUP3 DUP9 PUSH2 0x1413 JUMP JUMPDEST MLOAD PUSH2 0x155D DUP6 DUP10 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x1568 DUP5 DUP9 PUSH2 0x1413 JUMP JUMPDEST POP PUSH2 0x1573 DUP3 DUP9 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP8 PUSH2 0x1413 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP1 PUSH2 0x15A0 PUSH2 0x15C7 SWAP3 DUP7 PUSH2 0x1413 JUMP JUMPDEST MLOAD DUP10 MSTORE PUSH1 0x4 DUP4 MSTORE PUSH2 0x15B2 DUP5 DUP11 KECCAK256 PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x15BC DUP3 DUP11 PUSH2 0x1413 JUMP JUMPDEST MSTORE PUSH2 0x14D7 DUP2 DUP10 PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x147B JUMP JUMPDEST DUP1 MLOAD SWAP6 SWAP5 DUP7 ADD SWAP4 POP SWAP2 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP5 DUP4 LT OR PUSH2 0x932 JUMPI MSTORE DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP6 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 DUP8 SWAP6 POP SWAP4 ADD SWAP3 ADD PUSH2 0x144F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xCC SGT 0x24 DUP7 JUMPI 0xAC DIV SHL 0x4A LT 0xB7 0xAF 0xE0 0xD5 CALLER SMOD SWAP4 PUSH32 0xAC69419F7B851B25CEF86F6D4264736F6C634300081400330000000000000000 ","sourceMap":"504:7898:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1004:55;504:7898;;;;;;;;1004:55;;;;;504:7898;1004:55;;;;:::i;:::-;504:7898;;;;;;;;;;;1004:55;;;504:7898;;;;;;;-1:-1:-1;;504:7898:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;504:7898:5;;;;2627:22:0;;2623:91;;504:7898:5;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;3052:40:0;504:7898:5;3052:40:0;;504:7898:5;;2623:91:0;504:7898:5;;-1:-1:-1;;;2672:31:0;;504:7898:5;2672:31:0;;504:7898:5;;;;;2672:31:0;504:7898:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5984:16;504:7898;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;:::i;:::-;;;;;;7689:8;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;:::i;:::-;;;;;;1095:69;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;;;;;;;;;;;949:49;;504:7898;949:49;;;504:7898;;;;-1:-1:-1;;;;;504:7898:5;949:49;504:7898;949:49;;;:::i;:::-;;504:7898;;949:49;;504:7898;949:49;504:7898;949:49;;;;504:7898;949:49;;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:37;504:7898;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;504:7898:5;;;-1:-1:-1;;;;;;504:7898:5;;;;-1:-1:-1;;;;;504:7898:5;3052:40:0;504:7898:5;;3052:40:0;504:7898:5;;;;;;;;;;:::i;:::-;;;;;1306:53;504:7898;;;;;;;;1306:53;;;;;504:7898;1306:53;;;;:::i;:::-;504:7898;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;:::i;:::-;504:7898:5;;;;2257:14;504:7898;;;;;2284:10;504:7898;;;;;;;;;;;;2380:22;;;;:::i;:::-;504:7898;;;;;;;:::i;:::-;;;;;;;2449:253;;504:7898;2284:10;504:7898;2449:253;;504:7898;2449:253;;;;504:7898;2449:253;;;;504:7898;2650:15;2449:253;;;504:7898;;2449:253;;;504:7898;;;;;;;;;;;;;;;2449:253;;504:7898;;;;;;;;;;;;;;2449:253;;504:7898;;-1:-1:-1;;;;;504:7898:5;;;;;;;;2449:253;;;504:7898;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2449:253;504:7898;;2257:14;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;2449:253;;;504:7898;;;;;2449:253;;;504:7898;;;;;;2449:253;;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2257:14;504:7898;;;;;2284:10;504:7898;;;;;;;;;;;;;;;;;;2885:51;;;;;504:7898;;;;;;;;;;;;2885:51;;504:7898;;;2885:51;;504:7898;2885:51;;;;;;;;504:7898;;;;;;;;;;2284:10;2960:69;2284:10;504:7898;;;;;;;;;;;:::i;:::-;2960:69;;;504:7898;;;;;;;;;2885:51;;;;;:::i;:::-;504:7898;;2885:51;;;504:7898;;;;2885:51;504:7898;;;;;;;;;2885:51;504:7898;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;;2449:253;504:7898;;;;2257:14;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5631:18;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;:::i;:::-;504:7898:5;;;;;;;;;4413:17;4405:55;504:7898;4413:17;;;504:7898;;4405:55;:::i;:::-;504:7898;;;4478:8;504:7898;;;;;4502:10;504:7898;;;;;;;;;;;;;;4574:20;;;;;504:7898;;;;;;;;;4612:14;504:7898;;;;;;;;;;;4612:40;;;504:7898;4612:40;;504:7898;;4612:40;;;;;;;;;;504:7898;4612:40;;4604:70;4612:40;;;;;504:7898;4604:70;;:::i;:::-;504:7898;;;4478:8;504:7898;;;;;4502:10;504:7898;;;;;;;;;;;;;;4769:20;504:7898;;;;;;;;;;;4911:16;504:7898;;;;;;;;;;;;;;;4957:13;;;4952:220;504:7898;;;4952:220;4502:10;;;;;5195:49;4502:10;;5195:49;504:7898;;;;4991:3;504:7898;;4972:17;;;;;;5014:9;;;;:::i;:::-;504:7898;;;;;;;;;;4502:10;5014:23;5010:152;;4991:3;;;;;:::i;:::-;4957:13;;;5010:152;504:7898;;;;;;;;;;;;;;;;;;5069:25;5057:9;5069:25;;5057:37;5069:25;;;:::i;:::-;504:7898;;;;;;;5057:9;;;:::i;:::-;:37;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;5057:37;504:7898;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5142:5;;;;;;;;;;504:7898;-1:-1:-1;;;504:7898:5;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;4972:17;;;;504:7898;-1:-1:-1;;;504:7898:5;;;;;;;;4612:40;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;504:7898;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;504:7898:5;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;504:7898:5;8293:25;;504:7898;;-1:-1:-1;;;;;504:7898:5;;8348:45;504:7898;;;8348:45;504:7898;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;;:::i;:::-;504:7898:5;;;;;;;;;3301:55;504:7898;3309:17;;;504:7898;;3301:55;:::i;:::-;504:7898;3395:20;;504:7898;;;;;;;;;;;3476:14;504:7898;;;;;;;;;;;3476:40;;;504:7898;3476:40;;504:7898;3476:40;;;;;;3468:70;3476:40;;;;;3468:70;;:::i;:::-;504:7898;;;3621:8;504:7898;;;;;3645:10;504:7898;;;;;;;;;;;;3645:10;3761:20;3476:14;3761:20;;504:7898;;3761:34;504:7898;;;;3954:16;504:7898;;;;3621:8;504:7898;;;;;3645:10;504:7898;;;;;;;;;;;;;;;;3922:20;:22;504:7898;;3922:22;:::i;:::-;504:7898;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;504:7898:5;;;;;;;;;;3645:10;504:7898;;;;;;;;3476:14;504:7898;;4054:44;;;;;504:7898;;;;;;;;;;;;4054:44;;;504:7898;4054:44;;504:7898;4054:44;;;;;;;;504:7898;3645:10;;4122:46;;;;;504:7898;;;;;4054:44;;;;;;;:::i;:::-;;;;;504:7898;-1:-1:-1;;;504:7898:5;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;3476:40;;;;;;;;;;;;;;:::i;:::-;504:7898;;;;;;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;504:7898:5;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;504:7898:5;;-1:-1:-1;504:7898:5;;;-1:-1:-1;504:7898:5;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;504:7898:5;;;;-1:-1:-1;504:7898:5;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;504:7898:5;-1:-1:-1;;;;;504:7898:5;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;504:7898:5;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;504:7898:5;;;1901:40:0;504:7898:5;-1:-1:-1;;504:7898:5;;;;;;;:::o;:::-;;;;;;;;;;;;2575:307:2;1899:1;2702:7;504:7898:5;2702:18:2;2698:86;;1899:1;2702:7;504:7898:5;2575:307:2:o;2698:86::-;504:7898:5;;-1:-1:-1;;;2743:30:2;;;;;504:7898:5;;;;:::o;:::-;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;-1:-1:-1;;;504:7898:5;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;504:7898:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;504:7898:5;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6113:1391::-;;-1:-1:-1;504:7898:5;;;;;6295:18;504:7898;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6395:11;;;6391:68;;6553:24;;;:::i;:::-;6592:13;;6607:10;;;;;;6776:13;;;;;6791:10;;;;;;-1:-1:-1;7233:15:5;;;;;;:33;;;7313:30;;;:::i;:::-;7358:13;7373:16;;;;;;7476:21;;;6113:1391;:::o;7391:3::-;7430:17;;7391:3;7430:17;;;:::i;:::-;;7410:37;;;;:::i;:::-;;;;;;:::i;:::-;;7391:3;:::i;:::-;7358:13;;7233:33;;;;;;6803:3;504:7898;;;;;;;;6846:10;;;;;;6803:3;;;;:::i;:::-;6776:13;;6858:3;;6885:27;;:17;;;;;:::i;:::-;;:27;504:7898;6915:17;;;;;:::i;:::-;;:27;504:7898;-1:-1:-1;6881:251:5;;6858:3;:::i;:::-;6827:17;;6881:251;6991:17;;;;:::i;:::-;;7050;;;;:::i;:::-;;7030:37;;;;:::i;:::-;;;;;;:::i;:::-;;7089:24;;;;:::i;:::-;;;;;;:::i;504:7898::-;-1:-1:-1;;;504:7898:5;;;6658:11;504:7898;;;;6619:3;6670:16;;6619:3;6670:16;;;:::i;:::-;504:7898;;;6658:11;504:7898;;;;;;;:::i;:::-;6638:49;;;;:::i;:::-;;;;;;:::i;6619:3::-;6592:13;;6391:68;504:7898;;;;;;;-1:-1:-1;504:7898:5;-1:-1:-1;;504:7898:5;;;;;;;;;;;;6422:26;:::o;504:7898::-;;;;;;;;;;;;-1:-1:-1;504:7898:5;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1138400","executionCost":"infinite","totalCost":"infinite"},"external":{"contestFactory()":"2565","contestSubmissions(uint256,uint256)":"7134","getContestSubmissions(uint256)":"infinite","getSubmission(uint256)":"infinite","getSubmissionWithVotes(uint256)":"infinite","getTopSubmissions(uint256,uint256)":"infinite","getTotalSubmissions()":"2409","getUserSubmission(uint256,address)":"2519","hasUserVoted(uint256,address)":"2839","hasVoted(uint256,address)":"2597","owner()":"2518","removeVote(uint256)":"infinite","renounceOwnership()":"28274","submissionVoters(uint256,uint256)":"6943","submissions(uint256)":"infinite","submitEntry(uint256,string)":"infinite","transferOwnership(address)":"28560","updateContestFactory(address)":"26659","userSubmission(uint256,address)":"2805","vote(uint256)":"infinite"}},"methodIdentifiers":{"contestFactory()":"9c91cb9d","contestSubmissions(uint256,uint256)":"fadfa4dc","getContestSubmissions(uint256)":"4c406c01","getSubmission(uint256)":"3e8686cc","getSubmissionWithVotes(uint256)":"e2555a73","getTopSubmissions(uint256,uint256)":"938de8c3","getTotalSubmissions()":"54554d46","getUserSubmission(uint256,address)":"3687f7bf","hasUserVoted(uint256,address)":"dc296ae1","hasVoted(uint256,address)":"43859632","owner()":"8da5cb5b","removeVote(uint256)":"3f68fde4","renounceOwnership()":"715018a6","submissionVoters(uint256,uint256)":"6c811686","submissions(uint256)":"ad73349e","submitEntry(uint256,string)":"56ce45b6","transferOwnership(address)":"f2fde38b","updateContestFactory(address)":"1448c970","userSubmission(uint256,address)":"d17bd67c","vote(uint256)":"0121b93f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contestFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"SubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"VoteRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contestFactory\",\"outputs\":[{\"internalType\":\"contract IContestFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contestSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"getContestSubmissions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"getSubmission\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct VotingContract.Submission\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"getSubmissionWithVotes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct VotingContract.Submission\",\"name\":\"submission\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"voters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getTopSubmissions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct VotingContract.Submission[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserSubmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasUserVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"removeVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"submissionVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"submissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"submitEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newFactory\",\"type\":\"address\"}],\"name\":\"updateContestFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userSubmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles submissions and gasless voting for contests\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"getContestSubmissions(uint256)\":{\"details\":\"Get all submissions for a contest\"},\"getSubmission(uint256)\":{\"details\":\"Get submission details\"},\"getSubmissionWithVotes(uint256)\":{\"details\":\"Get submission with vote details\"},\"getTopSubmissions(uint256,uint256)\":{\"details\":\"Get top submissions for a contest (sorted by votes)\"},\"getTotalSubmissions()\":{\"details\":\"Get total submissions count\"},\"getUserSubmission(uint256,address)\":{\"details\":\"Get user's submission for a contest\"},\"hasUserVoted(uint256,address)\":{\"details\":\"Check if user has voted for a submission\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeVote(uint256)\":{\"details\":\"Remove a vote (allow users to change their vote)\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitEntry(uint256,string)\":{\"details\":\"Submit an entry to a contest\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateContestFactory(address)\":{\"details\":\"Update ContestFactory address (owner only)\"},\"vote(uint256)\":{\"details\":\"Cast a vote for a submission (gasless via Biconomy)\"}},\"title\":\"VotingContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VotingContract.sol\":\"VotingContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/VotingContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ninterface IContestFactory {\\n    function isVotingActive(uint256 _contestId) external view returns (bool);\\n    function incrementVoteCount(uint256 _contestId) external;\\n    function incrementSubmissionCount(uint256 _contestId) external;\\n}\\n\\n/**\\n * @title VotingContract\\n * @dev Handles submissions and gasless voting for contests\\n */\\ncontract VotingContract is Ownable, ReentrancyGuard {\\n    \\n    struct Submission {\\n        uint256 id;\\n        uint256 contestId;\\n        address submitter;\\n        string metadataURI;      // IPFS hash for submission content\\n        uint256 voteCount;\\n        uint256 timestamp;\\n        bool exists;\\n    }\\n    \\n    // State variables\\n    IContestFactory public contestFactory;\\n    uint256 private _submissionIdCounter;\\n    \\n    // Mappings\\n    mapping(uint256 => Submission) public submissions;\\n    mapping(uint256 => uint256[]) public contestSubmissions; // contestId => submissionIds\\n    mapping(uint256 => mapping(address => uint256)) public userSubmission; // contestId => user => submissionId\\n    mapping(uint256 => mapping(address => bool)) public hasVoted; // submissionId => voter => bool\\n    mapping(uint256 => address[]) public submissionVoters; // submissionId => voters\\n    \\n    // Events\\n    event SubmissionCreated(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed submitter,\\n        string metadataURI\\n    );\\n    \\n    event VoteCast(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    event VoteRemoved(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    constructor(address _contestFactory) Ownable(msg.sender) {\\n        contestFactory = IContestFactory(_contestFactory);\\n    }\\n    \\n    /**\\n     * @dev Submit an entry to a contest\\n     */\\n    function submitEntry(\\n        uint256 _contestId,\\n        string memory _metadataURI\\n    ) external nonReentrant returns (uint256) {\\n        // Check if user already submitted to this contest\\n        require(userSubmission[_contestId][msg.sender] == 0, \\\"Already submitted to this contest\\\");\\n        \\n        uint256 submissionId = _submissionIdCounter++;\\n        \\n        submissions[submissionId] = Submission({\\n            id: submissionId,\\n            contestId: _contestId,\\n            submitter: msg.sender,\\n            metadataURI: _metadataURI,\\n            voteCount: 0,\\n            timestamp: block.timestamp,\\n            exists: true\\n        });\\n        \\n        contestSubmissions[_contestId].push(submissionId);\\n        userSubmission[_contestId][msg.sender] = submissionId;\\n        \\n        // Notify ContestFactory\\n        contestFactory.incrementSubmissionCount(_contestId);\\n        \\n        emit SubmissionCreated(submissionId, _contestId, msg.sender, _metadataURI);\\n        \\n        return submissionId;\\n    }\\n    \\n    /**\\n     * @dev Cast a vote for a submission (gasless via Biconomy)\\n     */\\n    function vote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        \\n        // Check voting is active\\n        require(contestFactory.isVotingActive(contestId), \\\"Voting not active\\\");\\n        \\n        // Check user hasn't voted for this submission\\n        require(!hasVoted[_submissionId][msg.sender], \\\"Already voted\\\");\\n        \\n        // Check user isn't voting for their own submission\\n        require(submission.submitter != msg.sender, \\\"Cannot vote for own submission\\\");\\n        \\n        // Cast vote\\n        hasVoted[_submissionId][msg.sender] = true;\\n        submission.voteCount++;\\n        submissionVoters[_submissionId].push(msg.sender);\\n        \\n        // Notify ContestFactory\\n        contestFactory.incrementVoteCount(contestId);\\n        \\n        emit VoteCast(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Remove a vote (allow users to change their vote)\\n     */\\n    function removeVote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        require(hasVoted[_submissionId][msg.sender], \\\"Haven't voted yet\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        require(contestFactory.isVotingActive(contestId), \\\"Voting not active\\\");\\n        \\n        // Remove vote\\n        hasVoted[_submissionId][msg.sender] = false;\\n        submission.voteCount--;\\n        \\n        // Remove from voters array (gas intensive, but keeps data clean)\\n        address[] storage voters = submissionVoters[_submissionId];\\n        for (uint256 i = 0; i < voters.length; i++) {\\n            if (voters[i] == msg.sender) {\\n                voters[i] = voters[voters.length - 1];\\n                voters.pop();\\n                break;\\n            }\\n        }\\n        \\n        emit VoteRemoved(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Get submission details\\n     */\\n    function getSubmission(uint256 _submissionId) external view returns (Submission memory) {\\n        return submissions[_submissionId];\\n    }\\n    \\n    /**\\n     * @dev Get all submissions for a contest\\n     */\\n    function getContestSubmissions(uint256 _contestId) external view returns (uint256[] memory) {\\n        return contestSubmissions[_contestId];\\n    }\\n    \\n    /**\\n     * @dev Get submission with vote details\\n     */\\n    function getSubmissionWithVotes(uint256 _submissionId) \\n        external \\n        view \\n        returns (\\n            Submission memory submission,\\n            address[] memory voters\\n        ) \\n    {\\n        return (submissions[_submissionId], submissionVoters[_submissionId]);\\n    }\\n    \\n    /**\\n     * @dev Get top submissions for a contest (sorted by votes)\\n     */\\n    function getTopSubmissions(uint256 _contestId, uint256 _limit) \\n        external \\n        view \\n        returns (Submission[] memory) \\n    {\\n        uint256[] memory submissionIds = contestSubmissions[_contestId];\\n        uint256 length = submissionIds.length;\\n        \\n        if (length == 0) {\\n            return new Submission[](0);\\n        }\\n        \\n        // Create array of submissions\\n        Submission[] memory allSubmissions = new Submission[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            allSubmissions[i] = submissions[submissionIds[i]];\\n        }\\n        \\n        // Simple bubble sort (works for small arrays)\\n        for (uint256 i = 0; i < length; i++) {\\n            for (uint256 j = i + 1; j < length; j++) {\\n                if (allSubmissions[j].voteCount > allSubmissions[i].voteCount) {\\n                    Submission memory temp = allSubmissions[i];\\n                    allSubmissions[i] = allSubmissions[j];\\n                    allSubmissions[j] = temp;\\n                }\\n            }\\n        }\\n        \\n        // Return top N submissions\\n        uint256 resultLength = _limit < length ? _limit : length;\\n        Submission[] memory topSubmissions = new Submission[](resultLength);\\n        for (uint256 i = 0; i < resultLength; i++) {\\n            topSubmissions[i] = allSubmissions[i];\\n        }\\n        \\n        return topSubmissions;\\n    }\\n    \\n    /**\\n     * @dev Check if user has voted for a submission\\n     */\\n    function hasUserVoted(uint256 _submissionId, address _user) external view returns (bool) {\\n        return hasVoted[_submissionId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get user's submission for a contest\\n     */\\n    function getUserSubmission(uint256 _contestId, address _user) external view returns (uint256) {\\n        return userSubmission[_contestId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get total submissions count\\n     */\\n    function getTotalSubmissions() external view returns (uint256) {\\n        return _submissionIdCounter;\\n    }\\n    \\n    /**\\n     * @dev Update ContestFactory address (owner only)\\n     */\\n    function updateContestFactory(address _newFactory) external onlyOwner {\\n        require(_newFactory != address(0), \\\"Invalid address\\\");\\n        contestFactory = IContestFactory(_newFactory);\\n    }\\n}\\n\",\"keccak256\":\"0x4f60381b4a5249d303e7d99242a805a77966147732ddaf2016a3f92b5179478c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/VotingContract.sol:VotingContract","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":188,"contract":"contracts/VotingContract.sol:VotingContract","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":878,"contract":"contracts/VotingContract.sol:VotingContract","label":"contestFactory","offset":0,"slot":"2","type":"t_contract(IContestFactory)855"},{"astId":880,"contract":"contracts/VotingContract.sol:VotingContract","label":"_submissionIdCounter","offset":0,"slot":"3","type":"t_uint256"},{"astId":885,"contract":"contracts/VotingContract.sol:VotingContract","label":"submissions","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(Submission)875_storage)"},{"astId":890,"contract":"contracts/VotingContract.sol:VotingContract","label":"contestSubmissions","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"},{"astId":896,"contract":"contracts/VotingContract.sol:VotingContract","label":"userSubmission","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":902,"contract":"contracts/VotingContract.sol:VotingContract","label":"hasVoted","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":907,"contract":"contracts/VotingContract.sol:VotingContract","label":"submissionVoters","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IContestFactory)855":{"encoding":"inplace","label":"contract IContestFactory","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Submission)875_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VotingContract.Submission)","numberOfBytes":"32","value":"t_struct(Submission)875_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Submission)875_storage":{"encoding":"inplace","label":"struct VotingContract.Submission","members":[{"astId":862,"contract":"contracts/VotingContract.sol:VotingContract","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":864,"contract":"contracts/VotingContract.sol:VotingContract","label":"contestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":866,"contract":"contracts/VotingContract.sol:VotingContract","label":"submitter","offset":0,"slot":"2","type":"t_address"},{"astId":868,"contract":"contracts/VotingContract.sol:VotingContract","label":"metadataURI","offset":0,"slot":"3","type":"t_string_storage"},{"astId":870,"contract":"contracts/VotingContract.sol:VotingContract","label":"voteCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":872,"contract":"contracts/VotingContract.sol:VotingContract","label":"timestamp","offset":0,"slot":"5","type":"t_uint256"},{"astId":874,"contract":"contracts/VotingContract.sol:VotingContract","label":"exists","offset":0,"slot":"6","type":"t_bool"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}