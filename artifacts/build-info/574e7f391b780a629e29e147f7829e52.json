{"id":"574e7f391b780a629e29e147f7829e52","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/SimpleVoting.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title SimpleVoting\n * @dev Simple voting contract - no contest factory bullshit\n */\ncontract SimpleVoting is Ownable, ReentrancyGuard {\n    \n    struct Submission {\n        uint256 id;\n        uint256 contestId;\n        address submitter;\n        string metadataURI;\n        uint256 voteCount;\n        uint256 timestamp;\n        bool exists;\n    }\n    \n    // State variables\n    uint256 private _submissionIdCounter = 1; // Start at 1 to avoid 0 (which means no submission)\n    \n    // Mappings\n    mapping(uint256 => Submission) public submissions;\n    mapping(uint256 => uint256[]) public contestSubmissions; // contestId => submissionIds\n    mapping(uint256 => mapping(address => uint256)) public userSubmission; // contestId => user => submissionId\n    mapping(uint256 => mapping(address => bool)) public hasVoted; // submissionId => voter => bool\n    mapping(uint256 => address[]) public submissionVoters; // submissionId => voters\n    mapping(uint256 => mapping(address => uint256)) public userVote; // contestId => user => submissionId voted for\n    \n    // Events\n    event SubmissionCreated(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed submitter,\n        string metadataURI\n    );\n    \n    event VoteCast(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed voter\n    );\n    \n    event VoteRemoved(\n        uint256 indexed submissionId,\n        uint256 indexed contestId,\n        address indexed voter\n    );\n    \n    constructor() Ownable(msg.sender) {}\n    \n    /**\n     * @dev Submit an entry to a contest\n     */\n    function submitEntry(\n        uint256 _contestId,\n        string memory _metadataURI\n    ) external nonReentrant returns (uint256) {\n        require(userSubmission[_contestId][msg.sender] == 0, \"Already submitted to this contest\");\n        \n        uint256 submissionId = _submissionIdCounter++;\n        \n        submissions[submissionId] = Submission({\n            id: submissionId,\n            contestId: _contestId,\n            submitter: msg.sender,\n            metadataURI: _metadataURI,\n            voteCount: 0,\n            timestamp: block.timestamp,\n            exists: true\n        });\n        \n        contestSubmissions[_contestId].push(submissionId);\n        userSubmission[_contestId][msg.sender] = submissionId;\n        \n        emit SubmissionCreated(submissionId, _contestId, msg.sender, _metadataURI);\n        \n        return submissionId;\n    }\n    \n    /**\n     * @dev Cast a vote for a submission\n     */\n    function vote(uint256 _submissionId) external nonReentrant {\n        Submission storage submission = submissions[_submissionId];\n        require(submission.exists, \"Submission does not exist\");\n        require(submission.submitter != msg.sender, \"Cannot vote for own submission\");\n        \n        uint256 contestId = submission.contestId;\n        uint256 existingVote = userVote[contestId][msg.sender];\n        \n        // If user already voted in this contest, remove old vote first\n        if (existingVote != 0 && hasVoted[existingVote][msg.sender]) {\n            Submission storage oldSubmission = submissions[existingVote];\n            hasVoted[existingVote][msg.sender] = false;\n            oldSubmission.voteCount--;\n            \n            // Remove from voters array\n            address[] storage oldVoters = submissionVoters[existingVote];\n            for (uint256 i = 0; i < oldVoters.length; i++) {\n                if (oldVoters[i] == msg.sender) {\n                    oldVoters[i] = oldVoters[oldVoters.length - 1];\n                    oldVoters.pop();\n                    break;\n                }\n            }\n            \n            emit VoteRemoved(existingVote, contestId, msg.sender);\n        }\n        \n        // Cast new vote\n        hasVoted[_submissionId][msg.sender] = true;\n        submission.voteCount++;\n        submissionVoters[_submissionId].push(msg.sender);\n        userVote[contestId][msg.sender] = _submissionId;\n        \n        emit VoteCast(_submissionId, contestId, msg.sender);\n    }\n    \n    /**\n     * @dev Remove a vote\n     */\n    function removeVote(uint256 _submissionId) external nonReentrant {\n        Submission storage submission = submissions[_submissionId];\n        require(submission.exists, \"Submission does not exist\");\n        require(hasVoted[_submissionId][msg.sender], \"Haven't voted yet\");\n        \n        uint256 contestId = submission.contestId;\n        \n        hasVoted[_submissionId][msg.sender] = false;\n        submission.voteCount--;\n        userVote[contestId][msg.sender] = 0;\n        \n        address[] storage voters = submissionVoters[_submissionId];\n        for (uint256 i = 0; i < voters.length; i++) {\n            if (voters[i] == msg.sender) {\n                voters[i] = voters[voters.length - 1];\n                voters.pop();\n                break;\n            }\n        }\n        \n        emit VoteRemoved(_submissionId, contestId, msg.sender);\n    }\n    \n    /**\n     * @dev Get submission details\n     */\n    function getSubmission(uint256 _submissionId) external view returns (Submission memory) {\n        return submissions[_submissionId];\n    }\n    \n    /**\n     * @dev Get all submissions for a contest\n     */\n    function getContestSubmissions(uint256 _contestId) external view returns (uint256[] memory) {\n        return contestSubmissions[_contestId];\n    }\n    \n    /**\n     * @dev Get user's submission for a contest\n     */\n    function getUserSubmission(uint256 _contestId, address _user) external view returns (uint256) {\n        return userSubmission[_contestId][_user];\n    }\n    \n    /**\n     * @dev Get total submissions count\n     */\n    function getTotalSubmissions() external view returns (uint256) {\n        return _submissionIdCounter;\n    }\n    \n    /**\n     * @dev Check if user has voted for a submission\n     */\n    function hasUserVoted(uint256 _submissionId, address _user) external view returns (bool) {\n        return hasVoted[_submissionId][_user];\n    }\n    \n    /**\n     * @dev Get which submission a user voted for in a contest (0 if no vote)\n     */\n    function getUserVoteInContest(uint256 _contestId, address _user) external view returns (uint256) {\n        return userVote[_contestId][_user];\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"135:894:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":246,"linearizedBaseContracts":[246],"name":"ReentrancyGuard","nameLocation":"1048:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":183,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:2","nodeType":"VariableDeclaration","scope":246,"src":"1818:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":186,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1864:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":188,"mutability":"mutable","name":"_status","nameLocation":"1923:7:2","nodeType":"VariableDeclaration","scope":246,"src":"1907:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1937:52:2","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":191,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:2","nodeType":"ErrorDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"2028:2:2"},"src":"1994:37:2"},{"body":{"id":198,"nodeType":"Block","src":"2051:38:2","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2061:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"2071:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":197,"nodeType":"ExpressionStatement","src":"2061:21:2"}]},"id":199,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2048:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"2051:0:2"},"scope":246,"src":"2037:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"2490:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":202,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2500:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2500:21:2"},{"id":205,"nodeType":"PlaceholderStatement","src":"2531:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":206,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2542:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2542:20:2"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"2095:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":210,"name":"nonReentrant","nameLocation":"2475:12:2","nodeType":"ModifierDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"2487:2:2"},"src":"2466:103:2","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2614:268:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":213,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":214,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"IfStatement","src":"2698:86:2","trueBody":{"id":219,"nodeType":"Block","src":"2722:62:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":216,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2743:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":218,"nodeType":"RevertStatement","src":"2736:37:2"}]}},{"expression":{"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":221,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"2858:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":222,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":224,"nodeType":"ExpressionStatement","src":"2858:17:2"}]},"id":226,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:2","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"2603:2:2"},"returnParameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2614:0:2"},"scope":246,"src":"2575:307:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"2926:170:2","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3068:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"3078:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":232,"nodeType":"ExpressionStatement","src":"3068:21:2"}]},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:2","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"2915:2:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2926:0:2"},"scope":246,"src":"2888:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":244,"nodeType":"Block","src":"3339:42:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"3356:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":241,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3367:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":239,"id":243,"nodeType":"Return","src":"3349:25:2"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3102:168:2","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:2","nodeType":"FunctionDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3307:2:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"3333:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":237,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:2"},"scope":246,"src":"3275:106:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":247,"src":"1030:2353:2","usedErrors":[191],"usedEvents":[]}],"src":"109:3275:2"},"id":2},"contracts/SimpleVoting.sol":{"ast":{"absolutePath":"contracts/SimpleVoting.sol","exportedSymbols":{"Context":[177],"Ownable":[147],"ReentrancyGuard":[246],"SimpleVoting":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":786,"sourceUnit":148,"src":"58:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":786,"sourceUnit":247,"src":"111:59:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":252,"name":"Ownable","nameLocations":["289:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"289:7:3"},"id":253,"nodeType":"InheritanceSpecifier","src":"289:7:3"},{"baseName":{"id":254,"name":"ReentrancyGuard","nameLocations":["298:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":246,"src":"298:15:3"},"id":255,"nodeType":"InheritanceSpecifier","src":"298:15:3"}],"canonicalName":"SimpleVoting","contractDependencies":[],"contractKind":"contract","documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"172:91:3","text":" @title SimpleVoting\n @dev Simple voting contract - no contest factory bullshit"},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785,246,147,177],"name":"SimpleVoting","nameLocation":"273:12:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SimpleVoting.Submission","id":270,"members":[{"constant":false,"id":257,"mutability":"mutable","name":"id","nameLocation":"361:2:3","nodeType":"VariableDeclaration","scope":270,"src":"353:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"353:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"contestId","nameLocation":"381:9:3","nodeType":"VariableDeclaration","scope":270,"src":"373:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"submitter","nameLocation":"408:9:3","nodeType":"VariableDeclaration","scope":270,"src":"400:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"metadataURI","nameLocation":"434:11:3","nodeType":"VariableDeclaration","scope":270,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":262,"name":"string","nodeType":"ElementaryTypeName","src":"427:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"voteCount","nameLocation":"463:9:3","nodeType":"VariableDeclaration","scope":270,"src":"455:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"455:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"timestamp","nameLocation":"490:9:3","nodeType":"VariableDeclaration","scope":270,"src":"482:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"exists","nameLocation":"514:6:3","nodeType":"VariableDeclaration","scope":270,"src":"509:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":268,"name":"bool","nodeType":"ElementaryTypeName","src":"509:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Submission","nameLocation":"332:10:3","nodeType":"StructDefinition","scope":785,"src":"325:202:3","visibility":"public"},{"constant":false,"id":273,"mutability":"mutable","name":"_submissionIdCounter","nameLocation":"576:20:3","nodeType":"VariableDeclaration","scope":785,"src":"560:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"ad73349e","id":278,"mutability":"mutable","name":"submissions","nameLocation":"718:11:3","nodeType":"VariableDeclaration","scope":785,"src":"680:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission)"},"typeName":{"id":277,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"680:30:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"Submission","nameLocations":["699:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"699:10:3"},"referencedDeclaration":270,"src":"699:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"}}},"visibility":"public"},{"constant":false,"functionSelector":"fadfa4dc","id":283,"mutability":"mutable","name":"contestSubmissions","nameLocation":"772:18:3","nodeType":"VariableDeclaration","scope":785,"src":"735:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":282,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"735:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"754:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":281,"nodeType":"ArrayTypeName","src":"754:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"d17bd67c","id":289,"mutability":"mutable","name":"userSubmission","nameLocation":"881:14:3","nodeType":"VariableDeclaration","scope":785,"src":"826:69:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":288,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"826:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":287,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"845:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"43859632","id":295,"mutability":"mutable","name":"hasVoted","nameLocation":"990:8:3","nodeType":"VariableDeclaration","scope":785,"src":"938:60:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":294,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":290,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"938:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":293,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"957:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":292,"name":"bool","nodeType":"ElementaryTypeName","src":"976:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"6c811686","id":300,"mutability":"mutable","name":"submissionVoters","nameLocation":"1074:16:3","nodeType":"VariableDeclaration","scope":785,"src":"1037:53:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":299,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1045:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1037:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"1056:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":298,"nodeType":"ArrayTypeName","src":"1056:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"dc37596d","id":306,"mutability":"mutable","name":"userVote","nameLocation":"1177:8:3","nodeType":"VariableDeclaration","scope":785,"src":"1122:63:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1122:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":304,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1149:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1141:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1160:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c","id":316,"name":"SubmissionCreated","nameLocation":"1263:17:3","nodeType":"EventDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1306:12:3","nodeType":"VariableDeclaration","scope":316,"src":"1290:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1344:9:3","nodeType":"VariableDeclaration","scope":316,"src":"1328:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1328:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1379:9:3","nodeType":"VariableDeclaration","scope":316,"src":"1363:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"metadataURI","nameLocation":"1405:11:3","nodeType":"VariableDeclaration","scope":316,"src":"1398:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":313,"name":"string","nodeType":"ElementaryTypeName","src":"1398:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1280:142:3"},"src":"1257:166:3"},{"anonymous":false,"eventSelector":"7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc","id":324,"name":"VoteCast","nameLocation":"1439:8:3","nodeType":"EventDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1473:12:3","nodeType":"VariableDeclaration","scope":324,"src":"1457:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1511:9:3","nodeType":"VariableDeclaration","scope":324,"src":"1495:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1546:5:3","nodeType":"VariableDeclaration","scope":324,"src":"1530:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1530:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1447:110:3"},"src":"1433:125:3"},{"anonymous":false,"eventSelector":"c6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586","id":332,"name":"VoteRemoved","nameLocation":"1574:11:3","nodeType":"EventDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"submissionId","nameLocation":"1611:12:3","nodeType":"VariableDeclaration","scope":332,"src":"1595:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":true,"mutability":"mutable","name":"contestId","nameLocation":"1649:9:3","nodeType":"VariableDeclaration","scope":332,"src":"1633:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"1684:5:3","nodeType":"VariableDeclaration","scope":332,"src":"1668:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:110:3"},"src":"1568:128:3"},{"body":{"id":339,"nodeType":"Block","src":"1740:2:3","statements":[]},"id":340,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1728:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1732:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1728:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":337,"kind":"baseConstructorSpecifier","modifierName":{"id":334,"name":"Ownable","nameLocations":["1720:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1720:7:3"},"nodeType":"ModifierInvocation","src":"1720:19:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"1717:2:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1740:0:3"},"scope":785,"src":"1706:36:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":411,"nodeType":"Block","src":"1940:732:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":353,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1958:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":355,"indexExpression":{"id":354,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1973:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":358,"indexExpression":{"expression":{"id":356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1985:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1989:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1985:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1958:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2000:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1958:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479207375626d697474656420746f207468697320636f6e74657374","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_97c5f25263ccb454cd3f9802b440f97f3f97a0f7533504dca3cbd826381f7efb","typeString":"literal_string \"Already submitted to this contest\""},"value":"Already submitted to this contest"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97c5f25263ccb454cd3f9802b440f97f3f97a0f7533504dca3cbd826381f7efb","typeString":"literal_string \"Already submitted to this contest\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1950:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1950:89:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"1950:89:3"},{"assignments":[365],"declarations":[{"constant":false,"id":365,"mutability":"mutable","name":"submissionId","nameLocation":"2066:12:3","nodeType":"VariableDeclaration","scope":411,"src":"2058:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":368,"initialValue":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2081:22:3","subExpression":{"id":366,"name":"_submissionIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2081:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2058:45:3"},{"expression":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":369,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2122:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission storage ref)"}},"id":371,"indexExpression":{"id":370,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2134:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2122:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":373,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2179:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":374,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2216:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2251:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2255:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2251:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2288:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2325:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":379,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2351:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2351:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2388:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":372,"name":"Submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"2150:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Submission_$270_storage_ptr_$","typeString":"type(struct SimpleVoting.Submission storage pointer)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2175:2:3","2205:9:3","2240:9:3","2275:11:3","2314:9:3","2340:9:3","2380:6:3"],"names":["id","contestId","submitter","metadataURI","voteCount","timestamp","exists"],"nodeType":"FunctionCall","src":"2150:253:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_memory_ptr","typeString":"struct SimpleVoting.Submission memory"}},"src":"2122:281:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"id":384,"nodeType":"ExpressionStatement","src":"2122:281:3"},{"expression":{"arguments":[{"id":389,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2458:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":385,"name":"contestSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2422:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":387,"indexExpression":{"id":386,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2441:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2422:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2453:4:3","memberName":"push","nodeType":"MemberAccess","src":"2422:35:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"2422:49:3"},{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":392,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"2481:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":396,"indexExpression":{"id":393,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2496:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2481:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":397,"indexExpression":{"expression":{"id":394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2508:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2512:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2508:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2481:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":398,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2522:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2481:53:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"2481:53:3"},{"eventCall":{"arguments":[{"id":402,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2576:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":403,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2590:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2602:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2602:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2614:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":401,"name":"SubmissionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"2558:17:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,address,string memory)"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:69:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"EmitStatement","src":"2553:74:3"},{"expression":{"id":409,"name":"submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2653:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":351,"id":410,"nodeType":"Return","src":"2646:19:3"}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"1752:52:3","text":" @dev Submit an entry to a contest"},"functionSelector":"56ce45b6","id":412,"implemented":true,"kind":"function","modifiers":[{"id":348,"kind":"modifierInvocation","modifierName":{"id":347,"name":"nonReentrant","nameLocations":["1909:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"1909:12:3"},"nodeType":"ModifierInvocation","src":"1909:12:3"}],"name":"submitEntry","nameLocation":"1818:11:3","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"_contestId","nameLocation":"1847:10:3","nodeType":"VariableDeclaration","scope":412,"src":"1839:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"_metadataURI","nameLocation":"1881:12:3","nodeType":"VariableDeclaration","scope":412,"src":"1867:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":344,"name":"string","nodeType":"ElementaryTypeName","src":"1867:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1829:70:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"1931:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1931:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1930:9:3"},"scope":785,"src":"1809:863:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":581,"nodeType":"Block","src":"2798:1466:3","statements":[{"assignments":[422],"declarations":[{"constant":false,"id":422,"mutability":"mutable","name":"submission","nameLocation":"2827:10:3","nodeType":"VariableDeclaration","scope":581,"src":"2808:29:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"},"typeName":{"id":421,"nodeType":"UserDefinedTypeName","pathNode":{"id":420,"name":"Submission","nameLocations":["2808:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"2808:10:3"},"referencedDeclaration":270,"src":"2808:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"}},"visibility":"internal"}],"id":426,"initialValue":{"baseExpression":{"id":423,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2840:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission storage ref)"}},"id":425,"indexExpression":{"id":424,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2852:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2840:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2808:58:3"},{"expression":{"arguments":[{"expression":{"id":428,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2884:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2895:6:3","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":269,"src":"2884:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5375626d697373696f6e20646f6573206e6f74206578697374","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2903:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""},"value":"Submission does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""}],"id":427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2876:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2876:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":432,"nodeType":"ExpressionStatement","src":"2876:55:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":434,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2949:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2960:9:3","memberName":"submitter","nodeType":"MemberAccess","referencedDeclaration":261,"src":"2949:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2973:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2977:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2973:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2949:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2985:32:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d452425a1f081571439a5138f501d33fbe60ebf7e96bddc5d7878eabc033566","typeString":"literal_string \"Cannot vote for own submission\""},"value":"Cannot vote for own submission"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d452425a1f081571439a5138f501d33fbe60ebf7e96bddc5d7878eabc033566","typeString":"literal_string \"Cannot vote for own submission\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2941:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:77:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"2941:77:3"},{"assignments":[443],"declarations":[{"constant":false,"id":443,"mutability":"mutable","name":"contestId","nameLocation":"3045:9:3","nodeType":"VariableDeclaration","scope":581,"src":"3037:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3037:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"expression":{"id":444,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3057:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3068:9:3","memberName":"contestId","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3057:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3037:40:3"},{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"existingVote","nameLocation":"3095:12:3","nodeType":"VariableDeclaration","scope":581,"src":"3087:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":455,"initialValue":{"baseExpression":{"baseExpression":{"id":449,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3110:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":451,"indexExpression":{"id":450,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3119:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3110:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":454,"indexExpression":{"expression":{"id":452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3130:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3134:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3130:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3110:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3087:54:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3236:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3252:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3236:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"baseExpression":{"id":459,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3257:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":461,"indexExpression":{"id":460,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3266:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3257:22:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":464,"indexExpression":{"expression":{"id":462,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3280:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3284:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3280:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3257:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3236:55:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"IfStatement","src":"3232:723:3","trueBody":{"id":541,"nodeType":"Block","src":"3293:662:3","statements":[{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"oldSubmission","nameLocation":"3326:13:3","nodeType":"VariableDeclaration","scope":541,"src":"3307:32:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"},"typeName":{"id":467,"nodeType":"UserDefinedTypeName","pathNode":{"id":466,"name":"Submission","nameLocations":["3307:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"3307:10:3"},"referencedDeclaration":270,"src":"3307:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"}},"visibility":"internal"}],"id":472,"initialValue":{"baseExpression":{"id":469,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"3342:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission storage ref)"}},"id":471,"indexExpression":{"id":470,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3354:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3342:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3307:60:3"},{"expression":{"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":473,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3381:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":477,"indexExpression":{"id":474,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3390:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3381:22:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":478,"indexExpression":{"expression":{"id":475,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3404:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3408:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3404:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3381:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3418:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3381:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"ExpressionStatement","src":"3381:42:3"},{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"3437:25:3","subExpression":{"expression":{"id":482,"name":"oldSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"3437:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3451:9:3","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":265,"src":"3437:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":486,"nodeType":"ExpressionStatement","src":"3437:25:3"},{"assignments":[491],"declarations":[{"constant":false,"id":491,"mutability":"mutable","name":"oldVoters","nameLocation":"3547:9:3","nodeType":"VariableDeclaration","scope":541,"src":"3529:27:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3529:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":490,"nodeType":"ArrayTypeName","src":"3529:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":495,"initialValue":{"baseExpression":{"id":492,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"3559:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":494,"indexExpression":{"id":493,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3576:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3559:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3529:60:3"},{"body":{"id":532,"nodeType":"Block","src":"3650:215:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":507,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3672:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":509,"indexExpression":{"id":508,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3682:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3672:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3688:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3692:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3688:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3672:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":531,"nodeType":"IfStatement","src":"3668:183:3","trueBody":{"id":530,"nodeType":"Block","src":"3700:151:3","statements":[{"expression":{"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":513,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3722:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":515,"indexExpression":{"id":514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3732:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3722:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":516,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3737:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":521,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":517,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3747:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3757:6:3","memberName":"length","nodeType":"MemberAccess","src":"3747:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3766:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3747:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3737:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3722:46:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":523,"nodeType":"ExpressionStatement","src":"3722:46:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":524,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3790:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3800:3:3","memberName":"pop","nodeType":"MemberAccess","src":"3790:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3790:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":528,"nodeType":"ExpressionStatement","src":"3790:15:3"},{"id":529,"nodeType":"Break","src":"3827:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3623:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":501,"name":"oldVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"3627:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3637:6:3","memberName":"length","nodeType":"MemberAccess","src":"3627:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3623:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":533,"initializationExpression":{"assignments":[497],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"i","nameLocation":"3616:1:3","nodeType":"VariableDeclaration","scope":533,"src":"3608:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3608:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":499,"initialValue":{"hexValue":"30","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3620:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3608:13:3"},"loopExpression":{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3645:3:3","subExpression":{"id":504,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3645:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":506,"nodeType":"ExpressionStatement","src":"3645:3:3"},"nodeType":"ForStatement","src":"3603:262:3"},{"eventCall":{"arguments":[{"id":535,"name":"existingVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3908:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":536,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"3922:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3933:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3937:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3933:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":534,"name":"VoteRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3896:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"EmitStatement","src":"3891:53:3"}]}},{"expression":{"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":543,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"3998:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":547,"indexExpression":{"id":544,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4007:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3998:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":548,"indexExpression":{"expression":{"id":545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4022:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4026:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4022:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3998:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4036:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3998:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"ExpressionStatement","src":"3998:42:3"},{"expression":{"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4050:22:3","subExpression":{"expression":{"id":552,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"4050:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4061:9:3","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4050:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":556,"nodeType":"ExpressionStatement","src":"4050:22:3"},{"expression":{"arguments":[{"expression":{"id":561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4119:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4119:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":557,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4082:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":559,"indexExpression":{"id":558,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4099:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4082:31:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4114:4:3","memberName":"push","nodeType":"MemberAccess","src":"4082:36:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4082:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"4082:48:3"},{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":565,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4140:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":569,"indexExpression":{"id":566,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4149:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4140:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":570,"indexExpression":{"expression":{"id":567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4160:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4164:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4160:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4140:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":571,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4174:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4140:47:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"4140:47:3"},{"eventCall":{"arguments":[{"id":575,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"4220:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":576,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4235:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4246:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4250:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4246:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":574,"name":"VoteCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4211:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":580,"nodeType":"EmitStatement","src":"4206:51:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2682:52:3","text":" @dev Cast a vote for a submission"},"functionSelector":"0121b93f","id":582,"implemented":true,"kind":"function","modifiers":[{"id":418,"kind":"modifierInvocation","modifierName":{"id":417,"name":"nonReentrant","nameLocations":["2785:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"2785:12:3"},"nodeType":"ModifierInvocation","src":"2785:12:3"}],"name":"vote","nameLocation":"2748:4:3","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"_submissionId","nameLocation":"2761:13:3","nodeType":"VariableDeclaration","scope":582,"src":"2753:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2752:23:3"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"2798:0:3"},"scope":785,"src":"2739:1525:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":695,"nodeType":"Block","src":"4381:792:3","statements":[{"assignments":[592],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"submission","nameLocation":"4410:10:3","nodeType":"VariableDeclaration","scope":695,"src":"4391:29:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"},"typeName":{"id":591,"nodeType":"UserDefinedTypeName","pathNode":{"id":590,"name":"Submission","nameLocations":["4391:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"4391:10:3"},"referencedDeclaration":270,"src":"4391:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"}},"visibility":"internal"}],"id":596,"initialValue":{"baseExpression":{"id":593,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4423:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission storage ref)"}},"id":595,"indexExpression":{"id":594,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4435:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4423:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4391:58:3"},{"expression":{"arguments":[{"expression":{"id":598,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4467:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:6:3","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":269,"src":"4467:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5375626d697373696f6e20646f6573206e6f74206578697374","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4486:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""},"value":"Submission does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a822c41089919a399c2fe26db143033870d5eb2b473901e2b9f50401fd900f9e","typeString":"literal_string \"Submission does not exist\""}],"id":597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4459:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"4459:55:3"},{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":604,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4532:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":606,"indexExpression":{"id":605,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4541:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4532:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":609,"indexExpression":{"expression":{"id":607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4556:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4560:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4556:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4532:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"486176656e277420766f74656420796574","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4569:19:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2a5b2040e0ec5e16740e8435cb6b0f29b3ac53be27e7139006577f12e65c46d","typeString":"literal_string \"Haven't voted yet\""},"value":"Haven't voted yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2a5b2040e0ec5e16740e8435cb6b0f29b3ac53be27e7139006577f12e65c46d","typeString":"literal_string \"Haven't voted yet\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4524:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"4524:65:3"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"contestId","nameLocation":"4616:9:3","nodeType":"VariableDeclaration","scope":695,"src":"4608:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"4608:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":617,"initialValue":{"expression":{"id":615,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4628:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4639:9:3","memberName":"contestId","nodeType":"MemberAccess","referencedDeclaration":259,"src":"4628:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4608:40:3"},{"expression":{"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4667:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":622,"indexExpression":{"id":619,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4676:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4667:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":623,"indexExpression":{"expression":{"id":620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4691:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4695:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4691:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4667:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4705:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4667:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":626,"nodeType":"ExpressionStatement","src":"4667:43:3"},{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"4720:22:3","subExpression":{"expression":{"id":627,"name":"submission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4720:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission storage pointer"}},"id":629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4731:9:3","memberName":"voteCount","nodeType":"MemberAccess","referencedDeclaration":265,"src":"4720:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":631,"nodeType":"ExpressionStatement","src":"4720:22:3"},{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":632,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4752:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":636,"indexExpression":{"id":633,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4761:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4752:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":637,"indexExpression":{"expression":{"id":634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4772:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4776:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4772:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4752:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4786:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4752:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"4752:35:3"},{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"voters","nameLocation":"4824:6:3","nodeType":"VariableDeclaration","scope":695,"src":"4806:24:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4806:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":644,"nodeType":"ArrayTypeName","src":"4806:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":649,"initialValue":{"baseExpression":{"id":646,"name":"submissionVoters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"4833:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":648,"indexExpression":{"id":647,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"4850:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4833:31:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4806:58:3"},{"body":{"id":686,"nodeType":"Block","src":"4918:176:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":661,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4936:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":663,"indexExpression":{"id":662,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4943:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4936:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4949:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4953:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4949:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4936:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":685,"nodeType":"IfStatement","src":"4932:152:3","trueBody":{"id":684,"nodeType":"Block","src":"4961:123:3","statements":[{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":667,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4979:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":669,"indexExpression":{"id":668,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4986:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4979:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":670,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4991:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":675,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":671,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4998:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5005:6:3","memberName":"length","nodeType":"MemberAccess","src":"4998:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4998:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4991:25:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4979:37:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":677,"nodeType":"ExpressionStatement","src":"4979:37:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":678,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5034:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5041:3:3","memberName":"pop","nodeType":"MemberAccess","src":"5034:10:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5034:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":682,"nodeType":"ExpressionStatement","src":"5034:12:3"},{"id":683,"nodeType":"Break","src":"5064:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4894:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":655,"name":"voters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4898:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4905:6:3","memberName":"length","nodeType":"MemberAccess","src":"4898:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4894:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":687,"initializationExpression":{"assignments":[651],"declarations":[{"constant":false,"id":651,"mutability":"mutable","name":"i","nameLocation":"4887:1:3","nodeType":"VariableDeclaration","scope":687,"src":"4879:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"4879:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":653,"initialValue":{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4891:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4879:13:3"},"loopExpression":{"expression":{"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4913:3:3","subExpression":{"id":658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4913:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ExpressionStatement","src":"4913:3:3"},"nodeType":"ForStatement","src":"4874:220:3"},{"eventCall":{"arguments":[{"id":689,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"5129:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":690,"name":"contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"5144:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5155:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5159:6:3","memberName":"sender","nodeType":"MemberAccess","src":"5155:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":688,"name":"VoteRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"5117:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"5112:54:3"}]},"documentation":{"id":583,"nodeType":"StructuredDocumentation","src":"4274:37:3","text":" @dev Remove a vote"},"functionSelector":"3f68fde4","id":696,"implemented":true,"kind":"function","modifiers":[{"id":588,"kind":"modifierInvocation","modifierName":{"id":587,"name":"nonReentrant","nameLocations":["4368:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":210,"src":"4368:12:3"},"nodeType":"ModifierInvocation","src":"4368:12:3"}],"name":"removeVote","nameLocation":"4325:10:3","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"_submissionId","nameLocation":"4344:13:3","nodeType":"VariableDeclaration","scope":696,"src":"4336:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"4336:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4335:23:3"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"4381:0:3"},"scope":785,"src":"4316:857:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":709,"nodeType":"Block","src":"5322:50:3","statements":[{"expression":{"baseExpression":{"id":705,"name":"submissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5339:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Submission_$270_storage_$","typeString":"mapping(uint256 => struct SimpleVoting.Submission storage ref)"}},"id":707,"indexExpression":{"id":706,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5351:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5339:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage","typeString":"struct SimpleVoting.Submission storage ref"}},"functionReturnParameters":704,"id":708,"nodeType":"Return","src":"5332:33:3"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"5183:46:3","text":" @dev Get submission details"},"functionSelector":"3e8686cc","id":710,"implemented":true,"kind":"function","modifiers":[],"name":"getSubmission","nameLocation":"5243:13:3","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"_submissionId","nameLocation":"5265:13:3","nodeType":"VariableDeclaration","scope":710,"src":"5257:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"5257:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5256:23:3"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"5303:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_memory_ptr","typeString":"struct SimpleVoting.Submission"},"typeName":{"id":702,"nodeType":"UserDefinedTypeName","pathNode":{"id":701,"name":"Submission","nameLocations":["5303:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"5303:10:3"},"referencedDeclaration":270,"src":"5303:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_Submission_$270_storage_ptr","typeString":"struct SimpleVoting.Submission"}},"visibility":"internal"}],"src":"5302:19:3"},"scope":785,"src":"5234:138:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"5536:54:3","statements":[{"expression":{"baseExpression":{"id":719,"name":"contestSubmissions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5553:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":721,"indexExpression":{"id":720,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5572:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5553:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":718,"id":722,"nodeType":"Return","src":"5546:37:3"}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"5382:57:3","text":" @dev Get all submissions for a contest"},"functionSelector":"4c406c01","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"getContestSubmissions","nameLocation":"5453:21:3","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"_contestId","nameLocation":"5483:10:3","nodeType":"VariableDeclaration","scope":724,"src":"5475:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5475:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5474:20:3"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"5518:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ArrayTypeName","src":"5518:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5517:18:3"},"scope":785,"src":"5444:146:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":740,"nodeType":"Block","src":"5758:57:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":734,"name":"userSubmission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"5775:14:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":736,"indexExpression":{"id":735,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5790:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5775:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":738,"indexExpression":{"id":737,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5802:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5775:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":733,"id":739,"nodeType":"Return","src":"5768:40:3"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"5600:59:3","text":" @dev Get user's submission for a contest"},"functionSelector":"3687f7bf","id":741,"implemented":true,"kind":"function","modifiers":[],"name":"getUserSubmission","nameLocation":"5673:17:3","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"_contestId","nameLocation":"5699:10:3","nodeType":"VariableDeclaration","scope":741,"src":"5691:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"5691:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"_user","nameLocation":"5719:5:3","nodeType":"VariableDeclaration","scope":741,"src":"5711:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"5711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5690:35:3"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":741,"src":"5749:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5748:9:3"},"scope":785,"src":"5664:151:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":749,"nodeType":"Block","src":"5944:44:3","statements":[{"expression":{"id":747,"name":"_submissionIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"5961:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":746,"id":748,"nodeType":"Return","src":"5954:27:3"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"5825:51:3","text":" @dev Get total submissions count"},"functionSelector":"54554d46","id":750,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalSubmissions","nameLocation":"5890:19:3","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"5909:2:3"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"5935:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5935:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5934:9:3"},"scope":785,"src":"5881:107:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":766,"nodeType":"Block","src":"6156:54:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":760,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"6173:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":762,"indexExpression":{"id":761,"name":"_submissionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"6182:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6173:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":764,"indexExpression":{"id":763,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6197:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6173:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":759,"id":765,"nodeType":"Return","src":"6166:37:3"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"5998:64:3","text":" @dev Check if user has voted for a submission"},"functionSelector":"dc296ae1","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"hasUserVoted","nameLocation":"6076:12:3","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"_submissionId","nameLocation":"6097:13:3","nodeType":"VariableDeclaration","scope":767,"src":"6089:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"6089:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"_user","nameLocation":"6120:5:3","nodeType":"VariableDeclaration","scope":767,"src":"6112:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6088:38:3"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"6150:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":757,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:3"},"scope":785,"src":"6067:143:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":783,"nodeType":"Block","src":"6411:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":777,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"6428:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":779,"indexExpression":{"id":778,"name":"_contestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"6437:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6428:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":781,"indexExpression":{"id":780,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6449:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6428:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":776,"id":782,"nodeType":"Return","src":"6421:34:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"6220:89:3","text":" @dev Get which submission a user voted for in a contest (0 if no vote)"},"functionSelector":"dfa63e6c","id":784,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVoteInContest","nameLocation":"6323:20:3","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"_contestId","nameLocation":"6352:10:3","nodeType":"VariableDeclaration","scope":784,"src":"6344:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"_user","nameLocation":"6372:5:3","nodeType":"VariableDeclaration","scope":784,"src":"6364:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"6364:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6343:35:3"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"6402:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6402:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6401:9:3"},"scope":785,"src":"6314:148:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":786,"src":"264:6200:3","usedErrors":[13,18,191],"usedEvents":[24,316,324,332]}],"src":"32:6433:3"},"id":3}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":188,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SimpleVoting.sol":{"SimpleVoting":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"},{"indexed":false,"internalType":"string","name":"metadataURI","type":"string"}],"name":"SubmissionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"VoteCast","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"submissionId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"contestId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"}],"name":"VoteRemoved","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"contestSubmissions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"}],"name":"getContestSubmissions","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"getSubmission","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct SimpleVoting.Submission","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSubmissions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserSubmission","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"getUserVoteInContest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"hasUserVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"removeVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"submissionVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"submissions","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"contestId","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_contestId","type":"uint256"},{"internalType":"string","name":"_metadataURI","type":"string"}],"name":"submitEntry","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userSubmission","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userVote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_submissionId","type":"uint256"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Simple voting contract - no contest factory bullshit","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"getContestSubmissions(uint256)":{"details":"Get all submissions for a contest"},"getSubmission(uint256)":{"details":"Get submission details"},"getTotalSubmissions()":{"details":"Get total submissions count"},"getUserSubmission(uint256,address)":{"details":"Get user's submission for a contest"},"getUserVoteInContest(uint256,address)":{"details":"Get which submission a user voted for in a contest (0 if no vote)"},"hasUserVoted(uint256,address)":{"details":"Check if user has voted for a submission"},"owner()":{"details":"Returns the address of the current owner."},"removeVote(uint256)":{"details":"Remove a vote"},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"submitEntry(uint256,string)":{"details":"Submit an entry to a contest"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vote(uint256)":{"details":"Cast a vote for a submission"}},"title":"SimpleVoting","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461008357331561006d5760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560016002556110e390816100898239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630121b93f14610b465780633687f7bf1461024b5780633e8686cc14610a345780633f68fde41461084857806343859632146101fe5780634c406c01146107a257806354554d461461078457806356ce45b6146103f25780636c811686146103a8578063715018a61461034f5780638da5cb5b14610326578063ad73349e14610293578063d17bd67c1461024b578063dc296ae1146101fe578063dc37596d146101b6578063dfa63e6c146101b6578063f2fde38b146101265763fadfa4dc146100e257600080fd5b34610121576100f036610e8f565b906000526004602052604060002080548210156101215760209161011391610ea5565b90546040519160031b1c8152f35b600080fd5b34610121576020366003190112610121576004356001600160a01b038181169182900361012157610155610fb3565b811561019d57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610121576040366003190112610121576101cf610dfb565b600435600052600860205260406000209060018060a01b03166000526020526020604060002054604051908152f35b3461012157604036600319011261012157610217610dfb565b600435600052600660205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461012157604036600319011261012157610264610dfb565b600435600052600560205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346101215760203660031901126101215760043560005260036020526040600020805460018201549160018060a01b036002820154166102d560038301610f0d565b9161031060048201549360ff60066005850154940154169360405197889788526020880152604087015260e0606087015260e0860190610e11565b92608085015260a0840152151560c08301520390f35b34610121576000366003190112610121576000546040516001600160a01b039091168152602090f35b3461012157600036600319011261012157610368610fb3565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610121576103b636610e8f565b90600052600760205260406000208054821015610121576020916103d991610ea5565b905460405160039290921b1c6001600160a01b03168152f35b346101215760403660031901126101215760243567ffffffffffffffff8111610121573660238201121561012157806004013567ffffffffffffffff8111610658576040519161044c601f8301601f191660200184610e6d565b818352366024838301011161012157816000926024602093018386013783010152610475610fee565b6004356000526005602052604060002033600052602052604060002054610735576002546104a281610fdf565b6002556040516104b181610e51565b8181526004356020820152336040820152826060820152600060808201524260a0820152600160c0820152816000526003602052604060002081518155602082015160018201556002810160018060a01b036040840151166bffffffffffffffffffffffff60a01b825416179055606082015180519067ffffffffffffffff8211610658576105436003840154610ed3565b601f81116106ee575b50602090601f831160011461067957918060c0949260069460009261066e575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015501910151151560ff801983541691161790556004356000526004602052604060002091825492600160401b84101561065857836105dc916001602096018155610ea5565b81549060031b9084821b91600019901b19161790556004356000526005835260406000203360005283528160406000205560405190838252827f9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c3393806106496004359589830190610e11565b0390a460018055604051908152f35b634e487b7160e01b600052604160045260246000fd5b01519050888061056c565b906003840160005260206000209160005b601f19851681106106d657509260c0949260019260069583601f198116106106bd575b505050811b016003820155610584565b015160001960f88460031b161c191690558880806106ad565b9192602060018192868501518155019401920161068a565b600384016000526020600020601f840160051c81016020851061072e575b601f830160051c8201811061072257505061054c565b6000815560010161070c565b508061070c565b60405162461bcd60e51b815260206004820152602160248201527f416c7265616479207375626d697474656420746f207468697320636f6e7465736044820152601d60fa1b6064820152608490fd5b34610121576000366003190112610121576020600254604051908152f35b34610121576020806003193601126101215760043560005260048152604060002060405190818382549182815201908192600052846000209060005b868282106108345786866107f482880383610e6d565b604051928392818401908285525180915260408401929160005b82811061081d57505050500390f35b83518552869550938101939281019260010161080e565b8354855290930192600192830192016107de565b34610121576020806003193601126101215760043590610866610fee565b81600052600391828252604060002061088560ff600683015416611011565b8160005260068352604060002033600052835260ff60406000205416156109fb5760079360019485946004868501549486600052600683526040600020336000528352604060002060ff198154169055016108e0815461105d565b9055836000526008815260406000203360005281526000604081205584600052526040600020846000905b61093e575b50505033917fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586600080a48055005b8154808210156109f5576109528284610ea5565b90546001600160a01b039291861b1c8216331461097a57505061097490610fdf565b8561090b565b959650939491929160001981019081116109df576109d4946109cf936109a36109b09387610ea5565b9054911b1c169184610ea5565b90919082549060031b9160018060a01b03809116831b921b1916179055565b61106a565b908291848080610910565b634e487b7160e01b600052601160045260246000fd5b50610910565b60405162461bcd60e51b815260048101849052601160248201527012185d995b89dd081d9bdd1959081e595d607a1b6044820152606490fd5b346101215760208060031936011261012157600060c0604051610a5681610e51565b82815282848201528260408201526060808201528260808201528260a0820152015260043560005260038152604060002060405190610a9482610e51565b80548252600181015483830190815260028201546001600160a01b03908116604085019081529290610b2d90610acc60038401610f0d565b90606087019182526004840154956080880196875260ff600660058701549660a08b019788520154169560c089019615158752604051998a99818b5251908a0152516040890152511660608701525160e06080870152610100860190610e11565b925160a08501525160c084015251151560e08301520390f35b34610121576020806003193601126101215760043590610b64610fee565b81600052600391828252604060002092610b8460ff600686015416611011565b60028401546001600160a01b03939084163314610db75760019485948582015493846000526008845260406000203360005284526040600020549182151580610d95575b610c97575b505050836004929394955060005260068352604060002033600052835260406000208660ff1982541617905501610c048154610fdf565b905582600052600781526040600020805490600160401b8210156106585781610c349187610c5294018155610ea5565b81546001600160a01b0360039290921b91821b19163390911b179055565b816000526008815260406000209033600052528160406000205533917f7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc600080a48055005b8260005281855260046040600020600687526040600020336000528752604060002060ff19815416905501610ccc815461105d565b905582600052600785526040600020886000905b610d24575b50505050836004939495965033917fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586600080a485949392918780610bcd565b815480821015610d8f5783610d398385610ea5565b905490871b1c163314610d565750610d5090610fdf565b89610ce0565b96979899506000939192931987019687116109df576109b0610d82946109cf936109a360049a87610ea5565b8695949392888080610ce5565b50610ce5565b508260005260068552604060002033600052855260ff60406000205416610bc8565b6064906040519062461bcd60e51b82526004820152601e60248201527f43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e00006044820152fd5b602435906001600160a01b038216820361012157565b919082519283825260005b848110610e3d575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e1c565b60e0810190811067ffffffffffffffff82111761065857604052565b90601f8019910116810190811067ffffffffffffffff82111761065857604052565b6040906003190112610121576004359060243590565b8054821015610ebd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f03575b6020831014610eed57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ee2565b9060405191826000825492610f2184610ed3565b908184526001948581169081600014610f905750600114610f4d575b5050610f4b92500383610e6d565b565b9093915060005260209081600020936000915b818310610f78575050610f4b93508201013880610f3d565b85548884018501529485019487945091830191610f60565b915050610f4b94506020925060ff191682840152151560051b8201013880610f3d565b6000546001600160a01b03163303610fc757565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146109df5760010190565b600260015414610fff576002600155565b604051633ee5aeb560e01b8152600490fd5b1561101857565b60405162461bcd60e51b815260206004820152601960248201527f5375626d697373696f6e20646f6573206e6f74206578697374000000000000006044820152606490fd5b80156109df576000190190565b805480156110975760001901906110818282610ea5565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208bbdafba70089dc5ab6b0910f4035f47c4d677d08aa291ad8ee34eba184842ee64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x83 JUMPI CALLER ISZERO PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH2 0x10E3 SWAP1 DUP2 PUSH2 0x89 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0xB46 JUMPI DUP1 PUSH4 0x3687F7BF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x3E8686CC EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0x3F68FDE4 EQ PUSH2 0x848 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4C406C01 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x54554D46 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x56CE45B6 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x6C811686 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAD73349E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xD17BD67C EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDC296AE1 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDC37596D EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xDFA63E6C EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI PUSH4 0xFADFA4DC EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH2 0xF0 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x121 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x113 SWAP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x121 JUMPI PUSH2 0x155 PUSH2 0xFB3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x1CF PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x217 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x264 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x2D5 PUSH1 0x3 DUP4 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP2 PUSH2 0x310 PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x368 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH2 0x3B6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x121 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3D9 SWAP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x121 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x121 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x44C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x121 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x475 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x735 JUMPI PUSH1 0x2 SLOAD PUSH2 0x4A2 DUP2 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B1 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x658 JUMPI PUSH2 0x543 PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6EE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x679 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x66E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x658 JUMPI DUP4 PUSH2 0x5DC SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH32 0x9D9EC53E54F6385EC09428208C029BD27EB96263FC7B5DA62DB98ECC7D3F015C CALLER SWAP4 DUP1 PUSH2 0x649 PUSH1 0x4 CALLDATALOAD SWAP6 DUP10 DUP4 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x56C JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x6D6 JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x6BD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x584 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x6AD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x68A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x72E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x722 JUMPI POP POP PUSH2 0x54C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x70C JUMP JUMPDEST POP DUP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207375626D697474656420746F207468697320636F6E746573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x834 JUMPI DUP7 DUP7 PUSH2 0x7F4 DUP3 DUP9 SUB DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x81D JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x80E JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x7DE JUMP JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x866 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x885 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9FB JUMPI PUSH1 0x7 SWAP4 PUSH1 0x1 SWAP5 DUP6 SWAP5 PUSH1 0x4 DUP7 DUP6 ADD SLOAD SWAP5 DUP7 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0x8E0 DUP2 SLOAD PUSH2 0x105D JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x93E JUMPI JUMPDEST POP POP POP CALLER SWAP2 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 PUSH1 0x0 DUP1 LOG4 DUP1 SSTORE STOP JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x952 DUP3 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SHL SHR DUP3 AND CALLER EQ PUSH2 0x97A JUMPI POP POP PUSH2 0x974 SWAP1 PUSH2 0xFDF JUMP JUMPDEST DUP6 PUSH2 0x90B JUMP JUMPDEST SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP2 SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x9DF JUMPI PUSH2 0x9D4 SWAP5 PUSH2 0x9CF SWAP4 PUSH2 0x9A3 PUSH2 0x9B0 SWAP4 DUP8 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST SWAP1 DUP3 SWAP2 DUP5 DUP1 DUP1 PUSH2 0x910 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185D995B89DD081D9BDD1959081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0xA56 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA94 DUP3 PUSH2 0xE51 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 PUSH2 0xB2D SWAP1 PUSH2 0xACC PUSH1 0x3 DUP5 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP8 ADD SLOAD SWAP7 PUSH1 0xA0 DUP12 ADD SWAP8 DUP9 MSTORE ADD SLOAD AND SWAP6 PUSH1 0xC0 DUP10 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP2 DUP12 MSTORE MLOAD SWAP1 DUP11 ADD MSTORE MLOAD PUSH1 0x40 DUP10 ADD MSTORE MLOAD AND PUSH1 0x60 DUP8 ADD MSTORE MLOAD PUSH1 0xE0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD PUSH1 0xC0 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xB64 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0xB84 PUSH1 0xFF PUSH1 0x6 DUP7 ADD SLOAD AND PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND CALLER EQ PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP5 DUP6 SWAP5 DUP6 DUP3 ADD SLOAD SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0xD95 JUMPI JUMPDEST PUSH2 0xC97 JUMPI JUMPDEST POP POP POP DUP4 PUSH1 0x4 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xC04 DUP2 SLOAD PUSH2 0xFDF JUMP JUMPDEST SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x658 JUMPI DUP2 PUSH2 0xC34 SWAP2 DUP8 PUSH2 0xC52 SWAP5 ADD DUP2 SSTORE PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER SWAP2 PUSH32 0x7FE1D4E6B34E228B5DC059FCDC037C71B216FB2417F47C171E505144A5E4F5FC PUSH1 0x0 DUP1 LOG4 DUP1 SSTORE STOP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0xCCC DUP2 SLOAD PUSH2 0x105D JUMP JUMPDEST SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0xD24 JUMPI JUMPDEST POP POP POP POP DUP4 PUSH1 0x4 SWAP4 SWAP5 SWAP6 SWAP7 POP CALLER SWAP2 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 PUSH1 0x0 DUP1 LOG4 DUP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 DUP1 PUSH2 0xBCD JUMP JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0xD8F JUMPI DUP4 PUSH2 0xD39 DUP4 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND CALLER EQ PUSH2 0xD56 JUMPI POP PUSH2 0xD50 SWAP1 PUSH2 0xFDF JUMP JUMPDEST DUP10 PUSH2 0xCE0 JUMP JUMPDEST SWAP7 SWAP8 SWAP9 SWAP10 POP PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP4 NOT DUP8 ADD SWAP7 DUP8 GT PUSH2 0x9DF JUMPI PUSH2 0x9B0 PUSH2 0xD82 SWAP5 PUSH2 0x9CF SWAP4 PUSH2 0x9A3 PUSH1 0x4 SWAP11 DUP8 PUSH2 0xEA5 JUMP JUMPDEST DUP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP9 DUP1 DUP1 PUSH2 0xCE5 JUMP JUMPDEST POP PUSH2 0xCE5 JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420766F746520666F72206F776E207375626D697373696F6E0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x121 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xE3D JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE1C JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x658 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x658 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF03 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xEED JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF21 DUP5 PUSH2 0xED3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xF90 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF4D JUMPI JUMPDEST POP POP PUSH2 0xF4B SWAP3 POP SUB DUP4 PUSH2 0xE6D JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xF78 JUMPI POP POP PUSH2 0xF4B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xF3D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF4B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xFC7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9DF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xFFF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1018 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E20646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1081 DUP3 DUP3 PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD 0xAF 0xBA PUSH17 0x89DC5AB6B0910F4035F47C4D677D08AA2 SWAP2 0xAD DUP15 0xE3 0x4E 0xBA XOR BASEFEE TIMESTAMP 0xEE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"264:6200:3:-:0;;;;;;;1728:10;1273:26:0;1269:95;;1297:1;264:6200:3;;1728:10;-1:-1:-1;;;;;;264:6200:3;;;;;;;;;1728:10;;-1:-1:-1;;;;;264:6200:3;;3052:40:0;;1297:1;3052:40;264:6200:3;;;;599:1;264:6200;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;1297:1;1322:31;;;264:6200:3;;;1322:31:0;264:6200:3;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3579,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":3727,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_string":{"entryPoint":3601,"id":null,"parameterSlots":2,"returnSlots":1},"array_pop_array_address_dyn_storage_ptr":{"entryPoint":4202,"id":null,"parameterSlots":1,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":3853,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_uint256":{"entryPoint":4189,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3795,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3693,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14770":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":4019,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":4078,"id":226,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":4063,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_a822":{"entryPoint":4113,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":3749,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630121b93f14610b465780633687f7bf1461024b5780633e8686cc14610a345780633f68fde41461084857806343859632146101fe5780634c406c01146107a257806354554d461461078457806356ce45b6146103f25780636c811686146103a8578063715018a61461034f5780638da5cb5b14610326578063ad73349e14610293578063d17bd67c1461024b578063dc296ae1146101fe578063dc37596d146101b6578063dfa63e6c146101b6578063f2fde38b146101265763fadfa4dc146100e257600080fd5b34610121576100f036610e8f565b906000526004602052604060002080548210156101215760209161011391610ea5565b90546040519160031b1c8152f35b600080fd5b34610121576020366003190112610121576004356001600160a01b038181169182900361012157610155610fb3565b811561019d57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b34610121576040366003190112610121576101cf610dfb565b600435600052600860205260406000209060018060a01b03166000526020526020604060002054604051908152f35b3461012157604036600319011261012157610217610dfb565b600435600052600660205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b3461012157604036600319011261012157610264610dfb565b600435600052600560205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346101215760203660031901126101215760043560005260036020526040600020805460018201549160018060a01b036002820154166102d560038301610f0d565b9161031060048201549360ff60066005850154940154169360405197889788526020880152604087015260e0606087015260e0860190610e11565b92608085015260a0840152151560c08301520390f35b34610121576000366003190112610121576000546040516001600160a01b039091168152602090f35b3461012157600036600319011261012157610368610fb3565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610121576103b636610e8f565b90600052600760205260406000208054821015610121576020916103d991610ea5565b905460405160039290921b1c6001600160a01b03168152f35b346101215760403660031901126101215760243567ffffffffffffffff8111610121573660238201121561012157806004013567ffffffffffffffff8111610658576040519161044c601f8301601f191660200184610e6d565b818352366024838301011161012157816000926024602093018386013783010152610475610fee565b6004356000526005602052604060002033600052602052604060002054610735576002546104a281610fdf565b6002556040516104b181610e51565b8181526004356020820152336040820152826060820152600060808201524260a0820152600160c0820152816000526003602052604060002081518155602082015160018201556002810160018060a01b036040840151166bffffffffffffffffffffffff60a01b825416179055606082015180519067ffffffffffffffff8211610658576105436003840154610ed3565b601f81116106ee575b50602090601f831160011461067957918060c0949260069460009261066e575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015501910151151560ff801983541691161790556004356000526004602052604060002091825492600160401b84101561065857836105dc916001602096018155610ea5565b81549060031b9084821b91600019901b19161790556004356000526005835260406000203360005283528160406000205560405190838252827f9d9ec53e54f6385ec09428208c029bd27eb96263fc7b5da62db98ecc7d3f015c3393806106496004359589830190610e11565b0390a460018055604051908152f35b634e487b7160e01b600052604160045260246000fd5b01519050888061056c565b906003840160005260206000209160005b601f19851681106106d657509260c0949260019260069583601f198116106106bd575b505050811b016003820155610584565b015160001960f88460031b161c191690558880806106ad565b9192602060018192868501518155019401920161068a565b600384016000526020600020601f840160051c81016020851061072e575b601f830160051c8201811061072257505061054c565b6000815560010161070c565b508061070c565b60405162461bcd60e51b815260206004820152602160248201527f416c7265616479207375626d697474656420746f207468697320636f6e7465736044820152601d60fa1b6064820152608490fd5b34610121576000366003190112610121576020600254604051908152f35b34610121576020806003193601126101215760043560005260048152604060002060405190818382549182815201908192600052846000209060005b868282106108345786866107f482880383610e6d565b604051928392818401908285525180915260408401929160005b82811061081d57505050500390f35b83518552869550938101939281019260010161080e565b8354855290930192600192830192016107de565b34610121576020806003193601126101215760043590610866610fee565b81600052600391828252604060002061088560ff600683015416611011565b8160005260068352604060002033600052835260ff60406000205416156109fb5760079360019485946004868501549486600052600683526040600020336000528352604060002060ff198154169055016108e0815461105d565b9055836000526008815260406000203360005281526000604081205584600052526040600020846000905b61093e575b50505033917fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586600080a48055005b8154808210156109f5576109528284610ea5565b90546001600160a01b039291861b1c8216331461097a57505061097490610fdf565b8561090b565b959650939491929160001981019081116109df576109d4946109cf936109a36109b09387610ea5565b9054911b1c169184610ea5565b90919082549060031b9160018060a01b03809116831b921b1916179055565b61106a565b908291848080610910565b634e487b7160e01b600052601160045260246000fd5b50610910565b60405162461bcd60e51b815260048101849052601160248201527012185d995b89dd081d9bdd1959081e595d607a1b6044820152606490fd5b346101215760208060031936011261012157600060c0604051610a5681610e51565b82815282848201528260408201526060808201528260808201528260a0820152015260043560005260038152604060002060405190610a9482610e51565b80548252600181015483830190815260028201546001600160a01b03908116604085019081529290610b2d90610acc60038401610f0d565b90606087019182526004840154956080880196875260ff600660058701549660a08b019788520154169560c089019615158752604051998a99818b5251908a0152516040890152511660608701525160e06080870152610100860190610e11565b925160a08501525160c084015251151560e08301520390f35b34610121576020806003193601126101215760043590610b64610fee565b81600052600391828252604060002092610b8460ff600686015416611011565b60028401546001600160a01b03939084163314610db75760019485948582015493846000526008845260406000203360005284526040600020549182151580610d95575b610c97575b505050836004929394955060005260068352604060002033600052835260406000208660ff1982541617905501610c048154610fdf565b905582600052600781526040600020805490600160401b8210156106585781610c349187610c5294018155610ea5565b81546001600160a01b0360039290921b91821b19163390911b179055565b816000526008815260406000209033600052528160406000205533917f7fe1d4e6b34e228b5dc059fcdc037c71b216fb2417f47c171e505144a5e4f5fc600080a48055005b8260005281855260046040600020600687526040600020336000528752604060002060ff19815416905501610ccc815461105d565b905582600052600785526040600020886000905b610d24575b50505050836004939495965033917fc6d38efeed0d17048786612d20fac3647ee276a58b750899aecb7e7440117586600080a485949392918780610bcd565b815480821015610d8f5783610d398385610ea5565b905490871b1c163314610d565750610d5090610fdf565b89610ce0565b96979899506000939192931987019687116109df576109b0610d82946109cf936109a360049a87610ea5565b8695949392888080610ce5565b50610ce5565b508260005260068552604060002033600052855260ff60406000205416610bc8565b6064906040519062461bcd60e51b82526004820152601e60248201527f43616e6e6f7420766f746520666f72206f776e207375626d697373696f6e00006044820152fd5b602435906001600160a01b038216820361012157565b919082519283825260005b848110610e3d575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e1c565b60e0810190811067ffffffffffffffff82111761065857604052565b90601f8019910116810190811067ffffffffffffffff82111761065857604052565b6040906003190112610121576004359060243590565b8054821015610ebd5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015610f03575b6020831014610eed57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ee2565b9060405191826000825492610f2184610ed3565b908184526001948581169081600014610f905750600114610f4d575b5050610f4b92500383610e6d565b565b9093915060005260209081600020936000915b818310610f78575050610f4b93508201013880610f3d565b85548884018501529485019487945091830191610f60565b915050610f4b94506020925060ff191682840152151560051b8201013880610f3d565b6000546001600160a01b03163303610fc757565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146109df5760010190565b600260015414610fff576002600155565b604051633ee5aeb560e01b8152600490fd5b1561101857565b60405162461bcd60e51b815260206004820152601960248201527f5375626d697373696f6e20646f6573206e6f74206578697374000000000000006044820152606490fd5b80156109df576000190190565b805480156110975760001901906110818282610ea5565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b600052603160045260246000fdfea26469706673582212208bbdafba70089dc5ab6b0910f4035f47c4d677d08aa291ad8ee34eba184842ee64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0xB46 JUMPI DUP1 PUSH4 0x3687F7BF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x3E8686CC EQ PUSH2 0xA34 JUMPI DUP1 PUSH4 0x3F68FDE4 EQ PUSH2 0x848 JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4C406C01 EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0x54554D46 EQ PUSH2 0x784 JUMPI DUP1 PUSH4 0x56CE45B6 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x6C811686 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xAD73349E EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0xD17BD67C EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xDC296AE1 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDC37596D EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xDFA63E6C EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI PUSH4 0xFADFA4DC EQ PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH2 0xF0 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x121 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x113 SWAP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x121 JUMPI PUSH2 0x155 PUSH2 0xFB3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x1CF PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x217 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x264 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x2D5 PUSH1 0x3 DUP4 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP2 PUSH2 0x310 PUSH1 0x4 DUP3 ADD SLOAD SWAP4 PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD AND SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP3 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x368 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH2 0x3B6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x121 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3D9 SWAP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x121 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x121 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x44C PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x121 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x475 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x735 JUMPI PUSH1 0x2 SLOAD PUSH2 0x4A2 DUP2 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B1 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x658 JUMPI PUSH2 0x543 PUSH1 0x3 DUP5 ADD SLOAD PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6EE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x679 JUMPI SWAP2 DUP1 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x66E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 LT ISZERO PUSH2 0x658 JUMPI DUP4 PUSH2 0x5DC SWAP2 PUSH1 0x1 PUSH1 0x20 SWAP7 ADD DUP2 SSTORE PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP5 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP4 DUP3 MSTORE DUP3 PUSH32 0x9D9EC53E54F6385EC09428208C029BD27EB96263FC7B5DA62DB98ECC7D3F015C CALLER SWAP4 DUP1 PUSH2 0x649 PUSH1 0x4 CALLDATALOAD SWAP6 DUP10 DUP4 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x56C JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x6D6 JUMPI POP SWAP3 PUSH1 0xC0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x6 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x6BD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x584 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x6AD JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x68A JUMP JUMPDEST PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x72E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x722 JUMPI POP POP PUSH2 0x54C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x70C JUMP JUMPDEST POP DUP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207375626D697474656420746F207468697320636F6E746573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP3 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x834 JUMPI DUP7 DUP7 PUSH2 0x7F4 DUP3 DUP9 SUB DUP4 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x81D JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x80E JUMP JUMPDEST DUP4 SLOAD DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x7DE JUMP JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x866 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x885 PUSH1 0xFF PUSH1 0x6 DUP4 ADD SLOAD AND PUSH2 0x1011 JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x9FB JUMPI PUSH1 0x7 SWAP4 PUSH1 0x1 SWAP5 DUP6 SWAP5 PUSH1 0x4 DUP7 DUP6 ADD SLOAD SWAP5 DUP7 PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0x8E0 DUP2 SLOAD PUSH2 0x105D JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP5 PUSH1 0x0 MSTORE MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0x93E JUMPI JUMPDEST POP POP POP CALLER SWAP2 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 PUSH1 0x0 DUP1 LOG4 DUP1 SSTORE STOP JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x9F5 JUMPI PUSH2 0x952 DUP3 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SHL SHR DUP3 AND CALLER EQ PUSH2 0x97A JUMPI POP POP PUSH2 0x974 SWAP1 PUSH2 0xFDF JUMP JUMPDEST DUP6 PUSH2 0x90B JUMP JUMPDEST SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP2 SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x9DF JUMPI PUSH2 0x9D4 SWAP5 PUSH2 0x9CF SWAP4 PUSH2 0x9A3 PUSH2 0x9B0 SWAP4 DUP8 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 DUP5 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST SWAP1 DUP3 SWAP2 DUP5 DUP1 DUP1 PUSH2 0x910 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12185D995B89DD081D9BDD1959081E595D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0xA56 DUP2 PUSH2 0xE51 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xA94 DUP3 PUSH2 0xE51 JUMP JUMPDEST DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE SWAP3 SWAP1 PUSH2 0xB2D SWAP1 PUSH2 0xACC PUSH1 0x3 DUP5 ADD PUSH2 0xF0D JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP5 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE PUSH1 0xFF PUSH1 0x6 PUSH1 0x5 DUP8 ADD SLOAD SWAP7 PUSH1 0xA0 DUP12 ADD SWAP8 DUP9 MSTORE ADD SLOAD AND SWAP6 PUSH1 0xC0 DUP10 ADD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP2 DUP12 MSTORE MLOAD SWAP1 DUP11 ADD MSTORE MLOAD PUSH1 0x40 DUP10 ADD MSTORE MLOAD AND PUSH1 0x60 DUP8 ADD MSTORE MLOAD PUSH1 0xE0 PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD SWAP1 PUSH2 0xE11 JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xA0 DUP6 ADD MSTORE MLOAD PUSH1 0xC0 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0xB64 PUSH2 0xFEE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0xB84 PUSH1 0xFF PUSH1 0x6 DUP7 ADD SLOAD AND PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 DUP5 AND CALLER EQ PUSH2 0xDB7 JUMPI PUSH1 0x1 SWAP5 DUP6 SWAP5 DUP6 DUP3 ADD SLOAD SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x8 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 DUP3 ISZERO ISZERO DUP1 PUSH2 0xD95 JUMPI JUMPDEST PUSH2 0xC97 JUMPI JUMPDEST POP POP POP DUP4 PUSH1 0x4 SWAP3 SWAP4 SWAP5 SWAP6 POP PUSH1 0x0 MSTORE PUSH1 0x6 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0xC04 DUP2 SLOAD PUSH2 0xFDF JUMP JUMPDEST SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x658 JUMPI DUP2 PUSH2 0xC34 SWAP2 DUP8 PUSH2 0xC52 SWAP5 ADD DUP2 SSTORE PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 CALLER PUSH1 0x0 MSTORE MSTORE DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE CALLER SWAP2 PUSH32 0x7FE1D4E6B34E228B5DC059FCDC037C71B216FB2417F47C171E505144A5E4F5FC PUSH1 0x0 DUP1 LOG4 DUP1 SSTORE STOP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP8 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE ADD PUSH2 0xCCC DUP2 SLOAD PUSH2 0x105D JUMP JUMPDEST SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x7 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP9 PUSH1 0x0 SWAP1 JUMPDEST PUSH2 0xD24 JUMPI JUMPDEST POP POP POP POP DUP4 PUSH1 0x4 SWAP4 SWAP5 SWAP6 SWAP7 POP CALLER SWAP2 PUSH32 0xC6D38EFEED0D17048786612D20FAC3647EE276A58B750899AECB7E7440117586 PUSH1 0x0 DUP1 LOG4 DUP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 DUP1 PUSH2 0xBCD JUMP JUMPDEST DUP2 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0xD8F JUMPI DUP4 PUSH2 0xD39 DUP4 DUP6 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP8 SHL SHR AND CALLER EQ PUSH2 0xD56 JUMPI POP PUSH2 0xD50 SWAP1 PUSH2 0xFDF JUMP JUMPDEST DUP10 PUSH2 0xCE0 JUMP JUMPDEST SWAP7 SWAP8 SWAP9 SWAP10 POP PUSH1 0x0 SWAP4 SWAP2 SWAP3 SWAP4 NOT DUP8 ADD SWAP7 DUP8 GT PUSH2 0x9DF JUMPI PUSH2 0x9B0 PUSH2 0xD82 SWAP5 PUSH2 0x9CF SWAP4 PUSH2 0x9A3 PUSH1 0x4 SWAP11 DUP8 PUSH2 0xEA5 JUMP JUMPDEST DUP7 SWAP6 SWAP5 SWAP4 SWAP3 DUP9 DUP1 DUP1 PUSH2 0xCE5 JUMP JUMPDEST POP PUSH2 0xCE5 JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420766F746520666F72206F776E207375626D697373696F6E0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x121 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xE3D JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE1C JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x658 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x658 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xF03 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xEED JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xF21 DUP5 PUSH2 0xED3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xF90 JUMPI POP PUSH1 0x1 EQ PUSH2 0xF4D JUMPI JUMPDEST POP POP PUSH2 0xF4B SWAP3 POP SUB DUP4 PUSH2 0xE6D JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xF78 JUMPI POP POP PUSH2 0xF4B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xF3D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xF60 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF4B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xFC7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x9DF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0xFFF JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1018 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5375626D697373696F6E20646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP1 ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x1081 DUP3 DUP3 PUSH2 0xEA5 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xBD 0xAF 0xBA PUSH17 0x89DC5AB6B0910F4035F47C4D677D08AA2 SWAP2 0xAD DUP15 0xE3 0x4E 0xBA XOR BASEFEE TIMESTAMP 0xEE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"264:6200:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;735:55;;;;;264:6200;735:55;;;;:::i;:::-;264:6200;;;;;;;;;;;735:55;264:6200;735:55;;264:6200;;;;;;-1:-1:-1;;264:6200:3;;;;;;-1:-1:-1;;;;;264:6200:3;;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;264:6200:3;;;;;;;;;;;;3052:40:0;264:6200:3;3052:40:0;;264:6200:3;2623:91:0;264:6200:3;;-1:-1:-1;;;2672:31:0;;264:6200:3;;2672:31:0;;264:6200:3;;;2672:31:0;264:6200:3;;;;;;-1:-1:-1;;264:6200:3;;;;;;:::i;:::-;;;;;6428:8;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;:::i;:::-;;;;;6173:8;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;:::i;:::-;;;;;826:69;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;;;;;;;;;;;;680:49;;264:6200;;;;;;;680:49;;;264:6200;;680:49;264:6200;680:49;;;:::i;:::-;;264:6200;;680:49;;264:6200;680:49;264:6200;680:49;;;;264:6200;680:49;;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;;;-1:-1:-1;;;;;264:6200:3;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;1500:62:0;;:::i;:::-;264:6200:3;;;-1:-1:-1;;;;;;264:6200:3;;;;-1:-1:-1;;;;;264:6200:3;3052:40:0;264:6200:3;;3052:40:0;264:6200:3;;;;;;;;:::i;:::-;;;;1037:53;264:6200;;;;;;;1037:53;;;;;264:6200;1037:53;;;;:::i;:::-;264:6200;;;;;;;;;;-1:-1:-1;;;;;264:6200:3;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;:::i;:::-;264:6200:3;;;;1958:14;264:6200;;;;;1985:10;264:6200;;;;;;;;;;2081:22;264:6200;2081:22;;;:::i;:::-;;264:6200;;;;;;:::i;:::-;;;;;;;2150:253;;264:6200;1985:10;264:6200;2150:253;;264:6200;2150:253;;;;264:6200;;2150:253;;;264:6200;2351:15;2150:253;;;264:6200;;2150:253;;;264:6200;;;;;;;;;;;;;;;2150:253;;264:6200;;;;;2081:22;264:6200;;;;;;;;2150:253;;264:6200;;;;;;;;;;;2150:253;;;264:6200;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2150:253;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2150:253;;;264:6200;;;;;2150:253;;;264:6200;1958:14;264:6200;;;;2150:253;;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1958:14;264:6200;;;;;1985:10;264:6200;;;;;;;;;;;;;;;1985:10;2558:69;1985:10;264:6200;;;;;;;;;;;:::i;:::-;2558:69;;;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:6200:3;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;;;;2150:253;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:14;264:6200;;;;;;;;;;;;1958:14;264:6200;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:6200:3;;;;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;;;;5961:20;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;;:::i;:::-;264:6200:3;;;;;;;;;;;4459:55;264:6200;4467:17;;;264:6200;;4459:55;:::i;:::-;264:6200;;;4467:17;264:6200;;;;;4556:10;264:6200;;;;;;;;;;;;;4833:16;264:6200;;4628:20;;;264:6200;4628:20;;;264:6200;;;;;4467:17;264:6200;;;;;4556:10;264:6200;;;;;;;;;;;;;;4720:20;:22;264:6200;;4720:22;:::i;:::-;264:6200;;;;;4752:8;264:6200;;;;;4556:10;264:6200;;;;;;;;;;;;;;;;4879:13;264:6200;4874:220;264:6200;;;4874:220;4556:10;;;;5117:49;;264:6200;5117:49;;264:6200;;;4913:3;264:6200;;4894:17;;;;;;4936:9;;;;:::i;:::-;264:6200;;-1:-1:-1;;;;;264:6200:3;;;;;;;4556:10;4936:23;4932:152;;4913:3;;;;;:::i;:::-;4879:13;;;4932:152;264:6200;;-1:-1:-1;264:6200:3;;;;;-1:-1:-1;;264:6200:3;;;;;;;5034:10;4991:25;4979:37;4991:25;;4979:9;4991:25;;;:::i;:::-;264:6200;;;;;;4979:9;;;:::i;:::-;:37;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;4979:37;5034:10;:::i;:::-;5064:5;;;;;;;;264:6200;;;;;;;;;;;;4894:17;;;;264:6200;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;264:6200:3;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:2;;;:::i;:::-;264:6200:3;;;;;;;;;;;2884:17;2876:55;264:6200;2884:17;;;264:6200;;2876:55;:::i;:::-;2949:20;;;264:6200;-1:-1:-1;;;;;264:6200:3;;;;2973:10;2949:34;264:6200;;;3057:20;;;;;;264:6200;;;;;3110:8;264:6200;;;;;2973:10;264:6200;;;;;;;;3236:17;;;;:55;;;264:6200;3232:723;;264:6200;;;;;;;;;;;;;2884:17;264:6200;;;;;2973:10;264:6200;;;;;;;;;;;;;;;;4050:20;:22;264:6200;;4050:22;:::i;:::-;264:6200;;;;;4082:16;264:6200;;;;;;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;264:6200:3;;;;;;;;;;2973:10;264:6200;;;;;;;;;;;3110:8;264:6200;;;;;2973:10;;264:6200;;;;;;;;2973:10;4211:46;;264:6200;4211:46;;264:6200;;;3232:723;264:6200;;;;;;;;;;2884:17;264:6200;;;;;2973:10;264:6200;;;;;;;;;;;;;;3437:23;:25;264:6200;;3437:25;:::i;:::-;264:6200;;;;;3559:16;264:6200;;;;;3608:13;264:6200;3603:262;264:6200;;;3603:262;2973:10;;;;;264:6200;2973:10;;;;;;3896:48;;264:6200;3896:48;;3232:723;;;;;;;;;3645:3;264:6200;;3623:20;;;;;;3672:12;;;;;:::i;:::-;264:6200;;;;;;;2973:10;3672:26;3668:183;;3645:3;;;;:::i;:::-;3608:13;;;3668:183;264:6200;;;;;;;;;;;;;;;;;;3722:12;3790:13;3737:31;3722:46;3737:31;;264:6200;3737:31;;;:::i;3790:13::-;3827:5;;;;;;;;;;3623:20;;;;3236:55;264:6200;;;;2884:17;264:6200;;;;;2973:10;264:6200;;;;;;;;;;3236:55;;264:6200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;264:6200:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;264:6200:3;;-1:-1:-1;264:6200:3;;;-1:-1:-1;264:6200:3;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:6200:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;264:6200:3;;;;-1:-1:-1;264:6200:3;;-1:-1:-1;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;264:6200:3;-1:-1:-1;;;;;264:6200:3;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;264:6200:3;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;264:6200:3;;;1901:40:0;264:6200:3;-1:-1:-1;;264:6200:3;;;;;;;:::o;2575:307:2:-;1899:1;2702:7;264:6200:3;2702:18:2;2698:86;;1899:1;2702:7;264:6200:3;2575:307:2:o;2698:86::-;264:6200:3;;-1:-1:-1;;;2743:30:2;;;;;264:6200:3;;;;:::o;:::-;;;-1:-1:-1;;;264:6200:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;264:6200:3;;:::o;:::-;;;;;;;-1:-1:-1;;264:6200:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"864600","executionCost":"70927","totalCost":"935527"},"external":{"contestSubmissions(uint256,uint256)":"7081","getContestSubmissions(uint256)":"infinite","getSubmission(uint256)":"infinite","getTotalSubmissions()":"2382","getUserSubmission(uint256,address)":"2492","getUserVoteInContest(uint256,address)":"2800","hasUserVoted(uint256,address)":"2768","hasVoted(uint256,address)":"2570","owner()":"2494","removeVote(uint256)":"infinite","renounceOwnership()":"28244","submissionVoters(uint256,uint256)":"6910","submissions(uint256)":"infinite","submitEntry(uint256,string)":"infinite","transferOwnership(address)":"28451","userSubmission(uint256,address)":"2734","userVote(uint256,address)":"2778","vote(uint256)":"infinite"}},"methodIdentifiers":{"contestSubmissions(uint256,uint256)":"fadfa4dc","getContestSubmissions(uint256)":"4c406c01","getSubmission(uint256)":"3e8686cc","getTotalSubmissions()":"54554d46","getUserSubmission(uint256,address)":"3687f7bf","getUserVoteInContest(uint256,address)":"dfa63e6c","hasUserVoted(uint256,address)":"dc296ae1","hasVoted(uint256,address)":"43859632","owner()":"8da5cb5b","removeVote(uint256)":"3f68fde4","renounceOwnership()":"715018a6","submissionVoters(uint256,uint256)":"6c811686","submissions(uint256)":"ad73349e","submitEntry(uint256,string)":"56ce45b6","transferOwnership(address)":"f2fde38b","userSubmission(uint256,address)":"d17bd67c","userVote(uint256,address)":"dc37596d","vote(uint256)":"0121b93f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"SubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"VoteRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contestSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"}],\"name\":\"getContestSubmissions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"getSubmission\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct SimpleVoting.Submission\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserSubmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserVoteInContest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasUserVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"removeVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"submissionVoters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"submissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contestId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"submitEntry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userSubmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_submissionId\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple voting contract - no contest factory bullshit\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"getContestSubmissions(uint256)\":{\"details\":\"Get all submissions for a contest\"},\"getSubmission(uint256)\":{\"details\":\"Get submission details\"},\"getTotalSubmissions()\":{\"details\":\"Get total submissions count\"},\"getUserSubmission(uint256,address)\":{\"details\":\"Get user's submission for a contest\"},\"getUserVoteInContest(uint256,address)\":{\"details\":\"Get which submission a user voted for in a contest (0 if no vote)\"},\"hasUserVoted(uint256,address)\":{\"details\":\"Check if user has voted for a submission\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeVote(uint256)\":{\"details\":\"Remove a vote\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitEntry(uint256,string)\":{\"details\":\"Submit an entry to a contest\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256)\":{\"details\":\"Cast a vote for a submission\"}},\"title\":\"SimpleVoting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleVoting.sol\":\"SimpleVoting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/SimpleVoting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title SimpleVoting\\n * @dev Simple voting contract - no contest factory bullshit\\n */\\ncontract SimpleVoting is Ownable, ReentrancyGuard {\\n    \\n    struct Submission {\\n        uint256 id;\\n        uint256 contestId;\\n        address submitter;\\n        string metadataURI;\\n        uint256 voteCount;\\n        uint256 timestamp;\\n        bool exists;\\n    }\\n    \\n    // State variables\\n    uint256 private _submissionIdCounter = 1; // Start at 1 to avoid 0 (which means no submission)\\n    \\n    // Mappings\\n    mapping(uint256 => Submission) public submissions;\\n    mapping(uint256 => uint256[]) public contestSubmissions; // contestId => submissionIds\\n    mapping(uint256 => mapping(address => uint256)) public userSubmission; // contestId => user => submissionId\\n    mapping(uint256 => mapping(address => bool)) public hasVoted; // submissionId => voter => bool\\n    mapping(uint256 => address[]) public submissionVoters; // submissionId => voters\\n    mapping(uint256 => mapping(address => uint256)) public userVote; // contestId => user => submissionId voted for\\n    \\n    // Events\\n    event SubmissionCreated(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed submitter,\\n        string metadataURI\\n    );\\n    \\n    event VoteCast(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    event VoteRemoved(\\n        uint256 indexed submissionId,\\n        uint256 indexed contestId,\\n        address indexed voter\\n    );\\n    \\n    constructor() Ownable(msg.sender) {}\\n    \\n    /**\\n     * @dev Submit an entry to a contest\\n     */\\n    function submitEntry(\\n        uint256 _contestId,\\n        string memory _metadataURI\\n    ) external nonReentrant returns (uint256) {\\n        require(userSubmission[_contestId][msg.sender] == 0, \\\"Already submitted to this contest\\\");\\n        \\n        uint256 submissionId = _submissionIdCounter++;\\n        \\n        submissions[submissionId] = Submission({\\n            id: submissionId,\\n            contestId: _contestId,\\n            submitter: msg.sender,\\n            metadataURI: _metadataURI,\\n            voteCount: 0,\\n            timestamp: block.timestamp,\\n            exists: true\\n        });\\n        \\n        contestSubmissions[_contestId].push(submissionId);\\n        userSubmission[_contestId][msg.sender] = submissionId;\\n        \\n        emit SubmissionCreated(submissionId, _contestId, msg.sender, _metadataURI);\\n        \\n        return submissionId;\\n    }\\n    \\n    /**\\n     * @dev Cast a vote for a submission\\n     */\\n    function vote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        require(submission.submitter != msg.sender, \\\"Cannot vote for own submission\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        uint256 existingVote = userVote[contestId][msg.sender];\\n        \\n        // If user already voted in this contest, remove old vote first\\n        if (existingVote != 0 && hasVoted[existingVote][msg.sender]) {\\n            Submission storage oldSubmission = submissions[existingVote];\\n            hasVoted[existingVote][msg.sender] = false;\\n            oldSubmission.voteCount--;\\n            \\n            // Remove from voters array\\n            address[] storage oldVoters = submissionVoters[existingVote];\\n            for (uint256 i = 0; i < oldVoters.length; i++) {\\n                if (oldVoters[i] == msg.sender) {\\n                    oldVoters[i] = oldVoters[oldVoters.length - 1];\\n                    oldVoters.pop();\\n                    break;\\n                }\\n            }\\n            \\n            emit VoteRemoved(existingVote, contestId, msg.sender);\\n        }\\n        \\n        // Cast new vote\\n        hasVoted[_submissionId][msg.sender] = true;\\n        submission.voteCount++;\\n        submissionVoters[_submissionId].push(msg.sender);\\n        userVote[contestId][msg.sender] = _submissionId;\\n        \\n        emit VoteCast(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Remove a vote\\n     */\\n    function removeVote(uint256 _submissionId) external nonReentrant {\\n        Submission storage submission = submissions[_submissionId];\\n        require(submission.exists, \\\"Submission does not exist\\\");\\n        require(hasVoted[_submissionId][msg.sender], \\\"Haven't voted yet\\\");\\n        \\n        uint256 contestId = submission.contestId;\\n        \\n        hasVoted[_submissionId][msg.sender] = false;\\n        submission.voteCount--;\\n        userVote[contestId][msg.sender] = 0;\\n        \\n        address[] storage voters = submissionVoters[_submissionId];\\n        for (uint256 i = 0; i < voters.length; i++) {\\n            if (voters[i] == msg.sender) {\\n                voters[i] = voters[voters.length - 1];\\n                voters.pop();\\n                break;\\n            }\\n        }\\n        \\n        emit VoteRemoved(_submissionId, contestId, msg.sender);\\n    }\\n    \\n    /**\\n     * @dev Get submission details\\n     */\\n    function getSubmission(uint256 _submissionId) external view returns (Submission memory) {\\n        return submissions[_submissionId];\\n    }\\n    \\n    /**\\n     * @dev Get all submissions for a contest\\n     */\\n    function getContestSubmissions(uint256 _contestId) external view returns (uint256[] memory) {\\n        return contestSubmissions[_contestId];\\n    }\\n    \\n    /**\\n     * @dev Get user's submission for a contest\\n     */\\n    function getUserSubmission(uint256 _contestId, address _user) external view returns (uint256) {\\n        return userSubmission[_contestId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get total submissions count\\n     */\\n    function getTotalSubmissions() external view returns (uint256) {\\n        return _submissionIdCounter;\\n    }\\n    \\n    /**\\n     * @dev Check if user has voted for a submission\\n     */\\n    function hasUserVoted(uint256 _submissionId, address _user) external view returns (bool) {\\n        return hasVoted[_submissionId][_user];\\n    }\\n    \\n    /**\\n     * @dev Get which submission a user voted for in a contest (0 if no vote)\\n     */\\n    function getUserVoteInContest(uint256 _contestId, address _user) external view returns (uint256) {\\n        return userVote[_contestId][_user];\\n    }\\n}\\n\",\"keccak256\":\"0x14d1f73f931af61b75a933bc14c29caaac9d41dc937b6bbdb2cba294cdfc8aa3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":188,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":273,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"_submissionIdCounter","offset":0,"slot":"2","type":"t_uint256"},{"astId":278,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"submissions","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_struct(Submission)270_storage)"},{"astId":283,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"contestSubmissions","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"},{"astId":289,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"userSubmission","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":295,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"hasVoted","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_bool))"},{"astId":300,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"submissionVoters","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_array(t_address)dyn_storage)"},{"astId":306,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"userVote","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint256,t_array(t_uint256)dyn_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256[])","numberOfBytes":"32","value":"t_array(t_uint256)dyn_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_struct(Submission)270_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct SimpleVoting.Submission)","numberOfBytes":"32","value":"t_struct(Submission)270_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Submission)270_storage":{"encoding":"inplace","label":"struct SimpleVoting.Submission","members":[{"astId":257,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"id","offset":0,"slot":"0","type":"t_uint256"},{"astId":259,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"contestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":261,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"submitter","offset":0,"slot":"2","type":"t_address"},{"astId":263,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"metadataURI","offset":0,"slot":"3","type":"t_string_storage"},{"astId":265,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"voteCount","offset":0,"slot":"4","type":"t_uint256"},{"astId":267,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"timestamp","offset":0,"slot":"5","type":"t_uint256"},{"astId":269,"contract":"contracts/SimpleVoting.sol:SimpleVoting","label":"exists","offset":0,"slot":"6","type":"t_bool"}],"numberOfBytes":"224"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}